[project]
name = "accordo-workflow-mcp"
version = "0.8.3"
description = "Accordo MCP server with dynamic YAML workflow support"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastmcp",
    "pydantic",
    "PyYAML",
    "typer",
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
]

[project.scripts]
accordo-workflow-mcp = "accordo_workflow_mcp.server:main"
accordo = "accordo_cli.main:app"

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "twine",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "B", "SIM", "DTZ"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "mypy>=1.16.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.11",
    "vulture>=2.14",
]
