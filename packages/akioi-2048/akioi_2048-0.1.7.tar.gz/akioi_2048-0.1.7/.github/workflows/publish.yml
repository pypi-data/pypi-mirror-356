name: Build wheels & publish (skip 3.13)

on:
  push:
    tags: ['v*']            # 仅版本标签触发
  workflow_dispatch:

permissions:
  contents: read            # 只读即可

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    # ---------- 源码 ----------
    - uses: actions/checkout@v4

    # ---------- 缓存 ----------
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}

    # ---------- 基础工具 ----------
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'       # 仅供运行 cibuildwheel 本身

    - name: Install build tooling
      run: |
        python -m pip install -U pip
        # cibuildwheel ≥2.20 支持 3.13，但我们随后跳过它
        pip install "cibuildwheel>=2.20" maturin build

    # ---------- 构建 wheels ----------
    - name: Build wheels (skip 3.13)
      run: python -m cibuildwheel --output-dir dist
      env:
        # 跳过 PyPy 与 CPython 3.13
        CIBW_SKIP: "pp* cp313-*"
        # manylinux 容器内安装 Rust
        CIBW_BEFORE_ALL_LINUX: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal
        CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"

    # ---------- 构建 sdist ----------
    - name: Build source distribution
      run: python -m build --sdist --outdir dist

    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*

    # ---------- 发布到 PyPI ----------
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: dist
        skip_existing: true
