name: Build wheels & publish (skip 3.13)

on:
  push:
    tags: ['v*']          # 只有打 vX.Y.Z 标签才发布

permissions:
  contents: read          # 无需写权限
  # 如果改回 OIDC，可再加 id-token: write

jobs:
# ------------------------------------------------------------
# 1) wheels : 3 OS × 多 Python（自动基于 requires-python，但排除 3.13）
# ------------------------------------------------------------
  wheels:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # ---------- 缓存 ----------
      - uses: actions/cache@v4
        with:
          path: |
            ${{ github.env.HOME || env.HOME }}/.cargo/registry
            ${{ github.env.HOME || env.HOME }}/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - uses: actions/cache@v4
        with:
          path: ${{ github.env.HOME || env.HOME }}/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}

      # ---------- 安装 Python & Rust ----------
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }

      # host 侧装 Rust（多平台通用）
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install build tooling
        run: |
          python -m pip install -U pip
          # cibuildwheel ≥2.20 已内置 3.13 支持 —— 我们随后跳过即可
          pip install "cibuildwheel>=2.20" maturin build

      # ---------- 构建轮子 ----------
      - name: Build wheels (skip 3.13 & PyPy)
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "pp* cp313-*"
          # Linux 容器内还需再装一次 rustup
          CIBW_BEFORE_ALL_LINUX: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal
          CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"

      # 保存每个平台的产物
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

# ------------------------------------------------------------
# 2) sdist : 只在 Linux 打一次源包
# ------------------------------------------------------------
  sdist:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Build sdist
        run: |
          python -m pip install -U build
          python -m build --sdist --outdir dist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

# ------------------------------------------------------------
# 3) publish : 汇总所有产物并上传 PyPI
# ------------------------------------------------------------
  publish:
    needs: [wheels, sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          merge-multiple: true          # 合并 wheels + sdist → ./artifact-*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: .
          skip_existing: true
