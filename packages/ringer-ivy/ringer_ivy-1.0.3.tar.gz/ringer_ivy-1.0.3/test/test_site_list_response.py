# coding: utf-8

"""
    Ringer Business API - Sites Management

    This API provides endpoints for managing Sites within a Ringer Business account. Sites are collections of telephony features and can represent physical locations, departments, or logical groupings of phone system behaviors.  Developers can use this API to: - List all sites for an account. - Create a new site. - Retrieve details of a specific site. - Update an existing site's configuration. - Delete a site (and its associated features). - Rebuild a site's configuration with the call processing system. - List potential destinations and failovers for site features.  Site management often involves configuring various telephony features, which will be detailed in separate feature-specific API documents (e.g., devices, phone numbers, menus). 

    The version of the OpenAPI document: 1.0.0
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer_business.models.site_list_response import SiteListResponse

class TestSiteListResponse(unittest.TestCase):
    """SiteListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteListResponse:
        """Test SiteListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteListResponse`
        """
        model = SiteListResponse()
        if include_optional:
            return SiteListResponse(
                sites = [
                    {"id":6,"name":"Main Office Site","dns_extension":"hq","dns_name":"hq.ivy.teliax.com","active":true,"caller_id_name":"Teliax Inc HQ","caller_id_number":"+13035551212","thin_client_id":12,"thin_client_name":"Denver Bonsai 7","acl":"0.0.0.0/0","channel_limit":55,"music_on_hold_url":"https://cdn.example.com/moh/default.mp3","permitted_country_codes":["US","CA"],"links":[{"href":"/sites/6","rel":"self","method":"GET"},{"href":"/sites/6/devices","rel":"devices","title":"Manage Devices for this Site","method":"GET"}]}
                    ]
            )
        else:
            return SiteListResponse(
                sites = [
                    {"id":6,"name":"Main Office Site","dns_extension":"hq","dns_name":"hq.ivy.teliax.com","active":true,"caller_id_name":"Teliax Inc HQ","caller_id_number":"+13035551212","thin_client_id":12,"thin_client_name":"Denver Bonsai 7","acl":"0.0.0.0/0","channel_limit":55,"music_on_hold_url":"https://cdn.example.com/moh/default.mp3","permitted_country_codes":["US","CA"],"links":[{"href":"/sites/6","rel":"self","method":"GET"},{"href":"/sites/6/devices","rel":"devices","title":"Manage Devices for this Site","method":"GET"}]}
                    ],
        )
        """

    def testSiteListResponse(self):
        """Test SiteListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
