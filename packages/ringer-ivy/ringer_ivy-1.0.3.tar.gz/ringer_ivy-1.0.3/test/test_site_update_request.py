# coding: utf-8

"""
    Ringer Business API - Sites Management

    This API provides endpoints for managing Sites within a Ringer Business account. Sites are collections of telephony features and can represent physical locations, departments, or logical groupings of phone system behaviors.  Developers can use this API to: - List all sites for an account. - Create a new site. - Retrieve details of a specific site. - Update an existing site's configuration. - Delete a site (and its associated features). - Rebuild a site's configuration with the call processing system. - List potential destinations and failovers for site features.  Site management often involves configuring various telephony features, which will be detailed in separate feature-specific API documents (e.g., devices, phone numbers, menus). 

    The version of the OpenAPI document: 1.0.0
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer_business.models.site_update_request import SiteUpdateRequest

class TestSiteUpdateRequest(unittest.TestCase):
    """SiteUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteUpdateRequest:
        """Test SiteUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteUpdateRequest`
        """
        model = SiteUpdateRequest()
        if include_optional:
            return SiteUpdateRequest(
                name = 'Main Office Site - Updated',
                dns_extension = 'hq-updated',
                active = False,
                caller_id_name = 'Innovatech Solutions (Renovated)',
                caller_id_number = '+14155550199',
                thin_client_id = 13,
                acl = '192.168.1.0/24',
                channel_limit = 60,
                permitted_country_codes = ["US","MX"],
                music_on_hold_url = 'https://cdn.example.com/moh/new_music.mp3'
            )
        else:
            return SiteUpdateRequest(
        )
        """

    def testSiteUpdateRequest(self):
        """Test SiteUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
