# coding: utf-8

"""
    Ringer Business API - Thin Clients

    This API provides an endpoint for listing available Thin Clients. Thin Clients are nodes that handle call processing for Sites. When configuring a Site, a Thin Client needs to be assigned to it. This endpoint helps developers retrieve the list of available thin clients to present as options to users. 

    The version of the OpenAPI document: 1.0.0
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer_business.models.thin_client_list_response import ThinClientListResponse

class TestThinClientListResponse(unittest.TestCase):
    """ThinClientListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ThinClientListResponse:
        """Test ThinClientListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ThinClientListResponse`
        """
        model = ThinClientListResponse()
        if include_optional:
            return ThinClientListResponse(
                thin_clients = [
                    {"id":11,"name":"Denver - Bonsai 5","active":true,"category":"public","ipv4_address":"63.211.239.115","provider":"Teliax Inc.","identification":"00-21-5e-96-e3-bc"}
                    ]
            )
        else:
            return ThinClientListResponse(
                thin_clients = [
                    {"id":11,"name":"Denver - Bonsai 5","active":true,"category":"public","ipv4_address":"63.211.239.115","provider":"Teliax Inc.","identification":"00-21-5e-96-e3-bc"}
                    ],
        )
        """

    def testThinClientListResponse(self):
        """Test ThinClientListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
