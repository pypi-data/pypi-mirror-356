# coding: utf-8

"""
    Ringer Business API - Phone Number Management

    This API provides endpoints for managing phone numbers within a Ringer Business account and its sites. Phone numbers are essential for making and receiving calls and can be routed to various features like devices, menus, or voicemail.  Functionality includes: - Listing phone numbers associated with a specific site. - Assigning (creating) a new phone number to a site. - Retrieving details of a specific phone number. - Updating a phone number's configuration (e.g., its routing destination). - Deleting/unassigning a phone number from a site. - Transferring a phone number between sites. - Listing available phone numbers for assignment to a site (from inventory or search). - Searching for available phone numbers based on criteria like area code, city, etc. 

    The version of the OpenAPI document: 1.0.0
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer_business.models.phone_number_availability_list_response import PhoneNumberAvailabilityListResponse

class TestPhoneNumberAvailabilityListResponse(unittest.TestCase):
    """PhoneNumberAvailabilityListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PhoneNumberAvailabilityListResponse:
        """Test PhoneNumberAvailabilityListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PhoneNumberAvailabilityListResponse`
        """
        model = PhoneNumberAvailabilityListResponse()
        if include_optional:
            return PhoneNumberAvailabilityListResponse(
                available_numbers = [
                    ringer_business.models.phone_number_availability.PhoneNumberAvailability(
                        number = '+13035551234', 
                        location = 'Denver, CO', 
                        type = 'local', 
                        features = ["voice","sms"], )
                    ]
            )
        else:
            return PhoneNumberAvailabilityListResponse(
                available_numbers = [
                    ringer_business.models.phone_number_availability.PhoneNumberAvailability(
                        number = '+13035551234', 
                        location = 'Denver, CO', 
                        type = 'local', 
                        features = ["voice","sms"], )
                    ],
        )
        """

    def testPhoneNumberAvailabilityListResponse(self):
        """Test PhoneNumberAvailabilityListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
