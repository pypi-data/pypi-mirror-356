# coding: utf-8

"""
    Ringer Business API - Plans Management

    This API provides endpoints for managing subscription plans associated with a customer account. It allows developers to: - List currently active plan(s) for an account. - List all plans available to an account. - Schedule a plan change for the next billing cycle. - Remove the current plan from an account. - Retrieve details of a specific plan. - Manage packages (add-ons) associated with a plan.  Plan management is crucial for defining the services and features available to a customer. 

    The version of the OpenAPI document: 1.0.0
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer_business.models.categorized_package_list_response import CategorizedPackageListResponse

class TestCategorizedPackageListResponse(unittest.TestCase):
    """CategorizedPackageListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CategorizedPackageListResponse:
        """Test CategorizedPackageListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CategorizedPackageListResponse`
        """
        model = CategorizedPackageListResponse()
        if include_optional:
            return CategorizedPackageListResponse(
                included_packages = [
                    {"id":94,"name":"Plan Subscription Fee","description":"Monthly fee for the Unlimited Device Plan.","item_type":"subscription","item_rules":"base_fee","item_quantity":1,"price":"25.00","currency":"USD","plan_id":1,"included":true,"removable":false,"category":"base_plan","renewable":true,"links":[{"href":"/packages/94","rel":"self","method":"GET"},{"href":"/plans/1","rel":"relatedPlan","method":"GET"}]}
                    ],
                optional_packages = [
                    {"id":94,"name":"Plan Subscription Fee","description":"Monthly fee for the Unlimited Device Plan.","item_type":"subscription","item_rules":"base_fee","item_quantity":1,"price":"25.00","currency":"USD","plan_id":1,"included":true,"removable":false,"category":"base_plan","renewable":true,"links":[{"href":"/packages/94","rel":"self","method":"GET"},{"href":"/plans/1","rel":"relatedPlan","method":"GET"}]}
                    ]
            )
        else:
            return CategorizedPackageListResponse(
                included_packages = [
                    {"id":94,"name":"Plan Subscription Fee","description":"Monthly fee for the Unlimited Device Plan.","item_type":"subscription","item_rules":"base_fee","item_quantity":1,"price":"25.00","currency":"USD","plan_id":1,"included":true,"removable":false,"category":"base_plan","renewable":true,"links":[{"href":"/packages/94","rel":"self","method":"GET"},{"href":"/plans/1","rel":"relatedPlan","method":"GET"}]}
                    ],
                optional_packages = [
                    {"id":94,"name":"Plan Subscription Fee","description":"Monthly fee for the Unlimited Device Plan.","item_type":"subscription","item_rules":"base_fee","item_quantity":1,"price":"25.00","currency":"USD","plan_id":1,"included":true,"removable":false,"category":"base_plan","renewable":true,"links":[{"href":"/packages/94","rel":"self","method":"GET"},{"href":"/plans/1","rel":"relatedPlan","method":"GET"}]}
                    ],
        )
        """

    def testCategorizedPackageListResponse(self):
        """Test CategorizedPackageListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
