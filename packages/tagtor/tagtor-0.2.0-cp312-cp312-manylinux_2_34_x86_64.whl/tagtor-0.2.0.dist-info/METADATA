Metadata-Version: 2.4
Name: tagtor
Version: 0.2.0
Author: Sebastian Mohr <sebastian@mohrenclan.de>
Author-email: Sebastian Mohr <sebastian@mohrenclan.de>
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM

<div align="center">
    <h1><code>TagTor</code></h1>
    <p align="center">
        <em>JS & Rust parser for the TRAKTOR4 metadata tag</em>
    </p>
    <p align="center">
        <img src="https://github.com/semohr/tagtor/actions/workflows/test.yml/badge.svg?branch=main" alt="test_status">
        <img src="https://img.shields.io/github/last-commit/semohr/tagtor?style=flat&color=0080ff" alt="last-commit">
        <img src="https://img.shields.io/github/license/semohr/tagtor?style=flat&color=0080ff" alt="license">
        <img src="https://img.shields.io/badge/Rust-000000.svg?style=flat&logo=Rust&logoColor=white" alt="Rust">
    <p>
</div>
<hr>

---
## About

This is a parser for the TRAKTOR4 metadata tag, written in Rust and portable using wasm. It was mainly created to be used in our [Beets Frontend](https://github.com/pSpitzner/beets-flask).


## Usage

### JavaScript

```javascript
import { parse_frame } from 'tagtor';

// Get traktor4 metadata from a file somehow
const traktor4_metadata = getTraktor4MetadataFromFile();
// Parse the metadata
const frame = parse_frame(traktor4_metadata);
```

See type information to understand the structure of the returned `frame` object.

### Rust

```rust
use tagtor::parse_frame;

// Get traktor4 metadata from a file somehow
let traktor4_metadata = get_traktor4_metadata_from_file();
// Parse the metadata
let frame = parse_frame(traktor4_metadata).unwrap();
```

Using wasm32 as target will pull in wasm-bindgen and tsify.




## Development

This rust project can be compiled to a JavaScript module using `wasm-pack`:

```bash
wasm-pack build
```

Alternatively, you can also compile it as python module using `maturin`:

```bash
maturin build --release --features python-binding
# Or 
maturin develop --features python-binding
```


