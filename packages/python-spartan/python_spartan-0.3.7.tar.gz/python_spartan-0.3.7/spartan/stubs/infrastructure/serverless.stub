service: spartan-framework
frameworkVersion: "3"
useDotenv: true
provider:
  name: aws
  runtime: python3.11
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  stackName: ${self:service}-${self:provider.stage}
  environment:
    ALLOWED_ORIGINS: ${env:ALLOWED_ORIGINS}
    APP_ENVIRONMENT: ${env:APP_ENVIRONMENT}
    DB_TYPE: ${env:DB_TYPE}
    DB_DRIVER: ${env:DB_DRIVER}
    DB_HOST: ${env:DB_HOST}
    DB_NAME: ${env:DB_NAME}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
  vpc:
    securityGroupIds:
      - sg-<name>
    subnetIds:
      - subnet-<name>
      - subnet-<name>
      - subnet-<name>
   iam:
    role: arn:aws:iam::${aws:accountId}:role/<role_name>

functions:
    validator:
        handler: public.main.handle
        timeout: 10
        memorySize: 512
        events:
        - http:
            path: /{proxy+}
            method: any
            cors:
                origin: ${env:ALLOWED_ORIGINS}
                maxAge: 60
plugins:
  - serverless-lift
  - serverless-python-requirements

package:
  patterns:
    - "!__pycache__/**"
    - "!.pytest_cache/**"
    - "!node_modules/**"
    - "!database/**"
    - "!.serverless/**"
    - "!tests/**"
    - "!.venv**"
    - "!venv**"
    - "!alembic.ini"
    - "!*.ipynb"
    - "!.vscode/**"
    - "!CHANGEDLOG.md"
    - "!CODE_OF_CONDUCT.md"
    - "!CONTRIBUTING.md"
    - "!requirements_dev.txt"
    - "!requirements_all.txt"

resources:
    Resources:
custom:
  pythonRequirements:
    usePoetry: true
    noDeploy:
      - boto3
      - botocore
