# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from systemathics.apis.services.tick_analytics.v2 import tick_ema_hp_pb2 as systemathics_dot_apis_dot_services_dot_tick__analytics_dot_v2_dot_tick__ema__hp__pb2


class HpTickEmaServiceStub(object):
    """Called to request tick by tick exponential moving average data.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HpTickEma = channel.unary_stream(
                '/systemathics.apis.services.tick_analytics.v2.HpTickEmaService/HpTickEma',
                request_serializer=systemathics_dot_apis_dot_services_dot_tick__analytics_dot_v2_dot_tick__ema__hp__pb2.HpTickEmaRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_tick__analytics_dot_v2_dot_tick__ema__hp__pb2.HpTickEmaResponse.FromString,
                )


class HpTickEmaServiceServicer(object):
    """Called to request tick by tick exponential moving average data.
    """

    def HpTickEma(self, request, context):
        """Gets tick by tick exponential moving average data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HpTickEmaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HpTickEma': grpc.unary_stream_rpc_method_handler(
                    servicer.HpTickEma,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_tick__analytics_dot_v2_dot_tick__ema__hp__pb2.HpTickEmaRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_tick__analytics_dot_v2_dot_tick__ema__hp__pb2.HpTickEmaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'systemathics.apis.services.tick_analytics.v2.HpTickEmaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HpTickEmaService(object):
    """Called to request tick by tick exponential moving average data.
    """

    @staticmethod
    def HpTickEma(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.tick_analytics.v2.HpTickEmaService/HpTickEma',
            systemathics_dot_apis_dot_services_dot_tick__analytics_dot_v2_dot_tick__ema__hp__pb2.HpTickEmaRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_tick__analytics_dot_v2_dot_tick__ema__hp__pb2.HpTickEmaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
