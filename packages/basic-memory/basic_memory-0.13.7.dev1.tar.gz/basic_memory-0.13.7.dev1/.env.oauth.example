# OAuth Configuration for Basic Memory MCP Server
# Copy this file to .env and update the values

# Enable OAuth authentication
FASTMCP_AUTH_ENABLED=true

# OAuth provider type: basic, github, google, or supabase
# - basic: Built-in OAuth provider with in-memory storage
# - github: Integrate with GitHub OAuth
# - google: Integrate with Google OAuth
# - supabase: Integrate with Supabase Auth (recommended for production)
FASTMCP_AUTH_PROVIDER=basic

# OAuth issuer URL (your MCP server URL)
FASTMCP_AUTH_ISSUER_URL=http://localhost:8000

# Documentation URL for OAuth endpoints
FASTMCP_AUTH_DOCS_URL=http://localhost:8000/docs/oauth

# Required scopes (comma-separated)
# Examples: read,write,admin
FASTMCP_AUTH_REQUIRED_SCOPES=read,write

# Secret key for JWT tokens (auto-generated if not set)
# FASTMCP_AUTH_SECRET_KEY=your-secret-key-here

# Enable client registration endpoint
FASTMCP_AUTH_CLIENT_REGISTRATION_ENABLED=true

# Enable token revocation endpoint  
FASTMCP_AUTH_REVOCATION_ENABLED=true

# Default scopes for new clients
FASTMCP_AUTH_DEFAULT_SCOPES=read

# Valid scopes that can be requested
FASTMCP_AUTH_VALID_SCOPES=read,write,admin

# Client secret expiry in seconds (optional)
# FASTMCP_AUTH_CLIENT_SECRET_EXPIRY=86400

# GitHub OAuth settings (if using github provider)
# GITHUB_CLIENT_ID=your-github-client-id
# GITHUB_CLIENT_SECRET=your-github-client-secret

# Google OAuth settings (if using google provider)
# GOOGLE_CLIENT_ID=your-google-client-id  
# GOOGLE_CLIENT_SECRET=your-google-client-secret

# Supabase settings (if using supabase provider)
# SUPABASE_URL=https://your-project.supabase.co
# SUPABASE_ANON_KEY=your-anon-key
# SUPABASE_SERVICE_KEY=your-service-key  # Optional, for admin operations
# SUPABASE_JWT_SECRET=your-jwt-secret   # Optional, for token validation
# SUPABASE_ALLOWED_CLIENTS=client1,client2  # Comma-separated list of allowed client IDs