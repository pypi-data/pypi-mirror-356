# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .initialize_connection_data_output_audio_bitrate import InitializeConnectionDataOutputAudioBitrate
from .initialize_connection_data_speaker import InitializeConnectionDataSpeaker
from .initialize_connection_data_target_language_code import InitializeConnectionDataTargetLanguageCode


class InitializeConnectionData(UniversalBaseModel):
    target_language_code: InitializeConnectionDataTargetLanguageCode
    speaker: InitializeConnectionDataSpeaker
    pitch: typing.Optional[float] = None
    pace: typing.Optional[float] = None
    loudness: typing.Optional[float] = None
    speech_sample_rate: typing.Optional[int] = None
    enable_preprocessing: typing.Optional[bool] = None
    output_audio_codec: typing.Optional[typing.Literal["mp3"]] = None
    output_audio_bitrate: typing.Optional[InitializeConnectionDataOutputAudioBitrate] = None
    min_buffer_size: typing.Optional[int] = None
    max_chunk_length: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
