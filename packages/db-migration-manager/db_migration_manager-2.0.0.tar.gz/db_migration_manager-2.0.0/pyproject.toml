[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "db-migration-manager"
version = "2.0.0"
description = "A comprehensive, ORM-agnostic database migration system with FastAPI integration, supporting PostgreSQL, MySQL, and SQLite"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["database", "migration", "sql", "postgresql", "mysql", "sqlite", "fastapi", "async", "orm-agnostic"]
authors = [
    {name = "Ari Munandar", email = "arimunandar.dev@gmail.com"},
]
dependencies = [
    "click>=8.0.0",
    "typing-extensions>=4.0.0; python_version < '3.10'",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
postgresql = ["asyncpg>=0.27.0"]
mysql = ["aiomysql>=0.1.1"]
sqlite = ["aiosqlite>=0.17.0"]
fastapi = ["fastapi>=0.68.0", "uvicorn[standard]>=0.15.0"]
pydantic = ["pydantic>=2.0.0"]
all = ["asyncpg>=0.27.0", "aiomysql>=0.1.1", "aiosqlite>=0.17.0", "fastapi>=0.68.0", "uvicorn[standard]>=0.15.0", "pydantic>=2.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "aiosqlite>=0.17.0",
]

[project.urls]
Homepage = "https://github.com/arimunandar/db-migration-manager"
Documentation = "https://github.com/arimunandar/db-migration-manager#readme"
Repository = "https://github.com/arimunandar/db-migration-manager"
"Bug Tracker" = "https://github.com/arimunandar/db-migration-manager/issues"
Changelog = "https://github.com/arimunandar/db-migration-manager/blob/main/CHANGELOG.md"

[project.scripts]
db-migrate = "db_migration_manager.cli:main"

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["src"] by default)
include = ["db_migration_manager*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["tests*"]  # exclude packages matching these glob patterns (empty by default)

[tool.setuptools.package-data]
"db_migration_manager" = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --strict-markers --cov=db_migration_manager --cov-report=term-missing --cov-report=html"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false