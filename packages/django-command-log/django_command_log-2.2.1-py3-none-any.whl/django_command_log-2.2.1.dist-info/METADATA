Metadata-Version: 2.3
Name: django-command-log
Version: 2.2.1
Summary: Django management command auditing app
License: MIT
Author: YunoJuno
Author-email: code@yunojuno.com
Requires-Python: >=3.8,<4.0
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django :: 5.0
Classifier: Framework :: Django :: 5.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Dist: django (>=4.2,<6.0)
Project-URL: Homepage, https://github.com/yunojuno/django-management-command-log
Project-URL: Repository, https://github.com/yunojuno/django-management-command-log
Description-Content-Type: text/plain

# Django Management Command Log

App to enable simple auditing of Django management commands

### Version support

This project now supports Django 4.2+, and Python 3.8+.
See git tags and PyPI classifiers for support.

## Background

This app wraps the standard Django management command base class to record the
running of a command. It logs the name of the command, start and end time, and
the output (if any). If the command fails with a Python exception, the error
message is added to the record, and the exception itself is logged using
`logging.exception`.

![Screenshot of admin list
view](https://github.com/yunojuno/django-management-command-log/blob/master/screenshots/list-view.png)

![Screenshot of admin detail
view](https://github.com/yunojuno/django-management-command-log/blob/master/screenshots/detail-view.png)

See the `test_command` and `test_transaction_command` for examples.

## TODO

* Documentation.
* Convert output field to JSON

