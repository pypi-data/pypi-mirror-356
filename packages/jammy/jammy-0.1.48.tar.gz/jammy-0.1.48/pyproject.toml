[project]
name = "jammy"
version = "0.1.48"
description = "A Versatile ToolBox"
authors = [
    {name = "Qin", email = "qsh.zh27@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8.1"
dependencies = [
    "numpy>=1.24.1",
    "scipy>=1.10.1",
    "loguru>=0.7.0",
    "einops>=0.6.0",
    "hydra-core>=1.2.1",
    "GitPython>=3.1.17",
    "ipdb>=0.13.8",
    "matplotlib>=3.7.1",
    "gpustat>=0.6.0",
    "tqdm>=4.11.0",
    "filelock>=3.8.0",
    "timeout-decorator>=0.5.0",
    "stackprinter>=0.2.10",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
learn = [
    "wandb>=0.10.31",
]
torch = [
    "wandb>=0.10.31",
    "lightning>=2.0.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchinfo>=1.5.3",
]
web = [
    "tornado>=6.1",
    "pyzmq>=22.3.0",
]
storage = [
    "h5py>=3.4.0",
    "msgpack>=1.0.2",
    "msgpack-numpy>=0.4.7",
    "pyarrow>=6.0.0",
    "lmdb>=1.2.1",
    "python-memcached>=1.59",
]
pro = [
    "line-profiler>=3.3.1",
    "ubelt>=0.10.2",
    "parse>=1.19.0",
    "pudb>=2022.1",
]
viz = ["plotly>=5.20.0"]
all = [
    "wandb>=0.10.31",
    "lightning>=2.0.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchinfo>=1.5.3",
    "pandas>=1.3.0",
    "tornado>=6.1",
    "pyzmq>=22.3.0",
    "h5py>=3.4.0",
    "msgpack>=1.0.2",
    "msgpack-numpy>=0.4.7",
    "pyarrow>=6.0.0",
    "lmdb>=1.2.1",
    "python-memcached>=1.59",
    "line-profiler>=3.3.1",
    "ubelt>=0.10.2",
    "parse>=1.19.0",
    "pudb>=2022.1",
    "plotly>=5.20.0",
]
dev = [
    "pre-commit>=2.13.0",
    "isort>=5.8.0",
    "black>=21.5b1",
    "pylint>=2.8.3",
    "Sphinx>=4.2.0",
    "Pallets-Sphinx-Themes>=2.0.1",
    "sphinx-tabs>=3.2.0",
    "m2r2>=0.3.1",
    "pytest>=7.4.3",
]

[project.urls]
Documentation = "https://jammy.readthedocs.io/en/latest/"

[project.scripts]
jgpus = "jammy.cli_scripts.gpu_sc:start_sever"
jgpuc = "jammy.cli_scripts.gpu_sc:start_client"
jshs = "jammy.cli_scripts.shell_executor:start_sever"
jshc = "jammy.cli_scripts.shell_executor:echo_hello"
jshinfo = "jammy.cli_scripts.shell_executor:echo_state"
jshka = "jammy.cli_scripts.shell_executor:client_kill_all"
jinspect-file = "jammy.cli_scripts.inspect_file:simple"
jinspect-print = "jammy.cli_scripts.inspect_file:simple_print"
jsys-info = "jammy.cli_scripts.sys_info:main"
jdk = "jammy.cli_scripts.dk:my_app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["jammy", "jamtorch", "jamnp", "jamviz", "jamweb"]

[[tool.uv.index]]
name = "gitlab"
url = "https://gitlab.com/api/v4/projects/27867877/packages/pypi/simple"
publish-url = "https://gitlab.com/api/v4/projects/27867877/packages/pypi"

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # non-pep604-annotation-union (UP007)
    "UP007",
    # Checks for long exception messages that are not defined in the exception class itself.
    "TRY003",
    # Use of `assert` detected
    "S101"
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
