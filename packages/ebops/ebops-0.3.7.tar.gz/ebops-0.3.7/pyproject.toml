[tool.commitizen]
name = "cz_conventional_commits"
version = "0.3.7"
tag_format = "$version"
version_files = [
    "pyproject.toml:version",
    "src/ebops/version.py",
]

[tool.autoimport.common_statements]
factories = "from tests import factories"

[tool.pdm.resolution]
allow-prereleases = true

[tool.pdm.build]
editable-backend = "path"
package-dir = "src"
source-includes = [
    "tests/",
]

[tool.pdm.version]
source = "file"
path = "src/ebops/version.py"

[tool.pdm.overrides]
importlib-metadata = ">=3.10"

[tool.pdm.dev-dependencies]
lint = [
    "yamllint>=1.27.1",
    "flake8-aaa>=0.12.2",
    "flake8-annotations>=2.9.1",
    "flake8-annotations-complexity>=0.0.7",
    "flake8-typing-imports>=0.12.0,!=1.13.0",
    "flake8-bugbear>=22.8.23",
    "flake8-debugger>=4.1.2",
    "flake8-fixme>=1.1.1",
    "flake8-markdown>=0.3.0",
    "flake8-mutable>=1.2.0",
    "flake8-pytest>=1.4",
    "flake8-pytest-style>=1.6.0",
    "flake8-simplify>=0.19.3",
    "flake8-variables-names>=0.0.5",
    "flake8-comprehensions>=3.10.0",
    "flake8-expression-complexity>=0.0.11",
    "flake8-use-fstring>=1.4",
    "flake8-eradicate>=1.3.0",
    "flake8-docstrings>=1.6.0",
    "pep8-naming>=0.13.2",
    "dlint>=0.13.0",
    "pylint>=2.15.2",
    "flakeheaven>=3.0.0",
]
test = [
    "pytest>=7.1.3",
    "pytest-cov>=3.0.0",
    "pytest-xdist>=3.0.2",
    "pytest-freezegun>=0.4.2",
]
security = [
    "pip-audit>=2.7.3",
    "bandit>=1.7.3",
]
fixers = [
    "autoimport>=1.2.2",
    "black>=22.8.0",
    "isort>=5.10.1",
    "yamlfix>=1.0.1",
]
typing = [
    "mypy>=0.971",
    "types-requests>=2.32.0.20240712",
]
dev = [
    "pre-commit>=2.20.0",
    "twine>=4.0.1",
    "commitizen>=2.32.2",
]
dependencies = [
    "flake8>=4.0.1,<5.0.0",
    "pyflakes<2.5.0",
]

[tool.black]
line-length = 88
target-version = [
    "py37",
    "py38",
    "py39",
    "py310",
]
include = "\\.pyi?$"
exclude = "/(\n    \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n  # The following are specific to Black, you probably don't want those.\n  | blib2to3\n  | tests/data\n  | profiling\n)/\n"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv --tb=short -n auto"
norecursedirs = [
    ".tox",
    ".git",
    "*/migrations/*",
    "*/static/*",
    "docs",
    "venv",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gui: marks tests that need a grafical interface (deselect with '-m \"not slow\"')",
    "secondary: mark tests that use functionality tested in the same file (deselect with '-m \"not secondary\"')",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning:pytest_freezegun.*",
    "ignore::FutureWarning:ebooklib.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]

[tool.isort]
profile = "black"
src_paths = [
    "src",
    "test",
]

[tool.flakeheaven]
format = "grouped"
max_line_length = 88
show_source = true
docstring-convention = "google"

[tool.flakeheaven.plugins]
flake8-aaa = [
    "+*",
]
flake8-annotations = [
    "+*",
    "-ANN101",
    "-ANN102",
]
flake8-annotations-complexity = [
    "+*",
]
flake8-bugbear = [
    "+*",
]
flake8-comprehensions = [
    "+*",
]
flake8-debugger = [
    "+*",
]
flake8-docstrings = [
    "+*",
    "-D101",
]
flake8-eradicate = [
    "+*",
]
flake8-expression-complexity = [
    "+*",
]
flake8-fixme = [
    "+*",
    "-T101",
]
flake8-markdown = [
    "+*",
]
flake8-mutable = [
    "+*",
]
flake8-pytest = [
    "+*",
]
flake8-pytest-style = [
    "+*",
]
flake8-simplify = [
    "+*",
]
flake8-use-fstring = [
    "+*",
    "-FS003",
]
flake8-typing-imports = [
    "+*",
    "-TYP001",
    "-TYP002",
]
flake8-variables-names = [
    "+*",
]
dlint = [
    "+*",
]
pylint = [
    "+*",
    "-C0411",
    "-R0903",
    "-W1203",
    "-W1201",
    "-C0301",
]
mccabe = [
    "+*",
]
pep8-naming = [
    "+*",
]
pycodestyle = [
    "+*",
    "-W503",
]
pyflakes = [
    "+*",
    "-F841",
    "-F821",
]

[tool.flakeheaven.exceptions."src/ebops/entrypoints/cli.py"]
flake8-mutable = [
    "-M511",
]
flake8-bugbear = [
    "-B008",
]
pylint = [
    "-R0913",
    "-R0917",
]

[tool.flakeheaven.exceptions."tests/*"]
flake8-docstrings = [
    "-D102",
    "-D200",
    "-D205",
    "-D212",
    "-D400",
    "-D415",
]
flake8-annotations = [
    "-ANN001",
    "-ANN401",
]
pylint = [
    "-R0201",
    "-W0613",
    "-C0115",
    "-C0116",
]

[tool.flakeheaven.exceptions."tests/factories.py"]
pylint = [
    "-R0903",
]

[tool.flakeheaven.exceptions."tests/unit/test_views.py"]
pycodestyle = [
    "-E501",
]

[tool.pylint.TYPECHECK]
generated-members = "sh"

[tool.pylint."MESSAGES CONTROL"]
extension-pkg-whitelist = "pydantic"

[tool.mypy]
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = false
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
plugins = [
    "pydantic.mypy",
]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = [
    "pytest",
    "ebooklib",
    "org_rw",
]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[project]
dynamic = []
authors = [
    { name = "Lyz", email = "lyz@riseup.net" },
]
requires-python = ">=3.9.2"
dependencies = [
    "typer[all]>=0.9.0",
    "org-rw>=0.0.2",
    "ebooklib>=0.18",
    "beautifulsoup4>=4.13.0b2",
    "lxml>=5.2.2",
    "pydantic>=2.8.2",
    "requests>=2.32.3",
]
name = "ebops"
description = "Manage e-book and org files to make analytical reading easy"
readme = "README.md"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Utilities",
    "Natural Language :: English",
]
version = "0.3.7"

[project.license]
text = "GPL-3.0-only"

[project.urls]
Issues = "https://codeberg.org/lyz/ebops/issues"
homepage = "https://codeberg.org/lyz/ebops"

[project.scripts]
ebops = "ebops.entrypoints.cli:cli"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
