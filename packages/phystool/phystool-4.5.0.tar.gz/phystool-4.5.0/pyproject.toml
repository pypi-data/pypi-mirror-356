[build-system]
requires = [ "hatchling" ]
build-backend = "hatchling.build"

[project]
name = "phystool"
dynamic = [ "version" ]
authors = [
	{ name="Jérôme Dufour", email="jerome.dufour@eduvaud.ch" },
]
description = "Exercise database manager for LaTeX files"
requires-python = ">=3.12"
classifiers = [
	"Programming Language :: Python :: 3",
	"License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
	"Operating System :: OS Independent",
	"Environment :: X11 Applications :: Qt",
	"Topic :: Education"
]
dependencies = [
	"GitPython>=3.1.44",
	"PySide6>=6.8.1.1",
	"Unidecode==1.3.8",
	"ansi2html==1.9.2",
	"rapidfuzz>=3.12.1",
	"requests==2.32.3",
]
readme = "README.md"

[project.urls]
Repository = "https://bitbucket.org/jdufour/phystool/src/master/"
Changelog = "https://bitbucket.org/jdufour/phystool/src/master/CHANGELOG.md"
Documentation = "https://phystool.readthedocs.io/fr/latest/"

[project.scripts]
phystool = "phystool:phystool"

[project.gui-scripts]
physnoob = "phystool:physnoob"

[tool.hatch.version]
path = "src/phystool/__about__.py"

[tool.hatch.build.targets.wheel]
include = ["phystool"]
exclude = ["tests", "__pycache__"]

[tool.hatch.build.targets.wheel.sources]
"src/phystool" = "phystool"

[tool.hatch.build.targets.wheel.force-include]
"src/phystool/config_dev.py" = "phystool/config_prod.py"
"dev/physdb_dev" = "phystool/static/physdb_dev"

[tool.hatch.envs.docs]
detached = true

[tool.hatch.envs.docs.scripts]
build = "(cd {root}/docs/source; sphinx-build -M html . ../build)"
serve = "(cd {root}/docs/source; sphinx-autobuild -M html . ../build --watch ../../src/phystool/)"

[tool.hatch.envs.push]
detached = true

[tool.hatch.envs.push.scripts]
major = "hatch run push:_full major"
minor = "hatch run push:_full minor"
patch = "hatch run push:_full patch"
unrel = [
	"(cd {root}; git cliff)",
	"git add {root}/CHANGELOG.md",
	"git commit --amend",
	"git push -f"
]
_full = [
	"hatch version {args}",
	"(cd {root}; git cliff --bump {args})",
	"git add {root}/src/phystool/__about__.py {root}/CHANGELOG.md",
	"git commit -m 'new {args} version'",
	"git tag v$(hatch version)",
	"git tag -f stable",
	"git push",
	"git push -f --tags",
	"hatch build",
	"hatch publish",
]

[tool.git-cliff.changelog]
header = """# Changelog\n"""
body = """
\n---\n
{% if version %}\
    ## [{{ version }}](https://bitbucket.org/jdufour/phystool/commits/tag/{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased] - {{ now() | date(format="%Y-%m-%d") }}
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
    - [{{ commit.id | truncate(length=7, end="") }}](https://bitbucket.org/jdufour/phystool/commits/{{commit.id}}) {% if commit.scope %}*({{ commit.scope }})* {% endif %}{{ commit.message | upper_first }}\
      {% if commit.breaking %}
      {% for footer in commit.footers %}\
      {{ footer.value | indent(first=true, prefix='  > **' ~ footer.token ~ '** ') }}
      {% endfor %}\
      {% endif %}\
    {% endfor %}
{% endfor %}\n
"""
footer = """<!-- generated by git-cliff -->"""
trim = true
postprocessors = []
output="CHANGELOG.md"

[tool.git-cliff.git]
conventional_commits = true
filter_unconventional = true
filter_commits = true
topo_order = false
split_commits = false
sort_commits = "oldest"
protect_breaking_commits = true
commit_preprocessors = [
	{ pattern = "__", replace = "\\_\\_"}
]
commit_parsers = [
	{ message = "^feat", group = "<!-- 1 --> Features" },
	{ message = "^fix", group = "<!-- 2 --> Bug Fixes" },
	{ message = "^ref", group = "<!-- 3 --> Refactor" },
	{ message = "^test", group = "<!-- 4 --> Test" },
	{ message = "^ci", group = "<!-- 5 --> Miscellaneous" },
	{ message = "^doc", group = "<!-- 6 --> Documentation" },
	{ message = "^rev", group = "<!-- 7 --> Revert" },
]
