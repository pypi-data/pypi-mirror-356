[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "migadu-mcp"
dynamic = ["version"]
description = "Professional FastMCP server for comprehensive Migadu email management with Context logging, tool annotations, and testing infrastructure"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    { name = "Michael Broel", email = "Michael@Michaelzag.com" }
]
license = { text = "MIT" }
keywords = ["migadu", "email", "mcp", "server", "mailbox", "alias", "identity"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Email",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "fastmcp>=2.8.1",
    "httpx>=0.28.1",
    "pydantic>=2.0.0",
    "email-validator>=2.0.0",
]

[dependency-groups]
dev = [
    "ruff>=0.8.0",
    "mypy>=1.0.0",
    "python-dotenv>=1.0.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "bandit>=1.7.0",
    "setuptools_scm>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/Michaelzag/migadu-mcp"
Repository = "https://github.com/Michaelzag/migadu-mcp"
Issues = "https://github.com/Michaelzag/migadu-mcp/issues"

[project.scripts]
migadu-mcp = "migadu_mcp.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["migadu_mcp*"]

[tool.setuptools_scm]
# Version from git tags
fallback_version = "0.0.0+dev"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "integration: mark test as integration test (requires valid credentials)"
]
