[[Databases]]

name = "MySQL"
label = "MySQL"
logo = "resources/images/mysql.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["aiomysql"]

[[Databases]]
name = "MySQL"
label = "MariaDB"
logo = "resources/images/mariadb.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["aiomysql"]

[[Databases]]
name = "MySQL"
label = "Vitess"
logo = "resources/images/vitess.png"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["aiomysql"]

[[Databases]]
name = "PostgreSQL"
label = "PostgreSQL"
logo = "resources/images/postgresql.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["asyncpg"]

[[Databases]]
name = "PostgreSQL"
label = "Supabase"
logo = "resources/images/supabase.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["asyncpg"]

[[Databases]]
name = "NeonDB"
label = "neon DB"
logo = "resources/images/neondb.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["asyncpg"]

[[Databases]]
name = "PostgreSQL"
label = "TimescaleDB"
logo = "resources/images/timescale.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["asyncpg"]

[[Databases]]
name = "SQL Server"
logo = "resources/images/sql_server.png"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["aioodbc"]

[[Databases]]
name = "CockroachDB"
logo = "resources/images/cockroachdb.png"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["sqlalchemy-cockroachdb"]

[[Databases]]
name = "Oracle"
logo = "resources/images/oracle.svg"
connection_type = "database"
authentication_form_type = "custom"
requires_python_packages = ["oracledb"]
form_fields = [
{type = "text", label = "Service Name", name = "service_name", required = true}
]

[[Databases]]
name = "SAP HANA"
logo = "resources/images/sap.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["sqlalchemy-hana"]

[[Databases]]
name = "Clickhouse"
logo = "resources/images/clickhouse.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["clickhouse-sqlalchemy"]

[["Data Warehouses"]]
name = "Presto"
logo = "resources/images/presto.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["presto-python-client"]

[["Data Warehouses"]]
name = "Hive"
logo = "resources/images/hive.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["pyhive"]

[["Data Warehouses"]]
name = "Trino"
logo = "resources/images/trino.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["aiotrino"]

[["Data Warehouses"]]
name = "GCP BigQuery"
logo = "resources/images/bigquery.png"
connection_type = "database"
authentication_form_type = "custom"
requires_python_packages = ["sqlalchemy-bigquery"]
form_fields = [
    {type = "text", label = "Project Name", name = "project_name", required = true},
    {type = "text", label = "Path to your JSON credentials file", name = "credentials_path", required = true}
]

[["Data Warehouses"]]
name = "AWS Redshift"
logo = "resources/images/redshift.png"
connection_type = "database"
authentication_form_type = "database"

[["Data Warehouses"]]
name = "Snowflake"
logo = "resources/images/snowflake.svg"
connection_type = "database"
authentication_form_type = "custom"
requires_python_packages = ["snowflake-sqlalchemy"]
form_fields = [
    { type = "text", label = "Account", name = "account", required = true },
    { type = "text", label = "User", name = "user", required = true },
    { type = "text", label = "Password", name = "password", required = true },
    { type = "text", label = "Database", name = "database", required = false },
    { type = "text", label = "Schema", name = "schema", required = false },
    { type = "text", label = "Warehouse", name = "warehouse", required = false },
    { type = "text", label = "Role", name = "role", required = false },
    { type = "text", label = "Timezone", name = "timezone", required = false }
]

[["Data Warehouses"]]
name = "Databricks"
logo = "resources/images/databricks.svg"
connection_type = "database"
authentication_form_type = "custom"
form_fields = [
    {type = "text", label = "access token", name = "access_token", required = true},
    {type = "text", label = "host", name = "host", required = true},
    {type = "text", label = "http path", name = "http_path", required = true},
    {type = "text", label = "catalog", name = "catalog", required = true},
    {type = "text", label = "schema", name = "schema", required = true}
]

[["Data Warehouses"]]
name = "Teradata"
logo = "resources/images/teradata.svg"
connection_type = "database"
authentication_form_type = "database"
requires_python_packages = ["teradatasqlalchemy"]

[["Data Warehouses"]]
name = "AWS Athena"
logo = "resources/images/athena.png"
connection_type = "database"
authentication_form_type = "custom"
requires_python_packages = ["pyathena[sqlalchemy]"]
form_fields = [
    { type = "text", label = "AWS access key ID", name = "aws_access_key_id", required = true },
    { type = "text", label = "AWS secret access key", name = "aws_secret_access_key", required = true },
    { type = "text", label = "region name", name = "region_name", required = true },
    { type = "text", label = "schema name", name = "schema_name", required = true },
    { type = "text", label = "S3 staging directory", name = "s3_staging_dir", required = true }
]

[["Data Pipelines"]]
name = "Airflow"
logo = "resources/images/airflow.png"
connection_type = "api"
authentication_form_type = "api"
openapi_spec_url = "https://airflow.apache.org/docs/apache-airflow/stable/_specs/v1-rest-api-generated.yaml"
filter_to_operator_ids = [
    "get_dag_run",
    "get_dag_runs", 
    "get_dags", 
    "get_dag", 
    "get_dag_details", 
    "get_jobs", 
    "get_tasks", 
    "get_task_instances", 
    "get_task", 
    "get_log"
]

[["Data Pipelines"]]
name = "Prefect"
logo = "resources/images/prefect.svg"
connection_type = "api"
authentication_form_type = "api"
openapi_spec_url = "https://api.prefect.cloud/api/openapi.json"
filter_to_operator_ids = [
    "get_flow_run_logs_api_accounts__account_id__workspaces__workspace_id__flow_runs__id__logs_get",
    "read_flow_api_accounts__account_id__workspaces__workspace_id__flows__id__get",
    "read_flows_api_accounts__account_id__workspaces__workspace_id__flows_filter_post",
    "read_flow_runs_api_accounts__account_id__workspaces__workspace_id__flow_runs_filter_post",
    "read_flow_runs_minimal_api_accounts__account_id__workspaces__workspace_id__flow_runs_filter_minimal_post"
]

# https://docs.gitlab.com/api/search/ isn't mentioned in the openAPI spec, which is incomplete
# [["Source Control"]]
# name = "Gitlab"
# logo = "resources/images/gitlab.svg"
# connection_type = "api"
# authentication_form_type = "api"
# openapi_spec_url = "https://gitlab.com/gitlab-org/gitlab/-/raw/master/doc/api/openapi/openapi_v2.yaml"

[["Source Control"]]
name = "Bitbucket"
logo = "resources/images/bitbucket.png"
connection_type = "api"
authentication_form_type = "api"
openapi_spec_url = "https://dac-static.atlassian.com/cloud/bitbucket/swagger.v3.json?_v=2.300.103-0.1323.0"
filter_to_operator_ids = ["searchWorkspace", "searchTeam"]
filter_to_paths = ["/repositories/{workspace}/{repo_slug}/src/{commit}/{path}"]

[[Wiki]]
name = "Confluence"
logo = "resources/images/confluence.svg"
connection_type = "api"
authentication_form_type = "api"
openapi_spec_url = "https://dac-static.atlassian.com/cloud/confluence/swagger.v3.json?_v=1.7875.0-0.1323.0"
filter_to_paths = ["/wiki/rest/api/search"]

[[Tickets]]
name = "Jira"
logo = "resources/images/jira.svg"
connection_type = "api"
authentication_form_type = "api"
openapi_spec_url = "https://dac-static.atlassian.com/cloud/jira/platform/swagger.v3.json?_v=1.7875.0-0.1323.0"
filter_to_paths = ["/rest/api/2/issue/{issueIdOrKey}", "/rest/api/2/search/jql"]

# [[Logs]]
# name = "Sumo Logic"
# logo = "resources/images/sumo_logic.svg"
# connection_type = "api"
# authentication_form_type = "api"
# openapi_spec_url = "https://api.sumologic.com/docs/sumologic-api.yaml"

# [[Logs]]
# name = "Grafana"
# logo = "resources/images/a.svg"
# connection_type = "api"
# authentication_form_type = "api"
# openapi_spec_url = "https://raw.githubusercontent.com/grafana/grafana/main/public/openapi3.json"

# [["Package Repositories"]]
# name = "Docker Hub"
# logo = "resources/images/docker.svg"
# connection_type = "api"
# authentication_form_type = "api"
# openapi_spec_url = "https://docs.docker.com/reference/api/hub/latest.yaml"