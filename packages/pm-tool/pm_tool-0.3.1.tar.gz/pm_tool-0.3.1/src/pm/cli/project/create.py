# pm/cli/project/create.py
import uuid
from typing import Optional
import click

from ...models import Project
from ...storage import create_project
from ...core.types import ProjectStatus
from ..common_utils import get_db_connection, format_output, read_content_from_argument


@click.command("create")  # Add the click command decorator
@click.option("--name", required=True, help="Project name")
@click.option("--description", help="Project description (or @filepath to read from file).", callback=read_content_from_argument)
@click.option("--status", type=click.Choice([s.value for s in ProjectStatus], case_sensitive=False),
              default=ProjectStatus.PROSPECTIVE.value, help="Initial project status (defaults to PROSPECTIVE)")
@click.pass_context
def project_create(ctx, name: str, description: Optional[str], status: str):
    """Create a new project."""
    conn = get_db_connection()
    try:
        # Slug is generated by create_project, so it's not passed here
        project_data = Project(id=str(uuid.uuid4()), name=name,
                               description=description,
                               status=ProjectStatus(status))
        # create_project now returns the full object with slug
        project = create_project(conn, project_data)
        # Get format from context
        output_format = ctx.obj.get('FORMAT', 'json')
        # Pass format and object
        click.echo(format_output(output_format, "success", project))
    except Exception as e:
        # Get format from context
        output_format = ctx.obj.get('FORMAT', 'json')
        click.echo(format_output(output_format, "error",
                   message=str(e)))  # Use format_output
    finally:
        conn.close()
