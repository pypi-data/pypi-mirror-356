# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import oasys_pb2 as oasys__pb2


class InterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Connected = channel.unary_unary(
                '/Oasys.Interface/Connected',
                request_serializer=oasys__pb2.NoArg.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.Initialise = channel.unary_unary(
                '/Oasys.Interface/Initialise',
                request_serializer=oasys__pb2.Memory.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.Finalise = channel.unary_unary(
                '/Oasys.Interface/Finalise',
                request_serializer=oasys__pb2.NoArg.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.Exit = channel.unary_unary(
                '/Oasys.Interface/Exit',
                request_serializer=oasys__pb2.NoArg.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.Constructor = channel.unary_unary(
                '/Oasys.Interface/Constructor',
                request_serializer=oasys__pb2.ConstructorRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.Destructor = channel.unary_unary(
                '/Oasys.Interface/Destructor',
                request_serializer=oasys__pb2.DestructorRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.Function = channel.unary_unary(
                '/Oasys.Interface/Function',
                request_serializer=oasys__pb2.FunctionRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.InstanceGet = channel.unary_unary(
                '/Oasys.Interface/InstanceGet',
                request_serializer=oasys__pb2.InstanceGetRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.InstanceSet = channel.unary_unary(
                '/Oasys.Interface/InstanceSet',
                request_serializer=oasys__pb2.InstanceSetRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.InstanceMethod = channel.unary_unary(
                '/Oasys.Interface/InstanceMethod',
                request_serializer=oasys__pb2.InstanceMethodRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.InstanceMethodStream = channel.unary_stream(
                '/Oasys.Interface/InstanceMethodStream',
                request_serializer=oasys__pb2.InstanceMethodRequest.SerializeToString,
                response_deserializer=oasys__pb2.StreamResponse.FromString,
                )
        self.ClassGet = channel.unary_unary(
                '/Oasys.Interface/ClassGet',
                request_serializer=oasys__pb2.ClassGetRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.ClassSet = channel.unary_unary(
                '/Oasys.Interface/ClassSet',
                request_serializer=oasys__pb2.ClassSetRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.ClassMethod = channel.unary_unary(
                '/Oasys.Interface/ClassMethod',
                request_serializer=oasys__pb2.ClassMethodRequest.SerializeToString,
                response_deserializer=oasys__pb2.Response.FromString,
                )
        self.ClassMethodStream = channel.unary_stream(
                '/Oasys.Interface/ClassMethodStream',
                request_serializer=oasys__pb2.ClassMethodRequest.SerializeToString,
                response_deserializer=oasys__pb2.StreamResponse.FromString,
                )


class InterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Connected(self, request, context):
        """Check if connected
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Initialise(self, request, context):
        """Initialise the JS engine
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Finalise(self, request, context):
        """Finalise the JS engine
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exit(self, request, context):
        """Exit program
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Constructor(self, request, context):
        """Constructor/destructor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Destructor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Function(self, request, context):
        """Function call
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstanceGet(self, request, context):
        """Instance requests
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstanceSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstanceMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstanceMethodStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassGet(self, request, context):
        """Class requests
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassMethodStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Connected': grpc.unary_unary_rpc_method_handler(
                    servicer.Connected,
                    request_deserializer=oasys__pb2.NoArg.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'Initialise': grpc.unary_unary_rpc_method_handler(
                    servicer.Initialise,
                    request_deserializer=oasys__pb2.Memory.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'Finalise': grpc.unary_unary_rpc_method_handler(
                    servicer.Finalise,
                    request_deserializer=oasys__pb2.NoArg.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'Exit': grpc.unary_unary_rpc_method_handler(
                    servicer.Exit,
                    request_deserializer=oasys__pb2.NoArg.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'Constructor': grpc.unary_unary_rpc_method_handler(
                    servicer.Constructor,
                    request_deserializer=oasys__pb2.ConstructorRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'Destructor': grpc.unary_unary_rpc_method_handler(
                    servicer.Destructor,
                    request_deserializer=oasys__pb2.DestructorRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'Function': grpc.unary_unary_rpc_method_handler(
                    servicer.Function,
                    request_deserializer=oasys__pb2.FunctionRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'InstanceGet': grpc.unary_unary_rpc_method_handler(
                    servicer.InstanceGet,
                    request_deserializer=oasys__pb2.InstanceGetRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'InstanceSet': grpc.unary_unary_rpc_method_handler(
                    servicer.InstanceSet,
                    request_deserializer=oasys__pb2.InstanceSetRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'InstanceMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.InstanceMethod,
                    request_deserializer=oasys__pb2.InstanceMethodRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'InstanceMethodStream': grpc.unary_stream_rpc_method_handler(
                    servicer.InstanceMethodStream,
                    request_deserializer=oasys__pb2.InstanceMethodRequest.FromString,
                    response_serializer=oasys__pb2.StreamResponse.SerializeToString,
            ),
            'ClassGet': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassGet,
                    request_deserializer=oasys__pb2.ClassGetRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'ClassSet': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassSet,
                    request_deserializer=oasys__pb2.ClassSetRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'ClassMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassMethod,
                    request_deserializer=oasys__pb2.ClassMethodRequest.FromString,
                    response_serializer=oasys__pb2.Response.SerializeToString,
            ),
            'ClassMethodStream': grpc.unary_stream_rpc_method_handler(
                    servicer.ClassMethodStream,
                    request_deserializer=oasys__pb2.ClassMethodRequest.FromString,
                    response_serializer=oasys__pb2.StreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Oasys.Interface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Interface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Connected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/Connected',
            oasys__pb2.NoArg.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Initialise(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/Initialise',
            oasys__pb2.Memory.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Finalise(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/Finalise',
            oasys__pb2.NoArg.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/Exit',
            oasys__pb2.NoArg.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Constructor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/Constructor',
            oasys__pb2.ConstructorRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Destructor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/Destructor',
            oasys__pb2.DestructorRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Function(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/Function',
            oasys__pb2.FunctionRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstanceGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/InstanceGet',
            oasys__pb2.InstanceGetRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstanceSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/InstanceSet',
            oasys__pb2.InstanceSetRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstanceMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/InstanceMethod',
            oasys__pb2.InstanceMethodRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstanceMethodStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Oasys.Interface/InstanceMethodStream',
            oasys__pb2.InstanceMethodRequest.SerializeToString,
            oasys__pb2.StreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/ClassGet',
            oasys__pb2.ClassGetRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/ClassSet',
            oasys__pb2.ClassSetRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Oasys.Interface/ClassMethod',
            oasys__pb2.ClassMethodRequest.SerializeToString,
            oasys__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClassMethodStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Oasys.Interface/ClassMethodStream',
            oasys__pb2.ClassMethodRequest.SerializeToString,
            oasys__pb2.StreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
