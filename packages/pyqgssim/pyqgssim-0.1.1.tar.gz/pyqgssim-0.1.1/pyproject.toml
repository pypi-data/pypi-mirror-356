# -------------------- build-system --------------------- #

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

# -------------------- project-config -------------------- #
[project]
authors = [{ name = "gooker_young", email = "gooker_young@qq.com" }]
classifiers = []
dependencies = [
  "pyside2>=5.15.2.1",
  "rich>=13.9.4",
  "tomli-w>=1.0.0",
  "tomli>=2.2.1",
  "typer>=0.15.1",
]
description = "切割索仿真计算工具"
license = { text = "MIT license" }
maintainers = [{ name = "gooker_young", email = "gooker_young@qq.com" }]
name = "pyqgssim"
readme = "README.rst"
requires-python = ">=3.8"
version = "0.1.1"

[project.scripts]
pyqgssim = "pyqgssim.cli:app"

[project.urls]
Documentation = "https://pyqgssim.readthedocs.io/zh-cn/stable/"
Issues = "https://gitee.com/gooker_young/pyqgssim/issues"
Repository = "https://gitee.com/gooker_young/pyqgssim"

# ---------------------- coverage ----------------------- #
[tool.coverage]
[tool.coverage.report]
exclude_lines = ["coverage: ignore", "def main", "if __name__ == .__main__.:"]

[tool.coverage.run]
omit = ["examples/*", "tests/*"]
source = ["src/pyqgssim"]

# -------------------- hatch-version -------------------- #
[tool.hatch]

[tool.hatch.version]
path = "src/pyqgssim/__init__.py"

# ----------------------- pytest ------------------------ #
[tool.pytest]
[tool.pytest.ini_options]
filterwarnings = ["error"]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
testpaths = ["tests"]

# ------------------------ ruff ------------------------- #
[tool.ruff]
exclude = ["**/*_rc.py", "**/ui_*.py", "docs/*.py"]
fix = true
line-length = 80
output-format = "full"
preview = true
show-fixes = true
target-version = "py38"
unsafe-fixes = true

# 格式化配置 (Ruff 的格式化器)
[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
quote-style = "double"

[tool.ruff.lint]
select = [
  "A",     # flake8-builtins
  "ANN",   # flake8-annotations
  "ARG",   # flake8-arguments
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "BLE",   # flake8-blind-except
  "C",     # flake8-comprehensions
  "C4",    # flake8-comprehensions
  "COM",   # flake8-commas
  # "CPY",    # flake8-copyright
  "DJ",  # flake8-django
  "DTZ", # flake8-datetimez
  "EM",  # flake8-errmsg
  "EXE", # flake8-executable
  "FA",  # flake8-future-annotations
  "FBT", # flake8-boolean-trap
  "FIX", # flake8-fixme
  # "G",      # flake8-logging-format
  "ICN", # flake8-import-conventions
  "INP", # flake8-no-pep420
  "INT", # flake8-gettext
  "ISC", # flake8-implicit-str-concat
  "LOG", # flake8-logging
  "PIE", # flake8-pie
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "Q",   # flake8-quotes
  "RET", # flake8-return
  "RSE", # flake8-raise
  # "S",      # flake8-bandit
  "AIR",  # Airflow
  "C90",  # mccabe
  "D",    # pydocstyle (文档字符串)
  "DOC",  # docstrings
  "E",    # Pycodestyle 错误
  "ERA",  # Eradicate
  "F",    # Pyflakes
  "FAST", # FastAPI
  "FLY",  # flynt
  "FURB", # refurb
  "I",    # isort (导入排序)
  "N",    # pep8-naming
  "NPY",  # numpy-specific
  "PD",   # pandas-set
  "PERF", # perflint
  "PGH",  # pygrep-hooks
  "PL",   # Pylint
  "RUF",  # Ruff 特有规则
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T10",  # flake8-debugger
  "T20",  # flake8-print
  "TC",   # flake8-type-checking
  "TD",   # flake8-todo
  "TID",  # flake8-tidy-imports
  "TRY",  # tryceratops
  "UP",   # pyupgrade (现代化语法)
  "W",    # Pycodestyle 警告
  "YTT",  # flake8-2020
]
# 忽略的规则
ignore = [
  "D100",
  "D103",
  "D104",
  "D107",
  "D203",    # D 规则中与 Black 冲突的部分
  "N802",
  "N999",
  "PGH003",
  "PLR0915",
]

# 导入排序配置
[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false

[tool.ruff.lint.pydocstyle]
convention = "google" # 可选: "pep257", "numpy", "google"

# ----------------------- uv-dependencies ------------------------ #
[tool.uv]
dev-dependencies = [
  "coverage>=7.6.1",
  "hatch>=1.14.1",
  "pip>=25.0.1",
  "pre-commit>=3.5.0",
  "pycmd2",
  "pytest-benchmark>=4.0.0",
  "pytest-cov>=5.0.0",
  "pytest-html>=4.1.1",
  "pytest-mock>=3.14.0",
  "pytest>=8.3.4",
  "ruff>=0.11.12",
  "sphinx-autobuild>=2021.3.14",
  "sphinx-rtd-theme",
  "tox-uv>=1.13.1",
  "tox>=4.24.1",
  "wheel>=0.45.1",
]
