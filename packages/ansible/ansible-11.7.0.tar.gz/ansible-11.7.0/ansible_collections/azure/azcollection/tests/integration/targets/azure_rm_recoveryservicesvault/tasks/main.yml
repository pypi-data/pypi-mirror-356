- name: Gather Resource Group info
  azure.azcollection.azure_rm_resourcegroup_info:
    name: "{{ resource_group }}"
  register: __rg_info

- name: Fix resource prefix and location
  ansible.builtin.set_fact:
    name_rpfx: "revault{{ resource_group | hash('md5') | truncate(22, True, '') }}"
    location: "{{ __rg_info.resourcegroups.0.location }}"

- name: Create identities array
  ansible.builtin.set_fact:
    managed_identity_ids: []

- name: Create user managed identities
  ansible.builtin.include_tasks: "{{ role_path }}/../../../integration_common_tasks/managed_identity.yml"
  vars:
    managed_identity_test_unique: 'recoveryvault'
    managed_identity_unique: "{{ item }}"
    managed_identity_action: 'create'
    managed_identity_location: "{{ location }}"
  with_items:
    - '1'
    - '2'

- name: Create Azure Recovery Service vault
  azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    identity:
      type: SystemAssigned
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.changed

- name: Create Azure Recovery Service vault (idempotent)
  azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    identity:
      type: SystemAssigned
  register: output

- name: Assert that output has no changed
  ansible.builtin.assert:
    that:
      - not output.changed

- name: Update Azure Recovery Service vault with UserAssigned
  azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    identity:
      type: UserAssigned
      user_assigned_identities:
        id:
          - "{{ managed_identity_ids[0] }}"
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.changed

- name: Update Azure Recovery Service vault with UserAssignd (idempotent)
  azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    identity:
      type: UserAssigned
      user_assigned_identities:
        id:
          - "{{ managed_identity_ids[0] }}"
  register: output

- name: Assert that output has no changed
  ansible.builtin.assert:
    that:
      - not output.changed

- name: Update Azure Recovery Service vault with UserAssigned X2
  azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    identity:
      type: UserAssigned
      user_assigned_identities:
        id:
          - "{{ managed_identity_ids[0] }}"
          - "{{ managed_identity_ids[1] }}"
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.changed

- name: Update Azure Recovery Service vault with UserAssignd X2 (idempotent)
  azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    identity:
      type: UserAssigned
      user_assigned_identities:
        id:
          - "{{ managed_identity_ids[0] }}"
          - "{{ managed_identity_ids[1] }}"
  register: output

- name: Assert that output has no changed
  ansible.builtin.assert:
    that:
      - not output.changed

- name: Get Azure Recovery Service Vault Details
  azure_rm_recoveryservicesvault_info:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.response.id != None
      - output.response.name != None

- name: Get Azure Recovery Service Vault Config Details
  azure_rm_recoveryservicesvaultconfig_info:
    resource_group: "{{ resource_group }}"
    vault_name: "{{ name_rpfx }}"
  register: output

- name: Assert that output is defined
  ansible.builtin.assert:
    that:
      - output.properties.enhanced_security_state != None
      - output.properties.soft_delete_feature_state != None
      - output.properties.soft_delete_retention_period_in_days != None

- name: Turn off Azure Recovery Service Vault Config Soft Delete Settings
  # Note: this may stop working in the future because of https://learn.microsoft.com/en-us/azure/backup/secure-by-default
  azure_rm_recoveryservicesvaultconfig:
    resource_group: "{{ resource_group }}"
    vault_name: "{{ name_rpfx }}"
    properties:
      enhanced_security_state: Disabled
      soft_delete_feature_state: Disabled
  register: output

- name: Assert that object has changed
  ansible.builtin.assert:
    that:
      - output.properties.enhanced_security_state == "Disabled"
      - output.properties.soft_delete_feature_state == "Disabled"

- name: Change Azure Recovery Service Vault Config Soft Delete Settings to AlwaysON and set retention higher than default
  azure_rm_recoveryservicesvaultconfig:
    resource_group: "{{ resource_group }}"
    vault_name: "{{ name_rpfx }}"
    properties:
      enhanced_security_state: AlwaysON
      soft_delete_feature_state: AlwaysON
      soft_delete_retention_period_in_days: 180
  register: output

- name: Assert that object has changed
  ansible.builtin.assert:
    that:
      - output.properties.enhanced_security_state == "AlwaysON"
      - output.properties.soft_delete_feature_state == "AlwaysON"
      - output.properties.soft_delete_retention_period_in_days == 180

- name: Update tags on recovery services vault (append=false)
  azure.azcollection.azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    append_tags: false
    tags:
      TestTag1: TestValue1
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.changed

- name: Pause 3 minutes - wait for resource update to finish
  ansible.builtin.pause:
    minutes: 3

- name: Check tags on recovery services vault
  azure.azcollection.azure_rm_recoveryservicesvault_info:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - not output.changed
      - output.response.tags.TestTag1 is defined
      - output.response.tags.TestTag1 == 'TestValue1'

- name: Update tags on recovery services vault (append=true)
  azure.azcollection.azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    append_tags: true
    tags:
      TestTag2: TestValue2
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.changed

- name: Pause 3 minutes - wait for resource update to finish
  ansible.builtin.pause:
    minutes: 3

- name: Check tags on recovery services vault
  azure.azcollection.azure_rm_recoveryservicesvault_info:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - not output.changed
      - output.response.tags.TestTag1 is defined
      - output.response.tags.TestTag1 == 'TestValue1'
      - output.response.tags.TestTag2 is defined
      - output.response.tags.TestTag2 == 'TestValue2'

- name: Replace tags on recovery services vault (append=false)
  azure.azcollection.azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "present"
    append_tags: false
    tags:
      TestTag3: TestValue3
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.changed

- name: Pause 3 minutes - wait for resource update to finish
  ansible.builtin.pause:
    minutes: 3

- name: Check tags on recovery services vault
  azure.azcollection.azure_rm_recoveryservicesvault_info:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - not output.changed
      - not output.response.tags.TestTag1 is defined
      - not output.response.tags.TestTag2 is defined
      - output.response.tags.TestTag3 is defined
      - output.response.tags.TestTag3 == 'TestValue3'

- name: Delete Azure Recovery Service vault
  azure_rm_recoveryservicesvault:
    resource_group: "{{ resource_group }}"
    name: "{{ name_rpfx }}"
    location: "{{ location }}"
    state: "absent"
  register: output

- name: Assert that output has changed
  ansible.builtin.assert:
    that:
      - output.changed

- name: Delete user managed identities
  ansible.builtin.include_tasks: "{{ role_path }}/../../../integration_common_tasks/managed_identity.yml"
  vars:
    managed_identity_test_unique: 'recoveryvault'
    managed_identity_unique: "{{ item }}"
    managed_identity_action: 'delete'
    managed_identity_location: "{{ location }}"
  with_items:
    - '1'
    - '2'
