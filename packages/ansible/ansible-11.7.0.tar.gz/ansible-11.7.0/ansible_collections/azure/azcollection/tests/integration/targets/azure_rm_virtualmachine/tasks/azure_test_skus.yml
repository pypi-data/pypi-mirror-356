- name: Set variables
  ansible.builtin.include_tasks: setup.yml

- name: Set variables
  ansible.builtin.set_fact:
    network: 10.42.0.0/24
    subnet: 10.42.0.0/28
    vm_name: "vm{{ resource_group | hash('md5') | truncate(6, True, '') }}"
    network_name: "vnet{{ resource_group | hash('md5') | truncate(6, True, '') }}"
    subnet_name: "subnet{{ resource_group | hash('md5') | truncate(6, True, '') }}"

- name: Gather Resource Group info
  azure.azcollection.azure_rm_resourcegroup_info:
    name: "{{ resource_group }}"
  register: rg_info

- name: List available VM SKUs
  azure.azcollection.azure_rm_vmsku_info:
    location: westus2
    resource_type: "virtualMachines"
    size: "standard_B1"
    zone: true
  register: available_skus_result

- name: Create desired capabilities list
  ansible.builtin.set_fact:
    desired_capabilities: [
      {
        "name": "MaxResourceVolumeMB",
        "value": "4096"
      },
      {
        "name": "MemoryGB",
        "value": "2"
      }]

- name: Init skus_result
  ansible.builtin.set_fact:
    skus_result: []

- name: Process SKU's
  ansible.builtin.include_tasks: sku_filter.yml
  loop: "{{ available_skus_result.available_skus }}"
  loop_control:
    loop_var: sku
    label: "{{ sku.name }}"

- name: Assert skus_result
  ansible.builtin.assert:
    that:
      - skus_result | length > 0

- name: SETUP | Create virtual network
  azure_rm_virtualnetwork:
    resource_group: "{{ resource_group }}"
    name: "{{ network_name }}"
    location: westus2
    address_prefixes: "{{ network }}"

- name: SETUP | Create subnet
  azure_rm_subnet:
    resource_group: "{{ resource_group }}"
    name: "{{ subnet_name }}"
    address_prefix: "{{ subnet }}"
    virtual_network: "{{ network_name }}"

- name: Create VM with first sku in avilable skus list
  azure_rm_virtualmachine:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}"
    admin_username: "testuser"
    ssh_password_enabled: false
    open_ports:
      - 33
    ssh_public_keys:
      - path: /home/testuser/.ssh/authorized_keys
        key_data: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfoYlIV4lTPZTv7hXaVwQQuqBgGs4yeNRX0SPo2+HQt9u4X7IGwrtXc0nEUm6LfaCikMH58bOL8f20NTGz285kxdFHZRcBXtqmnMz2rXwhK9gwq5h1khc+GzHtdcJXsGA4y0xuaNcidcg04jxAlN/06fwb/VYwwWTVbypNC0gpGEpWckCNm8vlDlA55sU5et0SZ+J0RKVvEaweUOeNbFZqckGPA384imfeYlADppK/7eAxqfBVadVvZG8IJk4yvATgaIENIFj2cXxqu2mQ/Bp5Wr45uApvJsFXmi+v/nkiOEV1QpLOnEwAZo6EfFS4CCQtsymxJCl1PxdJ5LD4ZOtP xiuxi.sun@qq.com"
    vm_size: "{{ skus_result[0] }}"
    virtual_network: "{{ network_name }}"
    location: westus2
    image:
      offer: 0001-com-ubuntu-server-focal
      publisher: Canonical
      sku: 20_04-lts
      version: latest
  register: vm_output

- name: Query auto created security group before deleting
  azure_rm_securitygroup_info:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}01"
  register: nsg_result

- name: Assert that security group were exist before deleting
  ansible.builtin.assert:
    that:
      - nsg_result.securitygroups | length == 1
      - nsg_result.securitygroups[0].network_interfaces | length == 1

- name: Delete VM
  azure_rm_virtualmachine:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}"
    remove_on_absent: all_autocreated
    state: absent

- name: Query auto created NIC
  azure_rm_networkinterface_info:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}01"
  register: nic_result

- name: Query auto created security group
  azure_rm_securitygroup_info:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}01"
  register: nsg_result

- name: Query auto created public IP
  azure_rm_publicipaddress_info:
    resource_group: "{{ resource_group }}"
    name: "{{ vm_name }}01"
  register: pip_result

- name: Assert that autocreated resources were deleted
  ansible.builtin.assert:
    that:
      # what about the default storage group?
      - nic_result.networkinterfaces | length == 0
      - nsg_result.securitygroups | length == 0
      - pip_result.publicipaddresses | length == 0

- name: Destroy subnet
  azure_rm_subnet:
    resource_group: "{{ resource_group }}"
    virtual_network: "{{ network_name }}"
    name: "{{ subnet_name }}"
    state: absent

- name: Destroy virtual network
  azure_rm_virtualnetwork:
    resource_group: "{{ resource_group }}"
    name: "{{ network_name }}"
    state: absent

- name: Destroy availability set
  azure_rm_availabilityset:
    resource_group: "{{ resource_group }}"
    name: "{{ availability_set }}"
    state: absent

- name: Destroy storage account
  azure_rm_storageaccount:
    resource_group: "{{ resource_group }}"
    name: "{{ storage_account }}"
    force_delete_nonempty: true
    state: absent
