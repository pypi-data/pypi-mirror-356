# Default recipe to run when just is called without arguments
default:
    @just --list

# Create virtual environment and install dependencies
venv:
    pip install uv
    uv venv 
    source .venv/bin/activate 
    @just install

# Install dependencies
install:
    uv pip install -e ".[dev]"
    uv sync --all-extras

# Update dependencies
update:
    uv pip install -e ".[dev]"
    uv lock --upgrade

# Run MCP server in development mode
dev:
    uv runmcp dev robosystems_mcp/server.py

# Run MCP server with custom Neo4j config
run db-url="bolt://localhost:7687" username="neo4j" password="" database="neo4j":
    uv run robosystems-mcp --db-url {{db-url}} --username {{username}} --password {{password}} --database {{database}}

# Run tests
test:
    uv run pytest

# Run all tests
test-all:
    @just test
    @just lint
    @just format
    @just typecheck

# Run tests with coverage
test-cov:
    uv run pytest --cov=robosystems_mcp tests/

# Run linting
lint:
    uv run ruff check .
    uv run ruff format --check .

# Format code
format:
    uv run ruff format .

# Fix linting errors
lint-fix:
    uv run ruff format . -- --fix
    uv run ruff check . -- --fix

# Run type checking
typecheck:
    uv run pyright

# Version management
create-release type="patch":
    bin/create-release {{type}}

# Create PR
create-pr target-branch="main" pr-type="release" claude-review="true":
    bin/create-pr {{target-branch}} {{pr-type}} {{claude-review}}

# Clean up development artifacts
clean:
    rm -rf .pytest_cache
    rm -rf .ruff_cache
    rm -rf __pycache__
    rm -rf robosystems_mcp.egg-info
    find . -type d -name "__pycache__" -exec rm -rf {} +
    find . -type f -name "*.pyc" -delete

# Show help
help:
    @just --list