# coding: utf-8

"""
    OpenPay API

    super charge your subscription management.

    The version of the OpenAPI document: 1.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class ObjectName(str, Enum):
    """
    ObjectName
    """

    """
    allowed enum values
    """
    ACCOUNT = 'account'
    API_TOKEN = 'api_token'
    BILLING_METER = 'billing_meter'
    BILLING_METER_EVENT = 'billing_meter_event'
    BILLING_METER_EVENT_ADJUSTMENT = 'billing_meter_event_adjustment'
    BUNDLE = 'bundle'
    CHARGE = 'charge'
    CHECKOUT_ATTEMPT = 'checkout_attempt'
    CHECKOUT_SESSION = 'checkout_session'
    CHECKOUT_SESSION_ITEM = 'checkout_session_item'
    COUPON = 'coupon'
    CREDIT_NOTE = 'credit_note'
    CREDIT_NOTE_ITEM = 'credit_note_item'
    CUSTOMER = 'customer'
    CUSTOMER_BALANCE_TRANSACTION = 'customer_balance_transaction'
    DELIVERY_ATTEMPT = 'delivery_attempt'
    DISCOUNT = 'discount'
    DISPUTE = 'dispute'
    EVENT = 'event'
    INVITE = 'invite'
    INVOICE_ITEM_DISCOUNT = 'invoice_item_discount'
    INVOICE = 'invoice'
    INVOICE_DISCOUNT = 'invoice_discount'
    INVOICE_ITEM = 'invoice_item'
    PAYMENT_INTENT = 'payment_intent'
    PAYMENT_LINK = 'payment_link'
    PAYMENT_LINK_LINE_ITEM = 'payment_link_line_item'
    PAYMENT_METHOD = 'payment_method'
    TOKENIZED_CARD_PAYMENT_METHOD = 'tokenized_card_payment_method'
    PAYMENT_METHOD_MAPPING = 'payment_method_mapping'
    PAYMENT_PROCESSOR = 'payment_processor'
    PAYMENT_ROUTE = 'payment_route'
    PORTAL_SESSION = 'portal_session'
    PRICE = 'price'
    PRICE_TIER = 'price_tier'
    PROCESSOR_CARD_CHECKOUT_STATE = 'processor_card_checkout_state'
    PRODUCT = 'product'
    PRODUCT_FAMILY = 'product_family'
    PROMOTION_CODE = 'promotion_code'
    REFUND = 'refund'
    SETUP_INTENT = 'setup_intent'
    SIGNUP_ANSWERS = 'signup_answers'
    SIGNUP_QUESTIONS = 'signup_questions'
    SIGNUP_QUESTIONNAIRE_STATUS = 'signup_questionnaire_status'
    SINGLE_USE_TOKEN = 'single_use_token'
    STATE_TRANSITION_LOG = 'state_transition_log'
    SUBSCRIPTION = 'subscription'
    SUBSCRIPTION_ITEM = 'subscription_item'
    TAX_INTEGRATION = 'tax_integration'
    UNIFIED_CC_STATE = 'unified_cc_state'
    USER = 'user'
    USER_LOGIN = 'user_login'
    USER_RECORD = 'user_record'
    USER_RECORD_SUMMARY = 'user_record_summary'
    TRANSITION_ELIGIBILITY = 'transition_eligibility'
    WEBHOOK_ENDPOINT = 'webhook_endpoint'
    EMAIL = 'email'
    ANALYTICS_SEGMENT = 'analytics_segment'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ObjectName from a JSON string"""
        return cls(json.loads(json_str))


