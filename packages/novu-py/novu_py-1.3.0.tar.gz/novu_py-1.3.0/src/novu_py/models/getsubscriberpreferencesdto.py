"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .subscriberglobalpreferencedto import (
    SubscriberGlobalPreferenceDto,
    SubscriberGlobalPreferenceDtoTypedDict,
)
from .subscriberworkflowpreferencedto import (
    SubscriberWorkflowPreferenceDto,
    SubscriberWorkflowPreferenceDtoTypedDict,
)
from novu_py.types import BaseModel
import pydantic
from typing import List
from typing_extensions import Annotated, TypedDict


class GetSubscriberPreferencesDtoTypedDict(TypedDict):
    global_: SubscriberGlobalPreferenceDtoTypedDict
    r"""Global preference settings"""
    workflows: List[SubscriberWorkflowPreferenceDtoTypedDict]
    r"""Workflow-specific preference settings"""


class GetSubscriberPreferencesDto(BaseModel):
    global_: Annotated[SubscriberGlobalPreferenceDto, pydantic.Field(alias="global")]
    r"""Global preference settings"""

    workflows: List[SubscriberWorkflowPreferenceDto]
    r"""Workflow-specific preference settings"""
