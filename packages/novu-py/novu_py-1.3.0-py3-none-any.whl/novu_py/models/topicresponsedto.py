"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from novu_py.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TopicResponseDtoTypedDict(TypedDict):
    id: str
    r"""The identifier of the topic"""
    key: str
    r"""The unique key of the topic"""
    name: NotRequired[str]
    r"""The name of the topic"""
    created_at: NotRequired[str]
    r"""The date the topic was created"""
    updated_at: NotRequired[str]
    r"""The date the topic was last updated"""


class TopicResponseDto(BaseModel):
    id: Annotated[str, pydantic.Field(alias="_id")]
    r"""The identifier of the topic"""

    key: str
    r"""The unique key of the topic"""

    name: Optional[str] = None
    r"""The name of the topic"""

    created_at: Annotated[Optional[str], pydantic.Field(alias="createdAt")] = None
    r"""The date the topic was created"""

    updated_at: Annotated[Optional[str], pydantic.Field(alias="updatedAt")] = None
    r"""The date the topic was last updated"""
