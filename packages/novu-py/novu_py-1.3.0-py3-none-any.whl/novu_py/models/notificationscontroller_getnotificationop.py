"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .activitynotificationresponsedto import (
    ActivityNotificationResponseDto,
    ActivityNotificationResponseDtoTypedDict,
)
from novu_py.types import BaseModel
from novu_py.utils import FieldMetadata, HeaderMetadata, PathParamMetadata
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class NotificationsControllerGetNotificationRequestTypedDict(TypedDict):
    notification_id: str
    idempotency_key: NotRequired[str]
    r"""A header for idempotency purposes"""


class NotificationsControllerGetNotificationRequest(BaseModel):
    notification_id: Annotated[
        str,
        pydantic.Field(alias="notificationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    idempotency_key: Annotated[
        Optional[str],
        pydantic.Field(alias="idempotency-key"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""A header for idempotency purposes"""


class NotificationsControllerGetNotificationResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: ActivityNotificationResponseDtoTypedDict


class NotificationsControllerGetNotificationResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: ActivityNotificationResponseDto
