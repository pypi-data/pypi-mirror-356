"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .notificationtriggerdto import (
    NotificationTriggerDto,
    NotificationTriggerDtoTypedDict,
)
from .workfloworiginenum import WorkflowOriginEnum
from novu_py.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ActivityNotificationTemplateResponseDtoTypedDict(TypedDict):
    name: str
    r"""Name of the template"""
    triggers: List[NotificationTriggerDtoTypedDict]
    r"""Triggers of the template"""
    id: NotRequired[str]
    r"""Unique identifier of the template"""
    origin: NotRequired[WorkflowOriginEnum]
    r"""Origin of the workflow"""


class ActivityNotificationTemplateResponseDto(BaseModel):
    name: str
    r"""Name of the template"""

    triggers: List[NotificationTriggerDto]
    r"""Triggers of the template"""

    id: Annotated[Optional[str], pydantic.Field(alias="_id")] = None
    r"""Unique identifier of the template"""

    origin: Optional[WorkflowOriginEnum] = None
    r"""Origin of the workflow"""
