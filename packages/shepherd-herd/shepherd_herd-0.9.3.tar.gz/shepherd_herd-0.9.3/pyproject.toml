[project]
name = "shepherd_herd"
description = "Synchronized Energy Harvesting Emulator and Recorder CLI"
keywords = ["testbed", "beaglebone", "pru", "batteryless", "energyharvesting", "solar"]

authors = [
    {name = "Kai Geissdoerfer", email = "kai.geissdoerfer@tu-dresden.de"},
    {name = "Ingmar Splitt", email = "ingmar.splitt@tu-dresden.de"},
]
maintainers = [
    {name = "Ingmar Splitt", email = "ingmar.splitt@tu-dresden.de"},
]

license = {text = "MIT"}
dynamic = ["version"]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Natural Language :: English",
]
requires-python = ">= 3.10"
dependencies = [
    "shepherd-core[elf,inventory]>=2025.06.4",  # limit due to newest features
    "click",
    "numpy",
    "fabric",
    "pyYAML",
    "tqdm",
]

[project.optional-dependencies]
dev = [
    "twine",
    "pre-commit",
    "pyright",
    "ruff",
]
test = [
    "pytest",
    "pytest-timeout",
    "pytest-click",
    "shepherd-data",
]

[project.urls]
Homepage = "https://pypi.org/project/shepherd-herd"
Documentation = "https://nes-lab.github.io/shepherd"
Issues = "https://github.com/nes-lab/shepherd/issues"
Source = "https://github.com/nes-lab/shepherd"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.scripts]
shepherd-herd = "shepherd_herd.herd_cli:cli"

[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "."}
zip-safe = true
include-package-data = true
platforms = ["unix", "linux", "osx", "cygwin", "win32", "win64"]

[tool.setuptools.packages.find]
where = ["."]
namespaces = false

[tool.setuptools.dynamic]
version = {attr = "shepherd_herd.__version__"}

[tool.aliases]
test = "pytest"

[tool.pytest.ini_options]
markers = ["program: test flashing firmware to targets"]
addopts = "-vvv --stepwise"

[tool.pyright]
root = "./"
include = ['./shepherd_herd', ]
pythonVersion = "3.10"
pythonPlatform = "All"
reportMissingParameterType = true
