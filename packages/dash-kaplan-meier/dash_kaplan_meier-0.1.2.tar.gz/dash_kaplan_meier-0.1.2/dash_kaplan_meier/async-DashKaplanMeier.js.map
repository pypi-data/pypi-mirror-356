{"version":3,"file":"async-DashKaplanMeier.js","mappings":"+uCAGA,IAOqBA,EAAe,SAAAC,GAAA,SAAAD,IAAA,O,4FAAAE,CAAA,KAAAF,G,qYAAAG,CAAA,KAAAH,EAAAI,UAAA,Q,qRAAAC,CAAAL,EAAAC,G,EAAAD,E,EAAA,EAAAM,IAAA,SAAAC,MAChC,WACI,IAAAC,EAAqCC,KAAKC,MAAnCC,EAAEH,EAAFG,GAAIC,EAAKJ,EAALI,MAAOC,EAAQL,EAARK,SAAUN,EAAKC,EAALD,MAE5B,OACIO,IAAAA,cAAA,OAAKH,GAAIA,GAAI,qBACUC,EAAM,IACzBE,IAAAA,cAAA,SACIP,MAAOA,EACPQ,SAUI,SAAAC,GAAC,OAAIH,EAAS,CAAEN,MAAOS,EAAEC,OAAOV,OAAQ,IAK5D,I,gFAAC,CAxB+B,CAASW,EAAAA,WA2B7ClB,EAAgBmB,aAAe,CAAC,EAEhCnB,EAAgBoB,UAAY,CAIxBT,GAAIU,IAAAA,OAKJT,MAAOS,IAAAA,OAAiBC,WAKxBf,MAAOc,IAAAA,OAMPR,SAAUQ,IAAAA,K","sources":["webpack:///./src/lib/fragments/DashKaplanMeier.react.js"],"sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * ExampleComponent is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nexport default class DashKaplanMeier extends Component {\n    render() {\n        const {id, label, setProps, value} = this.props;\n\n        return (\n            <div id={id}>\n                ExampleComponent: {label}&nbsp;\n                <input\n                    value={value}\n                    onChange={\n                        /*\n                         * Send the new value to the parent component.\n                         * setProps is a prop that is automatically supplied\n                         * by dash's front-end (\"dash-renderer\").\n                         * In a Dash app, this will update the component's\n                         * props and send the data back to the Python Dash\n                         * app server if a callback uses the modified prop as\n                         * Input or State.\n                         */\n                        e => setProps({ value: e.target.value })\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nDashKaplanMeier.defaultProps = {};\n\nDashKaplanMeier.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * A label that will be printed when this component is rendered.\n     */\n    label: PropTypes.string.isRequired,\n\n    /**\n     * The value displayed in the input.\n     */\n    value: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};\n"],"names":["DashKaplanMeier","_Component","_classCallCheck","_callSuper","arguments","_inherits","key","value","_this$props","this","props","id","label","setProps","React","onChange","e","target","Component","defaultProps","propTypes","PropTypes","isRequired"],"sourceRoot":""}