[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "modelaudit"
version = "0.1.4"
description = "Static scanning library for detecting malicious code, backdoors, and other security risks in ML model files"
authors = [
    { name = "Ian Webster", email = "ian@promptfoo.dev" }
]
license = { text = "MIT" }
readme = "README.md"
keywords = ["ai", "ml", "security", "model-scanning", "pickle", "tensorflow", "pytorch"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Security",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "click>=8.1.3",
    "yaspin>=2.3.0",
    "numpy>=1.19.0",
    "scipy>=1.5.0",
    "defusedxml>=0.7.1",
]

[project.optional-dependencies]
tensorflow = ["tensorflow>=2.13.0"]
h5 = ["h5py>=3.1"]
pytorch = ["torch>=1.6"]
yaml = ["pyyaml>=6.0"]
safetensors = ["safetensors>=0.4.0"]
onnx = ["onnx>=1.12.0"]
dill = ["dill>=0.3.0"]
joblib = ["joblib>=1.0.0", "scikit-learn>=1.0.0"]
flax = ["msgpack>=1.0.0"]
tflite = ["tflite>=2.18.0"]
all = ["tensorflow>=2.13.0", "h5py>=3.1", "torch>=1.6", "pyyaml>=6.0", "safetensors>=0.4.0", "onnx>=1.12.0", "dill>=0.3.0", "joblib>=1.0.0", "scikit-learn>=1.0.0", "msgpack>=1.0.0", "tflite>=2.18.0"]

[project.scripts]
modelaudit = "modelaudit.cli:main"

[project.urls]
Repository = "https://github.com/promptfoo/modelaudit"
Homepage = "https://github.com/promptfoo/modelaudit"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=7.0.0",
    "coverage>=7.2.7",
    "mypy>=1.4.1",
    "ruff>=0.10.0",
    "types-PyYAML>=6.0.12.20250516",
    "types-tensorflow>=2.18.0.20250516",
    "pytest-cov>=6.2.1",
    "dill>=0.4.0",
    "pytest-xdist>=3.7.0",
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["S101"]

[tool.ruff.format]
# Black-compatible formatting

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "--tb=short",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks",
    "unit: marks tests as unit tests (fast)",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
ignore_missing_imports = true
no_implicit_optional = false
