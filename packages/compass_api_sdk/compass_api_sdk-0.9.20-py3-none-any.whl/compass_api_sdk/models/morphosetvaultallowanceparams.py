"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


MorphoSetVaultAllowanceParamsAmountTypedDict = TypeAliasType(
    "MorphoSetVaultAllowanceParamsAmountTypedDict", Union[float, str]
)
r"""The amount of tokens to increase the allowance by."""


MorphoSetVaultAllowanceParamsAmount = TypeAliasType(
    "MorphoSetVaultAllowanceParamsAmount", Union[float, str]
)
r"""The amount of tokens to increase the allowance by."""


class MorphoSetVaultAllowanceParamsTypedDict(TypedDict):
    vault_address: str
    r"""The vault address you are increasing the allowance for."""
    amount: MorphoSetVaultAllowanceParamsAmountTypedDict
    r"""The amount of tokens to increase the allowance by."""
    action_type: Literal["MORPHO_SET_VAULT_ALLOWANCE"]


class MorphoSetVaultAllowanceParams(BaseModel):
    vault_address: str
    r"""The vault address you are increasing the allowance for."""

    amount: MorphoSetVaultAllowanceParamsAmount
    r"""The amount of tokens to increase the allowance by."""

    ACTION_TYPE: Annotated[
        Annotated[
            Optional[Literal["MORPHO_SET_VAULT_ALLOWANCE"]],
            AfterValidator(validate_const("MORPHO_SET_VAULT_ALLOWANCE")),
        ],
        pydantic.Field(alias="action_type"),
    ] = "MORPHO_SET_VAULT_ALLOWANCE"
