"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import validate_const
from enum import Enum
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


MorphoSetVaultAllowanceRequestAmountTypedDict = TypeAliasType(
    "MorphoSetVaultAllowanceRequestAmountTypedDict", Union[float, str]
)
r"""The amount of tokens to increase the allowance by."""


MorphoSetVaultAllowanceRequestAmount = TypeAliasType(
    "MorphoSetVaultAllowanceRequestAmount", Union[float, str]
)
r"""The amount of tokens to increase the allowance by."""


class MorphoSetVaultAllowanceRequestChain(str, Enum):
    ETHEREUM_MAINNET = "ethereum:mainnet"
    BASE_MAINNET = "base:mainnet"


class MorphoSetVaultAllowanceRequestTypedDict(TypedDict):
    vault_address: str
    r"""The vault address you are increasing the allowance for."""
    amount: MorphoSetVaultAllowanceRequestAmountTypedDict
    r"""The amount of tokens to increase the allowance by."""
    chain: MorphoSetVaultAllowanceRequestChain
    sender: str
    r"""The address of the transaction sender."""
    action_type: Literal["MORPHO_SET_VAULT_ALLOWANCE"]


class MorphoSetVaultAllowanceRequest(BaseModel):
    vault_address: str
    r"""The vault address you are increasing the allowance for."""

    amount: MorphoSetVaultAllowanceRequestAmount
    r"""The amount of tokens to increase the allowance by."""

    chain: MorphoSetVaultAllowanceRequestChain

    sender: str
    r"""The address of the transaction sender."""

    ACTION_TYPE: Annotated[
        Annotated[
            Optional[Literal["MORPHO_SET_VAULT_ALLOWANCE"]],
            AfterValidator(validate_const("MORPHO_SET_VAULT_ALLOWANCE")),
        ],
        pydantic.Field(alias="action_type"),
    ] = "MORPHO_SET_VAULT_ALLOWANCE"
