Metadata-Version: 2.3
Name: agent-uri
Version: 0.2.0
Summary: Agent URI Protocol Implementation - A complete suite for addressing and interacting with AI agents
License: MIT
Keywords: agent,uri,protocol,ai,rfc
Author: Yaswanth Narvaneni
Author-email: yaswanth@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Networking
Requires-Dist: fastapi (>=0.104.0,<0.105.0)
Requires-Dist: jsonschema (>=4.20.0,<5.0.0)
Requires-Dist: pydantic (>=2.5.0,<3.0.0)
Requires-Dist: pyjwt (>=2.8.0,<3.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: requests-cache (>=1.1.0,<2.0.0)
Requires-Dist: sseclient-py (>=1.8.0,<2.0.0)
Requires-Dist: uvicorn (>=0.24.0,<0.25.0)
Requires-Dist: websocket-client (>=1.7.0,<2.0.0)
Project-URL: Documentation, https://agent-uri.readthedocs.io
Project-URL: Homepage, https://github.com/WizardOfAgents/agent-uri
Project-URL: Repository, https://github.com/WizardOfAgents/agent-uri
Description-Content-Type: text/markdown

# Agent URI Reference Implementation

This repository contains a reference implementation of the `agent://` protocol as defined in the [protocol specification](docs/rfc/draft-narvaneni-agent-uri-00.md).

## Overview

The `agent://` protocol is a URI-based framework for addressing, invoking, and interoperating with autonomous and semi-autonomous software agents. It introduces a layered architecture that supports minimal implementations (addressing and transport) and extensible features (capability discovery, contracts, orchestration).

This reference implementation provides a complete implementation of the protocol, including:

- URI parsing and validation
- Agent descriptor handling
- Resolution framework
- Transport bindings (HTTPS, WebSocket, Local)
- Security implementations
- Client and server SDKs
- Integration with other protocols (Agent2Agent, MCP)
- Example implementations and tools

## Architecture

The implementation follows a modular, layered architecture:

```
agent-uri/
├── README.md                    # Project overview, setup instructions
├── docs/                        # Documentation
│   ├── architecture.md          # Architecture overview
│   ├── api-reference.md         # API documentation
│   ├── examples.md              # Usage examples
│   ├── rfc/                     # RFC documents
│   ├── spec/                    # Specification details
│   └── archive/                 # Archived documents
├── packages/                    # Core packages
│   ├── uri-parser/              # URI parsing and manipulation
│   ├── descriptor/              # Agent descriptor handling
│   ├── resolver/                # Resolution framework
│   ├── transport/               # Transport bindings
│   │   ├── transports/          # Transport implementations
│   │   └── registry             # Transport registry
│   ├── client/                  # Client SDK
│   ├── server/                  # Server SDK
│   └── common/                  # Shared utilities and types
└── examples/                    # Example implementations
    └── echo-agent/              # Echo agent example
```

## Getting Started

*Coming soon*

## Documentation

- [Architecture Overview](docs/architecture.md)
- [API Reference](docs/api-reference.md)
- [Usage Examples](docs/examples.md)
- [Protocol Specification](docs/rfc/draft-narvaneni-agent-uri-00.md)

## License

[BSD 3-Clause License](./LICENSE)

