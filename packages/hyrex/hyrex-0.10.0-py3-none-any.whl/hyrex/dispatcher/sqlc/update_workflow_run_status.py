# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.29.0
# source: update_workflow_run_status.sql
import dataclasses
from typing import Any
import uuid

import sqlalchemy
import sqlalchemy.ext.asyncio

from . import models


UPDATE_WORKFLOW_RUN_STATUS = """-- name: update_workflow_run_status \\:exec
UPDATE hyrex_workflow_run
SET status = :p2\\:\\:workflow_run_status,
    last_heartbeat = now()
WHERE id = :p1
"""


@dataclasses.dataclass()
class UpdateWorkflowRunStatusParams:
    id: uuid.UUID
    column_2: Any


class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def update_workflow_run_status(self, arg: UpdateWorkflowRunStatusParams) -> None:
        self._conn.execute(sqlalchemy.text(UPDATE_WORKFLOW_RUN_STATUS), {"p1": arg.id, "p2": arg.column_2})


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def update_workflow_run_status(self, arg: UpdateWorkflowRunStatusParams) -> None:
        await self._conn.execute(sqlalchemy.text(UPDATE_WORKFLOW_RUN_STATUS), {"p1": arg.id, "p2": arg.column_2})
