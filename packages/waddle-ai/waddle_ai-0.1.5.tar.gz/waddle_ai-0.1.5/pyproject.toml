[project]
name = "waddle-ai"
version = "v0.1.5"
description = "A podcast preprocessing library for aligning, normalizing, and transcribing audio files."
readme = "README.md"
requires-python = ">=3.13"
license = { text = "MIT" }
authors = [
    { name = "Masamune Ishihara", email = "mwishiha@ucsc.edu" },
    { name = "Shun Kashiwa", email = "skashiwa@ucsd.edu" },
]
dependencies = [
    "librosa>=0.11.0",
    "mutagen>=1.47.0",
    "numpy>=2.0.0",
    "platformdirs>=4.3.6",
    "pydub>=0.25.1",
    "soundfile>=0.12.1",
    "tqdm>=4.67.1",
    "numba>=0.61.2",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Utilities",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/waddle"]

[tool.hatch.build.targets.sdist]
exclude = ["tests", "assets", "htmlcov"]

[project.scripts]
waddle = "waddle.__main__:main"

[tool.uv]
package = true


[dependency-groups]
dev = ["pyright>=1.1.394", "pytest>=8.3.4", "pytest-cov>=6.0.0", "ruff>=0.9.5"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "PTH", # flake8-use-pathlib
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*_test.py"]

[tool.pyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.13"
typeCheckingMode = "basic"     # TODO: Change to "strict" after fixing basic issues
reportMissingImports = true
reportMissingTypeStubs = false
useLibraryCodeForTypes = true
include = ["src", "tests"]
