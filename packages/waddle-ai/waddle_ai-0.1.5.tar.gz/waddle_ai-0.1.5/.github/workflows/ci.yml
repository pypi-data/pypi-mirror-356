name: CI

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

jobs:
  ci-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: emptymap/setup-ffmpeg@5644f1ea8a58c026223ed8d5147314e7fb7ae3ba
        id: setup-ffmpeg
        with:
          ffmpeg-version: 7.0.2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install Python dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"

      - name: Run checks
        run: |
          uv run ruff check
          uv run ruff format

      - name: Run Pyright
        run: uv run pyright

      - name: Run tests with coverage
        run: |
          uv run pytest --cov=src --junitxml=junit.xml -o junit_family=legacy --cov-report "xml:coverage.xml" --cov-report=term-missing --cov-config=pyproject.toml
        env:
          WHISPER_MODEL_NAME: "tiny"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish-to-pypi:
    name: Release to PyPI
    runs-on: ubuntu-latest
    needs: ci-checks
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/project/waddle-ai/
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get tag version
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Check pyproject.toml version
        id: check_version
        run: |
          TAG_VERSION=${{ github.ref_name }}
          PYPROJECT_VERSION=$(grep '^version = ' pyproject.toml | sed -E 's/version = "([^"]+)"/\1/')
          echo "Found version in pyproject.toml: $PYPROJECT_VERSION"
          if [ "$TAG_VERSION" != "$PYPROJECT_VERSION" ]; then
            echo "Version mismatch! Updating pyproject.toml to match the tag."
            sed -i "s/version = \"$PYPROJECT_VERSION\"/version = \"$TAG_VERSION\"/" pyproject.toml
          fi

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Build the package
        run: uv build

      - name: Publish to PyPi
        run: uv publish -v
