Metadata-Version: 2.4
Name: i2c-for-esp32
Version: 0.4.4
Summary: I2C library for ESP32
Home-page: https://github.com/iory/i2c-for-esp32
Author: iory
Author-email: yanokura@jsk.imi.i.u-tokyo.ac.jp
License: MIT
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE.md
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: summary

# i2c-for-esp32

## Extended Arduino Library for I2C Slave on ESP32

This repository contains modifications to the original Arduino library found at https://github.com/gutierrezps/ESP32_I2C_Slave .
The key enhancement enables the sending of longer packets.

Packet Format
The expected packet format is detailed below:

```
[0]: start byte (0x02)
[1]: number of packet length bytes (L)
[2:2+L]: packet length (N)
[2+L]: data[0]
[3+L]: data[1]
...
[N+1+L]: data[N-1]
[N+2+L]: CRC8 of packet length and data
[N+3+L]: end byte (0x04)
```

Feel free to expand on this by adding any installation, usage instructions or any other relevant details as required.

## Python library


We provide a Python library for exchanging bytearrays received in Python.

You can install it using the following command:

```
pip install i2c-for-esp32
```

For usage instructions, please refer to:
https://github.com/iory/i2c-for-esp32/blob/master/examples/radxa_with_atom_echo/radxa_i2c_audio_publisher.py

## Sample

### Radxa with Atom Echo

A sample that communicates with radxa and atom echo to retrieve audio data from a microphone can be found at:
https://github.com/iory/i2c-for-esp32/tree/master/examples/radxa_with_atom_echo
