[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'

[tool.isort]
combine_as_imports = true
force_alphabetical_sort_within_sections = true
# Override force_grid_wrap value from profile=black, but black is still happy
force_grid_wrap = 2
# Same line length as for black
line_length = 120
no_lines_before = "LOCALFOLDER"
profile = "black"
reverse_relative = true

[tool.ruff]
target-version = "py37"

[tool.ruff.lint]
# Enable: pycodestyle errors (E), Pyflakes (F), flake8-bugbear (B),
# flake8-comprehensions (C4), flake8-logging-format (G),
# flake8-implicit-str-concat (ISC) and pyupgrade (UP)
select = ["E", "F", "B", "C4", "G", "ISC", "NPY", "UP"]
# Exceptions:
# B9 flake8-bugbear opinionated warnings
# E501 is line length (delegated to black)
# G* are TODOs
# UP006 and UP035 are PEP 585 type annotations
ignore = ["B9", "E501", "G001", "G002", "G004", "UP006", "UP035"]

[tool.ruff.lint.flake8-comprehensions]

allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.isort]
# We are not selecting "I" rules in ruff yet because support for all the isort
# options we need is not complete, but these are the one currently implemented.
combine-as-imports = true
relative-imports-order = "closest-to-furthest"

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
