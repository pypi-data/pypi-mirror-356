# Dynamic versioning from:
# https://github.com/ninoseki/uv-dynamic-versioning/

[project]
name = "tilemath"
description = "API-compatible replacement for the Mercantile library with full type safety."
authors = [{ name = "Edward Jones", email = "e@eddie.land" }]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10,<4.0"
dynamic = ["version"]
keywords = [
    "gis",
    "mapping",
    "tiles",
    "mercantile",
    "coordinates",
    "geospatial",
    "spherical-mercator",
    "web-mercator",
    "quadkey",
    "slippy-map",
]

# https://pypi.org/classifiers/
# Adjust as needed:
classifiers = [
    "Development Status :: 4 - Beta",
    # "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = [
    "typing-extensions>=4.14.0",
]

[dependency-groups]
dev = [
    "codespell>=2.4.1",
    "hypothesis>=6.135.11",
    "mercantile>=1.2.1",
    "mypy>=1.8.0",
    "pytest>=8.3.5",
    "pytest-sugar>=1.0.0",
    "ruff>=0.11.9",
]

[project.urls]
Homepage = "https://github.com/eddieland/tilemath"
Repository = "https://github.com/eddieland/tilemath"
"Bug Tracker" = "https://github.com/eddieland/tilemath/issues"
Changelog = "https://github.com/eddieland/tilemath/releases"

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"
# Note JSON schemas don't seem to be right for tool.hatch.version.source so
# this may cause false warnings in IDEs.
# https://github.com/ninoseki/uv-dynamic-versioning/issues/21

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = "true"

[tool.hatch.build.targets.wheel]
# The source location for the package.
packages = ["src/tilemath"]

[tool.ruff]
line-length = 120

[tool.ruff.format]
# Use double quotes for strings (black standard)
quote-style = "double"

# Indent with spaces (black standard)
indent-style = "space"

# Like black
line-ending = "auto"

[tool.ruff.lint]
select = [
    # See: https://docs.astral.sh/ruff/rules/
    # Basic list from: https://docs.astral.sh/ruff/linter/#rule-selection
    "E",  # https://docs.astral.sh/ruff/rules/#error-e
    "F",  # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "UP", # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "B",  # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "I",  # https://docs.astral.sh/ruff/rules/#isort-i
    # Add pydocstyle for Google-style docstrings
    "D", # https://docs.astral.sh/ruff/rules/#pydocstyle-d
]
ignore = [
    # Disable some rules that are overly pedantic. Add/remove as desired:
    "E501", # https://docs.astral.sh/ruff/rules/line-too-long/
    "E402", # https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file/
    "E731", # https://docs.astral.sh/ruff/rules/lambda-assignment/
    # We use both ruff formatter and linter so some rules should always be disabled.
    # See: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",   # https://docs.astral.sh/ruff/rules/tab-indentation/
    "E111",   # https://docs.astral.sh/ruff/rules/indentation-with-invalid-multiple/
    "E114",   # https://docs.astral.sh/ruff/rules/indentation-with-invalid-multiple-comment/
    "E117",   # https://docs.astral.sh/ruff/rules/over-indented/
    "D206",   # https://docs.astral.sh/ruff/rules/docstring-tab-indentation/
    "D300",   # https://docs.astral.sh/ruff/rules/triple-single-quotes/
    "Q000",   # https://docs.astral.sh/ruff/rules/bad-quotes-inline-string/
    "Q001",   # https://docs.astral.sh/ruff/rules/bad-quotes-multiline-string/
    "Q002",   # https://docs.astral.sh/ruff/rules/bad-quotes-docstring/
    "Q003",   # https://docs.astral.sh/ruff/rules/avoidable-escaped-quote/
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    "COM819", # https://docs.astral.sh/ruff/rules/prohibited-trailing-comma/
    "ISC002", # https://docs.astral.sh/ruff/rules/multi-line-implicit-string-concatenation/
]

[tool.ruff.lint.pydocstyle]
convention = "google" # Enforce Google-style docstrings

[tool.ruff.lint.per-file-ignores]
# Suppress docstring rules for tests
"tests/**/*.py" = ["D"]

[tool.mypy]
mypy_path = "src:typings"

# Strict mypy configuration
platform = "linux"
python_version = "3.11"
strict = true

# Additional strict settings beyond the basic strict mode
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
strict_equality = true
strict_concatenate = true

# Error output settings
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true

# Import discovery
namespace_packages = true
explicit_package_bases = true

# Miscellaneous strictness
no_implicit_reexport = true
local_partial_types = true


[tool.pytest.ini_options]
python_files = ["*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
testpaths = ["src", "tests"]
norecursedirs = []
filterwarnings = []
