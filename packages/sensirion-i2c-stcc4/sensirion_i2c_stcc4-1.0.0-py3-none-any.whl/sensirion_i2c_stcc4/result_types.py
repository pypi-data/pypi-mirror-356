#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# (c) Copyright 2025 Sensirion AG, Switzerland
#
#     THIS FILE IS AUTOMATICALLY GENERATED!
#
# Generator:     sensirion-driver-generator 1.2.0
# Product:       stcc4
# Model-Version: 3.4.0
#
"""
The signal classes specify transformations of the raw sensor signals into a meaningful units.
The generated signal types are used by the driver class and not intended for direct use.
"""

from sensirion_driver_support_types.signals import AbstractSignal


class SignalTemperature(AbstractSignal):
    """"""

    def __init__(self, raw_temperature):
        self._temperature = -45.0 + ((175.0 * raw_temperature) / 65535.0)

    @property
    def value(self):
        return self._temperature

    def __str__(self):
        return '{0:.2f}'.format(self.value)


class SignalRelativeHumidity(AbstractSignal):
    """"""

    def __init__(self, raw_relative_humidity):
        self._relative_humidity = -6.0 + ((125.0 * raw_relative_humidity) / 65535.0)

    @property
    def value(self):
        return self._relative_humidity

    def __str__(self):
        return '{0:.2f}'.format(self.value)

