Metadata-Version: 2.4
Name: minnesota-immunization-core
Version: 0.1.0
Summary: Core library for Minnesota immunization records processing
Author-email: Dillon O'Leary <doleary@wisc.edu>
License: GPL-3.0-or-later
Keywords: aisr,etl,immunization,minnesota,vaccination
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Healthcare Industry
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.11
Requires-Dist: beautifulsoup4
Requires-Dist: httpx>=0.28.1
Requires-Dist: pandas
Requires-Dist: requests
Provides-Extra: dev
Requires-Dist: faker; extra == 'dev'
Requires-Dist: fastapi; extra == 'dev'
Requires-Dist: pytest; extra == 'dev'
Requires-Dist: pytest-cov; extra == 'dev'
Requires-Dist: python-multipart; extra == 'dev'
Requires-Dist: ruff; extra == 'dev'
Requires-Dist: types-requests; extra == 'dev'
Requires-Dist: uvicorn; extra == 'dev'
Description-Content-Type: text/markdown

# Minnesota Immunization Core

A Python library for processing Minnesota immunization records through ETL (Extract, Transform, Load) operations and AISR (Minnesota Immunization Information Connection) integration.

## Features

- **ETL Pipeline**: Extract, transform, and load immunization data
- **AISR Integration**: Authenticate and interact with Minnesota's immunization system
- **Data Transformation**: Convert AISR format to Infinite Campus format
- **Bulk Operations**: Handle bulk queries and downloads of vaccination records

## Installation

```bash
pip install minnesota-immunization-core
```

## Quick Start

```python
from minnesota_immunization_core import pipeline_factory
from minnesota_immunization_core.etl_workflow import run_etl_workflow

# Create ETL pipeline
config = {
    "input_file": "path/to/aisr_data.csv",
    "output_file": "path/to/transformed_data.csv"
}

extract, transform, load = pipeline_factory.create_etl_pipeline(config)
run_etl_workflow(extract, transform, load)
```

## Architecture

The library implements a functional dependency injection pattern:

- `pipeline_factory.py`: Creates pipeline functions by injecting components
- `etl_workflow.py`: Defines high-level workflow orchestration  
- `extract.py`, `transform.py`, `load.py`: Implement specific data operations
- `aisr/`: Handles Minnesota Immunization Information Connection integration

## Development

```bash
# Install with development dependencies
pip install -e ".[dev]"

# Run tests
pytest

# Run linting
ruff .
```

## License

GNU General Public License v3.0 or later