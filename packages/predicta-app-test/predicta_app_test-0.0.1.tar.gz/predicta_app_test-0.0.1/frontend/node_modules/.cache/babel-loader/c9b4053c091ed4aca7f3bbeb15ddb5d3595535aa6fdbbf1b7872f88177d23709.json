{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[message,setMessage]=useState(\"\");useEffect(()=>{fetch(\"/\")// replace with Databricks public endpoint if hosted\n.then(res=>res.json()).then(data=>setMessage(data.message)).catch(err=>console.error(err));},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"React App\"}),/*#__PURE__*/_jsx(\"p\",{children:message})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","message","setMessage","fetch","then","res","json","data","catch","err","console","error","className","children"],"sources":["C:/Users/Krishanu.Nayak/OneDrive - Rio Tinto/Desktop/Predicta/databricks-app-test/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/\")  // replace with Databricks public endpoint if hosted\r\n      .then((res) => res.json())\r\n      .then((data) => setMessage(data.message))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n<div className=\"App\">\r\n<h1>React App</h1>\r\n<p>{message}</p>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACdQ,KAAK,CAAC,GAAG,CAAG;AAAA,CACTC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKL,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAAC,CACxCO,KAAK,CAAEC,GAAG,EAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC,CACvC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACFV,KAAA,QAAKa,SAAS,CAAC,KAAK,CAAAC,QAAA,eACpBhB,IAAA,OAAAgB,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBhB,IAAA,MAAAgB,QAAA,CAAIZ,OAAO,CAAI,CAAC,EACX,CAAC,CAEN,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}