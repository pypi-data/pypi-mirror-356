[project]
name = "webdatasetng"
version = "1.0.1"
description = "High performance storage and I/O for deep learning and data processing."
authors = [
    {name = "Thomas Breuel", email = "tmbdev+removeme@gmail.com"},
]
license = {text="BSD-3-Clause"}
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
  "braceexpand",
  "numpy",
  "pyyaml",
]

[project.urls]
homepage = "http://github.com/webdataset/webdataset"
repository = "http://github.com/webdataset/webdataset"

[build-system]
requires = ["setuptools>=45"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["webdataset"]
package-dir = {"" = "src"}

# Development-only dependencies (as a “dev” extra).
[project.optional-dependencies]
dev = [
  "autoflake",
  "bandit",
  "black[jupyter]",
  "build",
  "bump2version",
  "diffusers",
  "flake8",
  "imageio",
  "isort",
  "jupyter",
  "jupyterlab",
  "lmdb",
  "matplotlib",
  "mkdocs",
  "mkdocs-autorefs",
  "mkdocs-jupyter",
  "mkdocs-material",
  "mkdocs-material-extensions",
  "mkdocs-minify-plugin",
  "mkdocstrings",
  "mkdocstrings-python",
  "msgpack",
  "mypy",
  "nbconvert",
  "notebook",
  "papermill",
  "pdm",
  "Pillow",
  "pre-commit",
  "pydocstyle",
  "pytest",
  "pytest-cov",
  "pytorch_lightning",
  "ray[default,tune]",
  "ruff",
  "scipy",
  "setuptools",
  "torch",
  "torchvision",
  "transformers",
  "twine",
  "typer",
  "wheel",
  "icecream",
  "types-PyYAML"
]

[tool.black]
line-length = 120
target-version = ["py310"]
include = '^src/.*'
exclude = '\.pyi$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*.pyi"]

[tool.pydocstyle]
convention = "google"
match = '(?!test_).*\.py'
# match webdataset and wids only
match_dir = '(webdataset|wids)'
add_ignore = ["D100", "D104", "D203", "D213", "D406", "D407", "D413", "D205", "D107"]
# add_select = ["D402", "D417"]

# Explanation of ignored rules:
# D100: Missing docstring in public module
# D104: Missing docstring in public package
# D203: 1 blank line required before class docstring
# D213: Multi-line docstring summary should start at the second line
# D406: Section name should end with a newline
# D407: Missing dashed underline after section
# D413: Missing blank line after last section
# D402: First line should not be the function's "signature"
# D417: Missing argument descriptions in the docstring

[tool.ruff]
line-length = 120
lint.select = ["E", "F", "W", "C90"]
lint.ignore = ["E712", "F541", "C901", "E741", "E501"]
exclude = ["examples", "tasks.py", "readme.ipynb", "helpers"]

[tool.ruff.lint.per-file-ignores]
"*.pyi" = ["E501"]

[tool.pre-commit]
repos = [
  { repo = "local", hooks = [
      { id = "black", name = "black", entry = "black .", language = "system", pass_filenames = false },
      { id = "isort", name = "isort", entry = "isort .", language = "system", pass_filenames = false },
      { id = "pytest-quick", name = "pytest-quick", entry = "pytest -v -m quick", language = "system", pass_filenames = false }
  ] }
]

[tool.coverage.run]
source = ["webdataset"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
]
ignore_errors = true



