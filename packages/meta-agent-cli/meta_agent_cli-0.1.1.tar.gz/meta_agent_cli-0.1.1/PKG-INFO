Metadata-Version: 2.4
Name: meta-agent-cli
Version: 0.1.1
Summary: Generate fully-functional AI agents from natural language specifications
Project-URL: Homepage, https://github.com/yourusername/meta-agent
Project-URL: Documentation, https://meta-agent.readthedocs.io/
Project-URL: Repository, https://github.com/yourusername/meta-agent.git
Project-URL: Issues, https://github.com/yourusername/meta-agent/issues
Project-URL: Changelog, https://github.com/yourusername/meta-agent/blob/main/CHANGELOG.md
Author-email: Your Name <your.email@example.com>
Maintainer-email: Your Name <your.email@example.com>
License: MIT License
        
        Copyright (c) 2025 Meta Agent Contributors
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: agents,ai,automation,cli,llm,openai
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Code Generators
Requires-Python: >=3.11
Requires-Dist: aiohttp~=3.12
Requires-Dist: backoff<3,>=2.2
Requires-Dist: click<9,>=8.2
Requires-Dist: docker<8,>=7
Requires-Dist: jinja2<4,>=3
Requires-Dist: numpy<3,>=2
Requires-Dist: openai<2,>=1.80.0
Requires-Dist: pydantic<3,>=2.7
Requires-Dist: python-dotenv<2,>=1
Requires-Dist: pyyaml<7,>=6
Provides-Extra: test
Requires-Dist: pyright>=1.1.300; extra == 'test'
Requires-Dist: pytest-asyncio~=0.23; extra == 'test'
Requires-Dist: pytest-cov~=5.0; extra == 'test'
Requires-Dist: pytest-mock~=3.12; extra == 'test'
Requires-Dist: pytest~=8.2; extra == 'test'
Description-Content-Type: text/markdown

# Meta Agent 🤖

[![Python](https://img.shields.io/badge/Python-3.11%2B-blue.svg)](https://python.org)
[![License](https://img.shields.io/badge/License-MIT-green.svg)](LICENSE)
[![PyPI](https://img.shields.io/pypi/v/meta-agent.svg)](https://pypi.org/project/meta-agent/)

**Generate fully-functional AI agents from natural language specifications in minutes.**

Meta Agent is a Python CLI tool that automatically produces production-ready OpenAI-powered agents complete with code, tests, and guardrails from simple English descriptions.

## 🚀 Quick Start

### Installation

```bash
pip install meta-agent
```

### Create Your First Agent

```bash
# Initialize a new project
meta-agent init my-calculator --template hello-world

# Generate an agent from specification
meta-agent generate --spec-file agent_spec.yaml
```

### Example Specification

```yaml
task_description: |
  Create a calculator agent that can perform basic arithmetic operations.
  The agent should handle addition, subtraction, multiplication, and division.
inputs:
  operation: str  # "+", "-", "*", "/"
  num1: float
  num2: float
outputs:
  result: float
constraints:
  - Must validate division by zero
  - Should handle floating point precision
```

## ✨ Key Features

- **🎯 Natural Language Input**: Describe what you want in plain English
- **⚡ Instant Generation**: Get working agents in minutes, not hours
- **🛡️ Built-in Safety**: Automatic guardrails and validation
- **🧪 Test Generation**: Unit tests created automatically
- **📊 Telemetry**: Built-in monitoring and metrics
- **🔧 Extensible**: Template system for custom patterns

## 🎯 Perfect For

- **AI Engineers** building production agents quickly
- **Solutions Architects** integrating AI into workflows  
- **Rapid Prototypers** who need demo-ready agents fast
- **Hobbyists** exploring AI without deep coding expertise

## 📖 Documentation

### Core Commands

```bash
# Initialize new project
meta-agent init <project-name> [--template <template-name>]

# Generate agent from spec
meta-agent generate --spec-file <path> [--metric cost,tokens,latency]

# Manage templates
meta-agent templates list
meta-agent templates docs

# View telemetry
meta-agent dashboard
meta-agent export --format json
```

### Input Formats

Meta Agent supports multiple input formats:

**YAML File:**
```bash
meta-agent generate --spec-file my_agent.yaml
```

**JSON File:**
```bash
meta-agent generate --spec-file my_agent.json
```

**Direct Text:**
```bash
meta-agent generate --spec-text "Create an agent that summarizes documents"
```

### Project Structure

```
my-project/
├── .meta-agent/
│   └── config.yaml          # Project configuration
├── agent_spec.yaml          # Agent specification
└── generated/              # Generated agent code
    ├── agent.py
    ├── tests/
    └── guardrails/
```

## 🏗️ Architecture

Meta Agent uses a sophisticated orchestration system:

- **Planning Engine**: Decomposes specifications into tasks
- **Sub-Agent Manager**: Coordinates specialized agents
- **Tool Designer**: Generates custom tools and functions
- **Guardrail Designer**: Creates safety and validation logic
- **Template System**: Reusable patterns and best practices

## 🔧 Development

### Requirements

- Python 3.11+
- OpenAI API key (for LLM functionality)

### Setup

```bash
# Clone repository
git clone https://github.com/yourusername/meta-agent.git
cd meta-agent

# Create virtual environment
python -m venv .venv
source .venv/bin/activate  # On Windows: .venv\Scripts\activate

# Install development dependencies
pip install -e ".[test]"

# Run tests
pytest

# Run linting
ruff check .
pyright
```

## 📊 Examples

### Data Processing Agent

```yaml
task_description: |
  Create an agent that processes CSV files and generates summary reports.
inputs:
  csv_file: str
  columns_to_analyze: list[str]
outputs:
  summary_report: dict
  charts: list[str]
```

### Web Scraping Agent

```yaml
task_description: |
  Build an agent that scrapes product information from e-commerce websites.
inputs:
  website_url: str
  product_selectors: dict
outputs:
  product_data: list[dict]
constraints:
  - Must respect robots.txt
  - Rate limit to 1 request per second
```

## 🔒 Environment Variables

```bash
# Required for LLM functionality
export OPENAI_API_KEY="your-api-key-here"

# Optional: Custom OpenAI base URL
export OPENAI_BASE_URL="https://your-proxy.com/v1"

# Optional: Enable debug logging
export META_AGENT_DEBUG=true
```

## 🤝 Contributing

We welcome contributions! Please see [CONTRIBUTING.md](CONTRIBUTING.md) for guidelines.

### Quick Contribution Guide

1. Fork the repository
2. Create a feature branch (`git checkout -b feature/amazing-feature`)
3. Make your changes
4. Add tests for new functionality
5. Run the test suite (`pytest`)
6. Commit your changes (`git commit -m 'Add amazing feature'`)
7. Push to the branch (`git push origin feature/amazing-feature`)
8. Open a Pull Request

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🙏 Acknowledgments

- Built on the [OpenAI SDK](https://github.com/openai/openai-python)
- Inspired by the growing need for rapid AI agent development
- Thanks to the open-source community for foundational tools

## 📞 Support

- **Documentation**: [Full documentation](https://meta-agent.readthedocs.io/)
- **Issues**: [GitHub Issues](https://github.com/yourusername/meta-agent/issues)
- **Discussions**: [GitHub Discussions](https://github.com/yourusername/meta-agent/discussions)

---

**Made with ❤️ by developers, for developers building the AI-powered future.**