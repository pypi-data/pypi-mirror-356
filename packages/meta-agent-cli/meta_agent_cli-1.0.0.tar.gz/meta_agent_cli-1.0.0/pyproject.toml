[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "meta-agent-cli"
version = "1.0.0"
description = "Generate fully-functional AI agents from natural language specifications"
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Danny McAteer", email = "mcateerd2@gmail.com"},
]
maintainers = [
    {name = "Danny McAteer", email = "mcateerd2@gmail.com"},
]
keywords = ["ai", "agents", "openai", "automation", "llm", "cli"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
  # Runtime
  "openai>=1.80.0,<2",           # use modern OpenAI SDK without agents
  "aiohttp~=3.12",
  "numpy>=2,<3",
  "click>=8.2,<9",
  "pydantic>=2.7,<3",
  "pyyaml>=6,<7",
  "docker>=7,<8",
  "jinja2>=3,<4",
  "python-dotenv>=1,<2",
  "backoff>=2.2,<3",
  "packaging>=20,<26",           # for version parsing
]

[project.optional-dependencies]
test = [
  "pytest~=8.2",
  "pytest-asyncio~=0.23",
  "pytest-cov~=5.0",
  "pytest-mock~=3.12",
  "pyright>=1.1.300",
]

[project.urls]
Homepage = "https://github.com/DannyMac180/meta-agent"
Documentation = "https://meta-agent.readthedocs.io/"
Repository = "https://github.com/DannyMac180/meta-agent.git"
Issues = "https://github.com/DannyMac180/meta-agent/issues"
Changelog = "https://github.com/DannyMac180/meta-agent/blob/main/CHANGELOG.md"

[project.scripts]
meta-agent = "meta_agent.cli.main:cli"

[tool.hatch.build.targets.wheel]
packages = ["src/meta_agent", "src/agents"]

[tool.hatch.version]
path = "src/meta_agent/__about__.py"

[tool.coverage.run]
source_pkgs = ["meta_agent", "tests"]
branch = true

[tool.pytest.ini_options]
markers = [
    "integration: mark a test as an integration test."
]

[tool.black]
line-length = 88
exclude = '''
/(
    src/\.tool_designer
    |generated_tools
    |temp_sandbox_test_code
    |\.venv
)/
'''