{"id": "4d80c2dc-a76b-447f-bf79-e677161b6d6c", "display_name": "sakemin/musicgen-stereo-chord", "description": null, "short_desc": null, "endpoints": [{"id": "predict_predictions_post", "display_name": "predict_predictions_post", "description": "Run a single prediction on the model", "short_desc": "Predict", "path": "/predictions", "parameters": [{"name": "prefer", "type": "string", "required": false, "default": null, "location": "header", "param_schema": {"type": "string", "title": "Prefer"}, "description": null}, {"name": "bpm", "type": "number", "required": false, "default": null, "location": "body", "param_schema": {"type": "number", "title": "Bpm", "x-order": 3, "description": "BPM condition for the generated output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, "description": "BPM condition for the generated output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, {"name": "seed", "type": "integer", "required": false, "default": null, "location": "body", "param_schema": {"type": "integer", "title": "Seed", "x-order": 18, "description": "Seed for random number generator. If `None` or `-1`, a random seed will be used."}, "description": "Seed for random number generator. If `None` or `-1`, a random seed will be used."}, {"name": "top_k", "type": "integer", "required": false, "default": 250, "location": "body", "param_schema": {"type": "integer", "title": "Top K", "default": 250, "x-order": 13, "description": "Reduces sampling to the k most likely tokens."}, "description": "Reduces sampling to the k most likely tokens."}, {"name": "top_p", "type": "number", "required": false, "default": 0, "location": "body", "param_schema": {"type": "number", "title": "Top P", "default": 0, "x-order": 14, "description": "Reduces sampling to tokens with cumulative probability of p. When set to  `0` (default), top_k sampling is used."}, "description": "Reduces sampling to tokens with cumulative probability of p. When set to  `0` (default), top_k sampling is used."}, {"name": "prompt", "type": "string", "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "Prompt", "x-order": 1, "description": "A description of the music you want to generate."}, "description": "A description of the music you want to generate."}, {"name": "duration", "type": "integer", "required": false, "default": 8, "location": "body", "param_schema": {"type": "integer", "title": "Duration", "default": 8, "x-order": 8, "description": "Duration of the generated audio in seconds."}, "description": "Duration of the generated audio in seconds."}, {"name": "time_sig", "type": "string", "required": false, "default": "4/4", "location": "body", "param_schema": {"type": "string", "title": "Time Sig", "default": "4/4", "x-order": 4, "description": "Time signature value for the generate output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, "description": "Time signature value for the generate output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, {"name": "audio_end", "type": "integer", "required": false, "default": null, "location": "body", "param_schema": {"type": "integer", "title": "Audio End", "minimum": 0, "x-order": 7, "description": "End time of the audio file to use for chord conditioning. If None, will default to the end of the audio clip."}, "description": "End time of the audio file to use for chord conditioning. If None, will default to the end of the audio clip."}, {"name": "audio_start", "type": "integer", "required": false, "default": 0, "location": "body", "param_schema": {"type": "integer", "title": "Audio Start", "default": 0, "minimum": 0, "x-order": 6, "description": "Start time of the audio file to use for chord conditioning."}, "description": "Start time of the audio file to use for chord conditioning."}, {"name": "temperature", "type": "number", "required": false, "default": 1, "location": "body", "param_schema": {"type": "number", "title": "Temperature", "default": 1, "x-order": 15, "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity."}, "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity."}, {"name": "text_chords", "type": "string", "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "Text Chords", "x-order": 2, "description": "A text based chord progression condition. Single uppercase alphabet character(eg. `C`) is considered as a major chord. Chord attributes like(`maj`, `min`, `dim`, `aug`, `min6`, `maj6`, `min7`, `minmaj7`, `maj7`, `7`, `dim7`, `hdim7`, `sus2` and `sus4`) can be added to the root alphabet character after `:`.(eg. `A:min7`) Each chord token splitted by `SPACE` is allocated to a single bar. If more than one chord must be allocated to a single bar, cluster the chords adding with `,` without any `SPACE`.(eg. `C,C:7 G, E:min A:min`) You must choose either only one of `audio_chords` below or `text_chords`."}, "description": "A text based chord progression condition. Single uppercase alphabet character(eg. `C`) is considered as a major chord. Chord attributes like(`maj`, `min`, `dim`, `aug`, `min6`, `maj6`, `min7`, `minmaj7`, `maj7`, `7`, `dim7`, `hdim7`, `sus2` and `sus4`) can be added to the root alphabet character after `:`.(eg. `A:min7`) Each chord token splitted by `SPACE` is allocated to a single bar. If more than one chord must be allocated to a single bar, cluster the chords adding with `,` without any `SPACE`.(eg. `C,C:7 G, E:min A:min`) You must choose either only one of `audio_chords` below or `text_chords`."}, {"name": "audio_chords", "type": ["file", "string"], "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "Audio Chords", "format": "uri", "x-order": 5, "description": "An audio file that will condition the chord progression. You must choose only one among `audio_chords` or `text_chords` above."}, "description": "An audio file that will condition the chord progression. You must choose only one among `audio_chords` or `text_chords` above."}, {"name": "continuation", "type": "boolean", "required": false, "default": false, "location": "body", "param_schema": {"type": "boolean", "title": "Continuation", "default": false, "x-order": 9, "description": "If `True`, generated music will continue from `audio_chords`. If chord conditioning, this is only possible when the chord condition is given with `text_chords`. If `False`, generated music will mimic `audio_chords`'s chord."}, "description": "If `True`, generated music will continue from `audio_chords`. If chord conditioning, this is only possible when the chord condition is given with `text_chords`. If `False`, generated music will mimic `audio_chords`'s chord."}, {"name": "model_version", "type": "string", "required": false, "default": "stereo-chord-large", "location": "body", "param_schema": {"allOf": [{"$ref": "#/components/schemas/model_version"}], "default": "stereo-chord-large", "x-order": 0, "description": "Model type. Select `fine-tuned` if you trained the model into your own repository."}, "description": "Model type. Select `fine-tuned` if you trained the model into your own repository."}, {"name": "output_format", "type": "string", "required": false, "default": "wav", "location": "body", "param_schema": {"allOf": [{"$ref": "#/components/schemas/output_format"}], "default": "wav", "x-order": 17, "description": "Output format for generated audio."}, "description": "Output format for generated audio."}, {"name": "chroma_coefficient", "type": "number", "required": false, "default": 1, "location": "body", "param_schema": {"type": "number", "title": "Chroma Coefficient", "default": 1, "maximum": 2.5, "minimum": 0.5, "x-order": 12, "description": "Coefficient value multiplied to multi-hot chord chroma."}, "description": "Coefficient value multiplied to multi-hot chord chroma."}, {"name": "multi_band_diffusion", "type": "boolean", "required": false, "default": false, "location": "body", "param_schema": {"type": "boolean", "title": "Multi Band Diffusion", "default": false, "x-order": 10, "description": "If `True`, the EnCodec tokens will be decoded with MultiBand Diffusion. Not compatible with stereo models."}, "description": "If `True`, the EnCodec tokens will be decoded with MultiBand Diffusion. Not compatible with stereo models."}, {"name": "normalization_strategy", "type": "string", "required": false, "default": "loudness", "location": "body", "param_schema": {"allOf": [{"$ref": "#/components/schemas/normalization_strategy"}], "default": "loudness", "x-order": 11, "description": "Strategy for normalizing audio."}, "description": "Strategy for normalizing audio."}, {"name": "classifier_free_guidance", "type": "integer", "required": false, "default": 3, "location": "body", "param_schema": {"type": "integer", "title": "Classifier Free Guidance", "default": 3, "x-order": 16, "description": "Increases the influence of inputs on the output. Higher values produce lower-varience outputs that adhere more closely to inputs."}, "description": "Increases the influence of inputs on the output. Higher values produce lower-varience outputs that adhere more closely to inputs."}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PredictionResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "timeout_s": null}], "specification": "socaity", "used_models": [], "category": ["03d59d4b-1b52-4f10-a613-fe9cb7511a6d"], "family_id": "be921dbb-6aa6-4b2c-a443-cafd79860a0f", "service_address": {"url": "https://api.socaity.ai/v1/sakemin/musicgen-stereo-chord"}, "created_at": "2025-06-18T13:00:02.981445+00:00", "version": "034474bd7b4b25dcb36f46076a4aa3bc76534bef"}