{"version":3,"file":"vendors-node_modules_mobx-react-lite_es_index_js.f112304171c62ae117f2.js","mappings":"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AAC;AAC/B,CAAC;;;;;;;;;;;;;;;;;ACJkD;;;;;;;;;;;;;;;ACAnD,IAAM,kBAAkB,GAAa,EAAE;AAEhC,SAAS,aAAa,CAAC,GAAW;IACrC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACpC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,CAAC;AACL,CAAC;;;;;;;;;;;ACPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;AACb,KAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,YAAY;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA,0DAA0D,YAAY;AACtE,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,oDAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4BAA4B;AAChC;AACA;AACA;AACA;AACA;AACA,GAAG;;;;;;;;;;;AC9FU;;AAEb,IAAI,KAAqC,EAAE;AAAA,EAE1C,CAAC;AACF,EAAE,4LAA8E;AAChF","sources":["webpack://runcell/../../node_modules/mobx-react-lite/src/ObserverComponent.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/index.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/observer.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/staticRendering.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/useAsObservableSource.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/useLocalObservable.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/useLocalStore.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/useObserver.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/utils/UniversalFinalizationRegistry.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/utils/assertEnvironment.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/utils/observerBatching.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/utils/observerFinalizationRegistry.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/utils/printDebugValue.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/utils/reactBatchedUpdates.ts","webpack://runcell/../../node_modules/mobx-react-lite/src/utils/utils.ts","webpack://runcell/../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js","webpack://runcell/../../node_modules/use-sync-external-store/shim/index.js"],"sourcesContent":["import { useObserver } from \"./useObserver\"\n\n// TODO: this type could be improved in the next major release:\n// type IObserverProps = { children: () => React.ReactNode, render?: never } | { children?: never, render: () => React.ReactNode }\ninterface IObserverProps {\n    children?(): React.ReactElement | null\n    render?(): React.ReactElement | null\n}\n\nfunction ObserverComponent({ children, render }: IObserverProps) {\n    if (children && render) {\n        console.error(\n            \"MobX Observer: Do not use children and render in the same time in `Observer`\"\n        )\n    }\n    const component = children || render\n    if (typeof component !== \"function\") {\n        return null\n    }\n    return useObserver(component)\n}\nif (\"production\" !== process.env.NODE_ENV) {\n    ObserverComponent.propTypes = {\n        children: ObserverPropsCheck,\n        render: ObserverPropsCheck\n    }\n}\nObserverComponent.displayName = \"Observer\"\n\nexport { ObserverComponent as Observer }\n\nfunction ObserverPropsCheck(\n    props: { [k: string]: any },\n    key: string,\n    componentName: string,\n    location: any,\n    propFullName: string\n) {\n    const extraKey = key === \"children\" ? \"render\" : \"children\"\n    const hasProp = typeof props[key] === \"function\"\n    const hasExtraProp = typeof props[extraKey] === \"function\"\n    if (hasProp && hasExtraProp) {\n        return new Error(\n            \"MobX Observer: Do not use children and render in the same time in`\" + componentName\n        )\n    }\n\n    if (hasProp || hasExtraProp) {\n        return null\n    }\n    return new Error(\n        \"Invalid prop `\" +\n            propFullName +\n            \"` of type `\" +\n            typeof props[key] +\n            \"` supplied to\" +\n            \" `\" +\n            componentName +\n            \"`, expected `function`.\"\n    )\n}\n","import \"./utils/assertEnvironment\"\n\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\nimport { observerBatching } from \"./utils/observerBatching\"\nimport { useDeprecated } from \"./utils/utils\"\nimport { useObserver as useObserverOriginal } from \"./useObserver\"\nimport { enableStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\n\nobserverBatching(batch)\n\nexport { isUsingStaticRendering, enableStaticRendering } from \"./staticRendering\"\nexport { observer, IObserverOptions } from \"./observer\"\nexport { Observer } from \"./ObserverComponent\"\nexport { useLocalObservable } from \"./useLocalObservable\"\nexport { useLocalStore } from \"./useLocalStore\"\nexport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport { observerFinalizationRegistry as _observerFinalizationRegistry }\nexport const clearTimers = observerFinalizationRegistry[\"finalizeAllImmediately\"] ?? (() => {})\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\"\n        )\n    }\n    return useObserverOriginal(fn, baseComponentName)\n}\n\nexport { isObserverBatched, observerBatching } from \"./utils/observerBatching\"\n\nexport function useStaticRendering(enable: boolean) {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\n            \"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\"\n        )\n    }\n    enableStaticRendering(enable)\n}\n","import { forwardRef, memo } from \"react\"\n\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useObserver } from \"./useObserver\"\n\nlet warnObserverOptionsDeprecated = true\nlet warnLegacyContextTypes = true\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\nconst isFunctionNameConfigurable =\n    Object.getOwnPropertyDescriptor(() => {}, \"name\")?.configurable ?? false\n\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof forwardRef === \"function\" && forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof memo === \"function\" && memo((props: any) => null)[\"$$typeof\"]\n\n/**\n * @deprecated Observer options will be removed in the next major version of mobx-react-lite.\n * Look at the individual properties for alternatives.\n */\nexport interface IObserverOptions {\n    /**\n     * @deprecated Pass a `React.forwardRef` component to observer instead of using the options object\n     * e.g. `observer(React.forwardRef(fn))`\n     */\n    readonly forwardRef?: boolean\n}\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefRenderFunction<TRef, P>,\n    options: IObserverOptions & {\n        /**\n         * @deprecated Pass a `React.forwardRef` component to observer instead of using the options object\n         * e.g. `observer(React.forwardRef(fn))`\n         */\n        forwardRef: true\n    }\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n    >\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object>(\n    baseComponent: React.FunctionComponent<P>,\n    options?: IObserverOptions\n): React.FunctionComponent<P>\n\nexport function observer<\n    C extends React.FunctionComponent<any> | React.ForwardRefRenderFunction<any>,\n    Options extends IObserverOptions\n>(\n    baseComponent: C,\n    options?: Options\n): Options extends { forwardRef: true }\n    ? C extends React.ForwardRefRenderFunction<infer TRef, infer P>\n        ? C &\n              React.MemoExoticComponent<\n                  React.ForwardRefExoticComponent<\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n                  >\n              >\n        : never /* forwardRef set for a non forwarding component */\n    : C & { displayName: string }\n\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer<P extends object, TRef = {}>(\n    baseComponent:\n        | React.ForwardRefRenderFunction<TRef, P>\n        | React.FunctionComponent<P>\n        | React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>,\n    // TODO remove in next major\n    options?: IObserverOptions\n) {\n    if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\n        warnObserverOptionsDeprecated = false\n        console.warn(\n            `[mobx-react-lite] \\`observer(fn, { forwardRef: true })\\` is deprecated, use \\`observer(React.forwardRef(fn))\\``\n        )\n    }\n\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            `[mobx-react-lite] You are trying to use \\`observer\\` on a function component wrapped in either another \\`observer\\` or \\`React.memo\\`. The observer already applies 'React.memo' for you.`\n        )\n    }\n\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent\n    }\n\n    let useForwardRef = options?.forwardRef ?? false\n    let render = baseComponent\n\n    const baseComponentName = baseComponent.displayName || baseComponent.name\n\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true\n        render = baseComponent[\"render\"]\n        if (typeof render !== \"function\") {\n            throw new Error(\n                `[mobx-react-lite] \\`render\\` property of ForwardRef was not a function`\n            )\n        }\n    }\n\n    let observerComponent = (props: any, ref: React.Ref<TRef>) => {\n        return useObserver(() => render(props, ref), baseComponentName)\n    }\n\n    // Inherit original name and displayName, see #3438\n    ;(observerComponent as React.FunctionComponent).displayName = baseComponent.displayName\n\n    if (isFunctionNameConfigurable) {\n        Object.defineProperty(observerComponent, \"name\", {\n            value: baseComponent.name,\n            writable: true,\n            configurable: true\n        })\n    }\n\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if ((baseComponent as any).contextTypes) {\n        ;(observerComponent as React.FunctionComponent).contextTypes = (\n            baseComponent as any\n        ).contextTypes\n\n        if (process.env.NODE_ENV !== \"production\" && warnLegacyContextTypes) {\n            warnLegacyContextTypes = false\n            console.warn(\n                `[mobx-react-lite] Support for Legacy Context in function components will be removed in the next major release.`\n            )\n        }\n    }\n\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = forwardRef(observerComponent)\n    }\n\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = memo(observerComponent)\n\n    copyStaticProperties(baseComponent, observerComponent)\n\n    if (\"production\" !== process.env.NODE_ENV) {\n        Object.defineProperty(observerComponent, \"contextTypes\", {\n            set() {\n                throw new Error(\n                    `[mobx-react-lite] \\`${\n                        this.displayName || this.type?.displayName || this.type?.name || \"Component\"\n                    }.contextTypes\\` must be set before applying \\`observer\\`.`\n                )\n            }\n        })\n    }\n\n    return observerComponent\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList: any = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n}\n\nfunction copyStaticProperties(base: any, target: any) {\n    Object.keys(base).forEach(key => {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n","let globalIsUsingStaticRendering = false\n\nexport function enableStaticRendering(enable: boolean) {\n    globalIsUsingStaticRendering = enable\n}\n\nexport function isUsingStaticRendering(): boolean {\n    return globalIsUsingStaticRendering\n}\n","import { useDeprecated } from \"./utils/utils\"\nimport { observable, runInAction } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useAsObservableSource<TSource extends object>(current: TSource): TSource {\n    if (\"production\" !== process.env.NODE_ENV)\n        useDeprecated(\n            \"[mobx-react-lite] 'useAsObservableSource' is deprecated, please store the values directly in an observable, for example by using 'useLocalObservable', and sync future updates using 'useEffect' when needed. See the README for examples.\"\n        )\n    // We're deliberately not using idiomatic destructuring for the hook here.\n    // Accessing the state value as an array element prevents TypeScript from generating unnecessary helpers in the resulting code.\n    // For further details, please refer to mobxjs/mobx#3842.\n    const res = useState(() => observable(current, {}, { deep: false }))[0]\n    runInAction(() => {\n        Object.assign(res, current)\n    })\n    return res\n}\n","import { observable, AnnotationsMap } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useLocalObservable<TStore extends Record<string, any>>(\n    initializer: () => TStore,\n    annotations?: AnnotationsMap<TStore, never>\n): TStore {\n    return useState(() => observable(initializer(), annotations, { autoBind: true }))[0]\n}\n","import { observable } from \"mobx\"\nimport { useState } from \"react\"\n\nimport { useDeprecated } from \"./utils/utils\"\nimport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport function useLocalStore<TStore extends Record<string, any>>(initializer: () => TStore): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source: TSource) => TStore,\n    current: TSource\n): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source?: TSource) => TStore,\n    current?: TSource\n): TStore {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useLocalStore' is deprecated, use 'useLocalObservable' instead.\"\n        )\n    }\n    const source = current && useAsObservableSource(current)\n    return useState(() => observable(initializer(source), undefined, { autoBind: true }))[0]\n}\n","import { Reaction } from \"mobx\"\nimport React from \"react\"\nimport { printDebugValue } from \"./utils/printDebugValue\"\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\nimport { useSyncExternalStore } from \"use-sync-external-store/shim\"\n\n// Do not store `admRef` (even as part of a closure!) on this object,\n// otherwise it will prevent GC and therefore reaction disposal via FinalizationRegistry.\ntype ObserverAdministration = {\n    reaction: Reaction | null // also serves as disposed flag\n    onStoreChange: Function | null // also serves as mounted flag\n    // stateVersion that 'ticks' for every time the reaction fires\n    // tearing is still present,\n    // because there is no cross component synchronization,\n    // but we can use `useSyncExternalStore` API.\n    // TODO: optimize to use number?\n    stateVersion: any\n    name: string\n    // These don't depend on state/props, therefore we can keep them here instead of `useCallback`\n    subscribe: Parameters<typeof React.useSyncExternalStore>[0]\n    getSnapshot: Parameters<typeof React.useSyncExternalStore>[1]\n}\n\nfunction createReaction(adm: ObserverAdministration) {\n    adm.reaction = new Reaction(`observer${adm.name}`, () => {\n        adm.stateVersion = Symbol()\n        // onStoreChange won't be available until the component \"mounts\".\n        // If state changes in between initial render and mount,\n        // `useSyncExternalStore` should handle that by checking the state version and issuing update.\n        adm.onStoreChange?.()\n    })\n}\n\nexport function useObserver<T>(render: () => T, baseComponentName: string = \"observed\"): T {\n    if (isUsingStaticRendering()) {\n        return render()\n    }\n\n    const admRef = React.useRef<ObserverAdministration | null>(null)\n\n    if (!admRef.current) {\n        // First render\n        const adm: ObserverAdministration = {\n            reaction: null,\n            onStoreChange: null,\n            stateVersion: Symbol(),\n            name: baseComponentName,\n            subscribe(onStoreChange: () => void) {\n                // Do NOT access admRef here!\n                observerFinalizationRegistry.unregister(adm)\n                adm.onStoreChange = onStoreChange\n                if (!adm.reaction) {\n                    // We've lost our reaction and therefore all subscriptions, occurs when:\n                    // 1. Timer based finalization registry disposed reaction before component mounted.\n                    // 2. React \"re-mounts\" same component without calling render in between (typically <StrictMode>).\n                    // We have to recreate reaction and schedule re-render to recreate subscriptions,\n                    // even if state did not change.\n                    createReaction(adm)\n                    // `onStoreChange` won't force update if subsequent `getSnapshot` returns same value.\n                    // So we make sure that is not the case\n                    adm.stateVersion = Symbol()\n                }\n\n                return () => {\n                    // Do NOT access admRef here!\n                    adm.onStoreChange = null\n                    adm.reaction?.dispose()\n                    adm.reaction = null\n                }\n            },\n            getSnapshot() {\n                // Do NOT access admRef here!\n                return adm.stateVersion\n            }\n        }\n\n        admRef.current = adm\n    }\n\n    const adm = admRef.current!\n\n    if (!adm.reaction) {\n        // First render or reaction was disposed by registry before subscribe\n        createReaction(adm)\n        // StrictMode/ConcurrentMode/Suspense may mean that our component is\n        // rendered and abandoned multiple times, so we need to track leaked\n        // Reactions.\n        observerFinalizationRegistry.register(admRef, adm, adm)\n    }\n\n    React.useDebugValue(adm.reaction!, printDebugValue)\n\n    useSyncExternalStore(\n        // Both of these must be stable, otherwise it would keep resubscribing every render.\n        adm.subscribe,\n        adm.getSnapshot,\n        adm.getSnapshot\n    )\n\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    let renderResult!: T\n    let exception\n    adm.reaction!.track(() => {\n        try {\n            renderResult = render()\n        } catch (e) {\n            exception = e\n        }\n    })\n\n    if (exception) {\n        throw exception // re-throw any exceptions caught during rendering\n    }\n\n    return renderResult\n}\n","export declare class FinalizationRegistryType<T> {\n    constructor(finalize: (value: T) => void)\n    register(target: object, value: T, token?: object): void\n    unregister(token: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nexport const REGISTRY_FINALIZE_AFTER = 10_000\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\n\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\n\n    constructor(private readonly finalize: (value: T) => void) {}\n\n    // Token is actually required with this impl\n    register(target: object, value: T, token?: object) {\n        this.registrations.set(token, {\n            value,\n            registeredAt: Date.now()\n        })\n        this.scheduleSweep()\n    }\n\n    unregister(token: unknown) {\n        this.registrations.delete(token)\n    }\n\n    // Bound so it can be used directly as setTimeout callback.\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(this.sweepTimeout)\n        this.sweepTimeout = undefined\n\n        const now = Date.now()\n        this.registrations.forEach((registration, token) => {\n            if (now - registration.registeredAt >= maxAge) {\n                this.finalize(registration.value)\n                this.registrations.delete(token)\n            }\n        })\n\n        if (this.registrations.size > 0) {\n            this.scheduleSweep()\n        }\n    }\n\n    // Bound so it can be exported directly as clearTimers test utility.\n    finalizeAllImmediately = () => {\n        this.sweep(0)\n    }\n\n    private scheduleSweep() {\n        if (this.sweepTimeout === undefined) {\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\n        }\n    }\n}\n\nexport const UniversalFinalizationRegistry =\n    typeof FinalizationRegistry !== \"undefined\"\n        ? FinalizationRegistry\n        : TimerBasedFinalizationRegistry\n","import { makeObservable } from \"mobx\"\nimport { useState } from \"react\"\n\nif (!useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\n}\nif (!makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\")\n}\n","import { configure } from \"mobx\"\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n}\n\nexport const isObserverBatched = () => {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\"[MobX] Deprecated\")\n    }\n\n    return true\n}\n","import { Reaction } from \"mobx\"\nimport { UniversalFinalizationRegistry } from \"./UniversalFinalizationRegistry\"\n\nexport const observerFinalizationRegistry = new UniversalFinalizationRegistry(\n    (adm: { reaction: Reaction | null }) => {\n        adm.reaction?.dispose()\n        adm.reaction = null\n    }\n)\n","import { getDependencyTree, Reaction } from \"mobx\"\n\nexport function printDebugValue(v: Reaction) {\n    return getDependencyTree(v)\n}\n","export { unstable_batchedUpdates } from \"react-dom\"\n","const deprecatedMessages: string[] = []\n\nexport function useDeprecated(msg: string) {\n    if (!deprecatedMessages.includes(msg)) {\n        deprecatedMessages.push(msg)\n        console.warn(msg)\n    }\n}\n","/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n"],"names":[],"sourceRoot":""}