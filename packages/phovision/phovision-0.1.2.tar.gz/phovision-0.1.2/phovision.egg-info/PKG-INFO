Metadata-Version: 2.4
Name: phovision
Version: 0.1.2
Summary: A pure Python computer vision library
Home-page: https://github.com/yourusername/phovision
Author: David Oluyale
Author-email: your.email@example.com
Keywords: computer-vision image-processing filters gaussian-blur median-filter
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering :: Image Processing
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.21.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Phovision

A pure Python computer vision library implementing various image processing algorithms from scratch. This library provides implementations of common image processing operations without depending on other image processing libraries.

## Features

Currently implemented algorithms:
- Gaussian Blur
- Median Filter (Noise Removal)
- Mean Filter (Averaging)
- Bilateral Filter (Edge-preserving smoothing)

## Installation

```bash
pip install phovision
```

## Usage

```python
import numpy as np
from phovision.filters import gaussian_blur, median_filter, mean_filter, bilateral_filter

# Load your image as a numpy array
# image should be in grayscale or RGB format with values in range [0, 255]

# Apply Gaussian Blur
blurred = gaussian_blur(image, kernel_size=5, sigma=1.0)

# Apply Median Filter
denoised = median_filter(image, kernel_size=3)

# Apply Mean Filter
averaged = mean_filter(image, kernel_size=3)

# Apply Bilateral Filter
smoothed = bilateral_filter(image, kernel_size=5, sigma_spatial=1.0, sigma_intensity=50.0)
```

## Requirements
- Python >= 3.7
- NumPy >= 1.21.0

## License
MIT License 
