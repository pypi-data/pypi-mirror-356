"""Autogenerated API schema"""
from argus_api import session


get_basic_function = {'tags': ['user/v2'], 'summary': 'Get a basic function (PUBLIC)', 'description': '', 'operationId': 'getBasicFunction', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'The name or id of the function', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get a basic function', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Basic function response object providing detailed information about functions', 'properties': {'flags': {'type': 'array', 'description': 'Set of flags that are true for this function', 'items': {'type': 'string', 'description': 'Set of flags that are true for this function', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the function'}, 'localizedDescription': {'type': 'string', 'description': "Function description based on the current user's language settings"}, 'localizedName': {'type': 'string', 'description': "Function name based on the current user's language settings"}, 'minimumSecurityLevel': {'type': 'string', 'description': 'The minimum security level of the function', 'enum': ['administrative', 'standard', 'external']}, 'name': {'type': 'string', 'description': 'Name of the function'}, 'roleType': {'type': 'string', 'description': 'The role type of the function', 'enum': ['service', 'case', 'tool', 'other']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewBasicFunctions'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_basic_functions = {'tags': ['user/v2'], 'summary': 'Returns the functions matching the query (PUBLIC)', 'description': '', 'operationId': 'listBasicFunctions', 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'function', 'in': 'query', 'description': 'Search by function name or ID', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'excludeFlag', 'in': 'query', 'description': 'Exclude functions with flag', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, {'name': 'includeFlag', 'in': 'query', 'description': 'Include functions with flag', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keywords', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywordMatch', 'in': 'query', 'description': 'Set match strategy for keyword search', 'schema': {'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, 'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, {'name': 'keywordField', 'in': 'query', 'description': 'Set field strategy for keyword search', 'schema': {'type': 'list', 'default': 'all', 'items': {'type': 'str', 'enum': ['name', 'all']}, 'uniqueItems': True}, 'type': 'list', 'default': 'all', 'items': {'type': 'str', 'enum': ['name', 'all']}, 'uniqueItems': True}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort search result', 'schema': {'type': 'list', 'items': {'type': 'string'}}, 'type': 'list', 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Returns the functions matching the query', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Basic function response object providing detailed information about functions', 'properties': {'flags': {'type': 'array', 'description': 'Set of flags that are true for this function', 'items': {'type': 'string', 'description': 'Set of flags that are true for this function', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the function'}, 'localizedDescription': {'type': 'string', 'description': "Function description based on the current user's language settings"}, 'localizedName': {'type': 'string', 'description': "Function name based on the current user's language settings"}, 'minimumSecurityLevel': {'type': 'string', 'description': 'The minimum security level of the function', 'enum': ['administrative', 'standard', 'external']}, 'name': {'type': 'string', 'description': 'Name of the function'}, 'roleType': {'type': 'string', 'description': 'The role type of the function', 'enum': ['service', 'case', 'tool', 'other']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewBasicFunctions'], 'x-Argus-ApiStatus': 'PUBLIC'}
search_basic_functions = {'tags': ['user/v2'], 'summary': 'Returns the functions matching the query (PUBLIC)', 'description': '', 'operationId': 'searchBasicFunctions', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to search for basic functions', 'properties': {'excludeFlags': {'type': 'list', 'description': 'Exclude flags that have any of these flags set', 'items': {'type': 'str', 'description': 'Exclude flags that have any of these flags set', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'function': {'type': 'list', 'description': 'Set of IDs or names of the functions to search for', 'items': {'type': 'str', 'description': 'Set of IDs or names of the functions to search for'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Include functions that have all these flags set', 'items': {'type': 'str', 'description': 'Include functions that have all these flags set', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'items': {'type': 'str', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'enum': ['name', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'Match all keywords (AND)', 'description': 'Search based on all keywords (AND), or based on any keyword (OR)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Keywords to search for', 'items': {'type': 'str', 'description': 'Keywords to search for'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'The max amount of items to display', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'The amount of items to skip', 'minimum': 0}, 'requirePermission': {'type': 'bool', 'description': 'If true, filter functions that the current user has (some) permission for.'}, 'sortBy': {'type': 'list', 'default': 'name', 'description': 'Field to sort result by', 'items': {'type': 'str', 'default': 'name', 'description': 'Field to sort result by', 'enum': ['id', 'name', '-id', '-name']}}, 'subCriteria': {'type': 'list', 'description': 'Sub criteria to add to the search', 'items': {'type': 'dict', 'description': 'The sub request for searching for basic functions', 'properties': {'exclude': {'type': 'bool', 'default': False, 'description': 'Exclude objects matching subcriteria? If true, the criteria is NOT-ed.'}, 'excludeFlags': {'type': 'list', 'description': 'Exclude flags that have any of these flags set', 'items': {'type': 'str', 'description': 'Exclude flags that have any of these flags set', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'function': {'type': 'list', 'description': 'Set of IDs or names of the functions to search for', 'items': {'type': 'str', 'description': 'Set of IDs or names of the functions to search for'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Include functions that have all these flags set', 'items': {'type': 'str', 'description': 'Include functions that have all these flags set', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'items': {'type': 'str', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'enum': ['name', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'Match all keywords (AND)', 'description': 'Search based on all keywords (AND), or based on any keyword (OR)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Keywords to search for', 'items': {'type': 'str', 'description': 'Keywords to search for'}, 'uniqueItems': True}, 'requirePermission': {'type': 'bool', 'description': 'If true, filter functions that the current user has (some) permission for.'}, 'required': {'type': 'bool', 'default': False, 'description': 'Is this subcriteria required? If false it is OR-ed, if true it is AND-ed'}}, 'required': ['keywordFieldStrategy', 'keywordMatchStrategy']}, 'uniqueItems': True}}, 'required': ['keywordFieldStrategy', 'keywordMatchStrategy']}}}, 'required': True}, 'responses': {'default': {'description': 'Returns the functions matching the query', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Basic function response object providing detailed information about functions', 'properties': {'flags': {'type': 'array', 'description': 'Set of flags that are true for this function', 'items': {'type': 'string', 'description': 'Set of flags that are true for this function', 'enum': ['deleted', 'role', 'sysadm', 'readOnly']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the function'}, 'localizedDescription': {'type': 'string', 'description': "Function description based on the current user's language settings"}, 'localizedName': {'type': 'string', 'description': "Function name based on the current user's language settings"}, 'minimumSecurityLevel': {'type': 'string', 'description': 'The minimum security level of the function', 'enum': ['administrative', 'standard', 'external']}, 'name': {'type': 'string', 'description': 'Name of the function'}, 'roleType': {'type': 'string', 'description': 'The role type of the function', 'enum': ['service', 'case', 'tool', 'other']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewBasicFunctions'], 'x-Argus-ApiStatus': 'PUBLIC'}