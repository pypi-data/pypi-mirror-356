"""Autogenerated API schema"""
from argus_api import session


get_basic_subject = {'tags': ['user/v2'], 'summary': 'Get a basic subject (PUBLIC)', 'description': '', 'operationId': 'getBasicSubject', 'parameters': [{'name': 'shortNameOrID', 'in': 'path', 'description': 'Short name or ID of subject', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Name or ID of the domain of the subject', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get a basic subject', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'oneOf': [{'type': 'object', 'description': 'This is a basic information model for users, which is available to all users. \nTypically returned for user-facing REST endpoints.', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'email': {'type': 'string', 'description': "The user's email. This field is unset if the current user does not have permission viewBasicUserPrivateInfo."}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['deleted', 'daemonAccount', 'notificationUser']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': "The subject's id"}, 'language': {'type': 'string', 'description': "The user's language", 'enum': ['norwegian', 'english']}, 'name': {'type': 'string', 'description': "The subject's name"}, 'phone': {'type': 'object', 'description': "The user's phone. This field is unset if the current user does not have permission viewBasicUserPrivateInfo", 'properties': {'countryCode': {'type': 'string'}, 'nationalNumber': {'type': 'string'}}}, 'phoneNumber': {'type': 'string', 'description': 'DEPRECATED: Use phone instead.'}, 'shortName': {'type': 'string', 'description': "The subject's short name"}}}, {'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'items': {'oneOf': [{'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup', 'notificationUser']}, {'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup']}, {'enum': ['deleted', 'daemonAccount', 'notificationUser']}]}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': "The subject's id"}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'object', 'items': {'type': 'object', 'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup']}, 'uniqueItems': True}}}], 'description': 'This is a basic information model for group, which is available to all users.\nTypically returned for user-facing REST endpoints.'}]}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewBasicSubject'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_subject_group_memberships = {'tags': ['user/v2'], 'summary': 'Returns the basic groups of the subject (PUBLIC)', 'description': '', 'operationId': 'getSubjectGroupMemberships', 'parameters': [{'name': 'subject', 'in': 'path', 'description': 'ID of the subject', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}, {'name': 'includeInherited', 'in': 'query', 'description': 'Include inherited groups', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}, {'name': 'sortBy', 'in': 'query', 'description': 'Field to sort by', 'schema': {'type': 'list', 'default': 'id', 'items': {'type': 'string'}}, 'type': 'list', 'default': 'id', 'items': {'type': 'string'}}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of group memberships', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned group memberships', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'Returns the basic groups of the subject', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'items': {'oneOf': [{'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup', 'notificationUser']}, {'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup']}, {'enum': ['deleted', 'daemonAccount', 'notificationUser']}]}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': "The subject's id"}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'object', 'items': {'type': 'object', 'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup']}, 'uniqueItems': True}}}], 'description': 'This is a basic information model for group, which is available to all users.\nTypically returned for user-facing REST endpoints.'}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewUsers'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_basic_subjects = {'tags': ['user/v2'], 'summary': 'Returns the basic subjects matching the query (PUBLIC)', 'description': '', 'operationId': 'listBasicSubjects', 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'domain', 'in': 'query', 'description': 'Domain to search in by short name or id', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'subject', 'in': 'query', 'description': 'Subject to search for by short name or id', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'customer', 'in': 'query', 'description': 'Customer to search for by short name or id', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted subjects', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'excludeFlag', 'in': 'query', 'description': 'Exclude subjects with flag', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, {'name': 'includeFlag', 'in': 'query', 'description': 'Include subjects with flag', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, {'name': 'keyword', 'in': 'query', 'description': "DEPRECATED: Use 'keywords' instead", 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keywords', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywordMatch', 'in': 'query', 'description': 'Set match strategy for keyword search', 'schema': {'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, 'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, {'name': 'keywordField', 'in': 'query', 'description': 'Set field strategy for keyword search', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['shortName', 'name', 'email']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['shortName', 'name', 'email']}, 'uniqueItems': True}, {'name': 'sortBy', 'in': 'query', 'description': 'Field to sort by', 'schema': {'type': 'list', 'items': {'type': 'string'}}, 'type': 'list', 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Returns the basic subjects matching the query', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'oneOf': [{'type': 'object', 'description': 'This is a basic information model for users, which is available to all users. \nTypically returned for user-facing REST endpoints.', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'email': {'type': 'string', 'description': "The user's email. This field is unset if the current user does not have permission viewBasicUserPrivateInfo."}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['deleted', 'daemonAccount', 'notificationUser']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': "The subject's id"}, 'language': {'type': 'string', 'description': "The user's language", 'enum': ['norwegian', 'english']}, 'name': {'type': 'string', 'description': "The subject's name"}, 'phone': {'type': 'object', 'description': "The user's phone. This field is unset if the current user does not have permission viewBasicUserPrivateInfo", 'properties': {'countryCode': {'type': 'string'}, 'nationalNumber': {'type': 'string'}}}, 'phoneNumber': {'type': 'string', 'description': 'DEPRECATED: Use phone instead.'}, 'shortName': {'type': 'string', 'description': "The subject's short name"}}}, {'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'items': {'oneOf': [{'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup', 'notificationUser']}, {'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup']}, {'enum': ['deleted', 'daemonAccount', 'notificationUser']}]}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': "The subject's id"}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'object', 'items': {'type': 'object', 'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup']}, 'uniqueItems': True}}}], 'description': 'This is a basic information model for group, which is available to all users.\nTypically returned for user-facing REST endpoints.'}]}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewRelatedBasicSubject'], 'x-Argus-ApiStatus': 'PUBLIC'}
search_basic_subjects = {'tags': ['user/v2'], 'summary': 'Returns the basic subjects matching the query (PUBLIC)', 'description': '', 'operationId': 'searchBasicSubjects', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to search for basic subjects', 'properties': {'ancestor': {'type': 'list', 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname. This will not include deleted ancestors if includeDeleted is set', 'items': {'type': 'str', 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname. This will not include deleted ancestors if includeDeleted is set'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all sub customers as well.', 'items': {'type': 'str', 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all sub customers as well.'}, 'uniqueItems': True}, 'domain': {'type': 'list', 'description': 'Restrict the search to subjects in these domains, by domain ID or name.', 'items': {'type': 'str', 'description': 'Restrict the search to subjects in these domains, by domain ID or name.'}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude subjects with these flags from the search.', 'items': {'type': 'str', 'description': 'Exclude subjects with these flags from the search.', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'Whether or not to include deleted subjects. This will include deleted groups and users'}, 'includeFlags': {'type': 'list', 'description': 'Restrict search to subjects having all of the specified flags.', 'items': {'type': 'str', 'description': 'Restrict search to subjects having all of the specified flags.', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'items': {'type': 'str', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'enum': ['shortName', 'name', 'email']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'Match all keywords', 'description': 'Search strategy to use when searching', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Keywords to search for', 'items': {'type': 'str', 'description': 'Keywords to search for'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'The max amount of items to display', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'The amount of items to skip', 'minimum': 0}, 'permissions': {'type': 'list', 'description': 'Limit search to subjects with one of the given permissions', 'items': {'type': 'dict', 'description': 'Criteria to limit searches based on permissions', 'properties': {'customer': {'type': 'str', 'description': 'The name or id of the customer the function should belong to. Defaults to any customer'}, 'domain': {'type': 'str', 'description': 'The name or id of the domain the customer should belong to. Defaults to the current users domain'}, 'function': {'type': 'str', 'description': 'The name or id of the function the user should have'}}}, 'uniqueItems': True}, 'sortBy': {'type': 'list', 'default': 'name', 'description': 'Define sort order', 'items': {'type': 'str', 'default': 'name', 'description': 'Define sort order'}}, 'subCriteria': {'type': 'list', 'description': 'Set additional criteria with AND, OR or AND NOT', 'items': {'type': 'dict', 'properties': {'domain': {'type': 'list', 'description': 'Restrict the search to subjects in these domains, by domain ID or name.', 'items': {'type': 'str', 'description': 'Restrict the search to subjects in these domains, by domain ID or name.'}, 'uniqueItems': True}, 'subject': {'type': 'list', 'description': 'Restrict search to specific subjects, by ID or shortname', 'items': {'type': 'str', 'description': 'Restrict search to specific subjects, by ID or shortname'}, 'uniqueItems': True}, 'ancestor': {'type': 'list', 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname. This will not include deleted ancestors if includeDeleted is set', 'items': {'type': 'str', 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname. This will not include deleted ancestors if includeDeleted is set'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all sub customers as well.', 'items': {'type': 'str', 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all sub customers as well.'}, 'uniqueItems': True}, 'type': 'str', 'sortBy': {'type': 'list', 'default': 'name', 'description': 'Define sort order', 'items': {'type': 'str', 'default': 'name', 'description': 'Define sort order'}}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'Whether or not to include deleted subjects. This will include deleted groups and users'}, 'includeFlags': {'type': 'list', 'description': 'Restrict search to subjects having all of the specified flags.', 'items': {'type': 'str', 'description': 'Restrict search to subjects having all of the specified flags.', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude subjects with these flags from the search.', 'items': {'type': 'str', 'description': 'Exclude subjects with these flags from the search.', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, 'permissions': {'type': 'list', 'description': 'Limit search to subjects with one of the given permissions', 'items': {'type': 'dict', 'description': 'Criteria to limit searches based on permissions', 'properties': {'customer': {'type': 'str', 'description': 'The name or id of the customer the function should belong to. Defaults to any customer'}, 'domain': {'type': 'str', 'description': 'The name or id of the domain the customer should belong to. Defaults to the current users domain'}, 'function': {'type': 'str', 'description': 'The name or id of the function the user should have'}}}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'Keywords to search for', 'items': {'type': 'str', 'description': 'Keywords to search for'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'Match all keywords', 'description': 'Search strategy to use when searching', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'items': {'type': 'str', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'enum': ['shortName', 'name', 'email']}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'Is this subcriteria required? If false it is OR-ed, if true it is AND-ed'}, 'exclude': {'type': 'bool', 'default': False, 'description': 'Exclude objects matching subcriteria? If true, the criteria is NOT-ed.'}, 'excluded': {'type': 'dict', 'properties': {'domain': {'type': 'list', 'description': 'Restrict the search to subjects in these domains, by domain ID or name.', 'items': {'type': 'str', 'description': 'Restrict the search to subjects in these domains, by domain ID or name.'}, 'uniqueItems': True}, 'subject': {'type': 'list', 'description': 'Restrict search to specific subjects, by ID or shortname', 'items': {'type': 'str', 'description': 'Restrict search to specific subjects, by ID or shortname'}, 'uniqueItems': True}, 'ancestor': {'type': 'list', 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname. This will not include deleted ancestors if includeDeleted is set', 'items': {'type': 'str', 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname. This will not include deleted ancestors if includeDeleted is set'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all sub customers as well.', 'items': {'type': 'str', 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all sub customers as well.'}, 'uniqueItems': True}, 'type': 'str', 'sortBy': {'type': 'list', 'default': 'name', 'description': 'Define sort order', 'items': {'type': 'str', 'default': 'name', 'description': 'Define sort order'}}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'Whether or not to include deleted subjects. This will include deleted groups and users'}, 'includeFlags': {'type': 'list', 'description': 'Restrict search to subjects having all of the specified flags.', 'items': {'type': 'str', 'description': 'Restrict search to subjects having all of the specified flags.', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude subjects with these flags from the search.', 'items': {'type': 'str', 'description': 'Exclude subjects with these flags from the search.', 'enum': ['deleted', 'daemonAccount']}, 'uniqueItems': True}, 'permissions': {'type': 'list', 'description': 'Limit search to subjects with one of the given permissions', 'items': {'type': 'dict', 'description': 'Criteria to limit searches based on permissions', 'properties': {'customer': {'type': 'str', 'description': 'The name or id of the customer the function should belong to. Defaults to any customer'}, 'domain': {'type': 'str', 'description': 'The name or id of the domain the customer should belong to. Defaults to the current users domain'}, 'function': {'type': 'str', 'description': 'The name or id of the function the user should have'}}}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'Keywords to search for', 'items': {'type': 'str', 'description': 'Keywords to search for'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'Match all keywords', 'description': 'Search strategy to use when searching', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'items': {'type': 'str', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'enum': ['shortName', 'name', 'email']}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'Is this subcriteria required? If false it is OR-ed, if true it is AND-ed'}, 'exclude': {'type': 'bool', 'default': False, 'description': 'Exclude objects matching subcriteria? If true, the criteria is NOT-ed.'}, 'excluded': [], 'options': ['group', 'user']}, 'required': ['keywordFieldStrategy', 'keywordMatchStrategy']}, 'options': ['group', 'user']}, 'required': ['keywordFieldStrategy', 'keywordMatchStrategy']}, 'uniqueItems': True}, 'subject': {'type': 'list', 'description': 'Restrict search to specific subjects, by ID or shortname', 'items': {'type': 'str', 'description': 'Restrict search to specific subjects, by ID or shortname'}, 'uniqueItems': True}, 'type': {'type': 'str', 'description': 'Limit search to one type of subject', 'enum': ['group', 'user']}}, 'required': ['keywordFieldStrategy', 'keywordMatchStrategy']}}}, 'required': True}, 'responses': {'default': {'description': 'Returns the basic subjects matching the query', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'oneOf': [{'type': 'object', 'description': 'This is a basic information model for users, which is available to all users. \nTypically returned for user-facing REST endpoints.', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'email': {'type': 'string', 'description': "The user's email. This field is unset if the current user does not have permission viewBasicUserPrivateInfo."}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['deleted', 'daemonAccount', 'notificationUser']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': "The subject's id"}, 'language': {'type': 'string', 'description': "The user's language", 'enum': ['norwegian', 'english']}, 'name': {'type': 'string', 'description': "The subject's name"}, 'phone': {'type': 'object', 'description': "The user's phone. This field is unset if the current user does not have permission viewBasicUserPrivateInfo", 'properties': {'countryCode': {'type': 'string'}, 'nationalNumber': {'type': 'string'}}}, 'phoneNumber': {'type': 'string', 'description': 'DEPRECATED: Use phone instead.'}, 'shortName': {'type': 'string', 'description': "The subject's short name"}}}, {'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'items': {'oneOf': [{'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup', 'notificationUser']}, {'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup']}, {'enum': ['deleted', 'daemonAccount', 'notificationUser']}]}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': "The subject's id"}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'object', 'items': {'type': 'object', 'enum': ['deleted', 'daemonAccount', 'authorizedUserGroup']}, 'uniqueItems': True}}}], 'description': 'This is a basic information model for group, which is available to all users.\nTypically returned for user-facing REST endpoints.'}]}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewRelatedBasicSubject'], 'x-Argus-ApiStatus': 'PUBLIC'}