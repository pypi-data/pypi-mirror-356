"""Autogenerated API schema"""
from argus_api import session


search_records_simplified = {'tags': ['pdns/v3'], 'summary': 'Search against PassiveDNS and return matching records (PUBLIC)', 'description': 'Search against PassiveDNS with criteria and return matching records. If user exceeds current resource limits, this operation may return status code 402. If that happens, the metaData key millisUntilResourcesAvailable gives a hint as to how long the client needs to wait before attempting again. The results are sorted based on the lastSeenTimestamp in descending order.', 'operationId': 'searchRecordsSimplified', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}, {'name': 'query', 'in': 'path', 'description': 'Search by query', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'aggregate', 'in': 'query', 'description': 'Whether aggregate records', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}, {'name': 'includeAnonymous', 'in': 'query', 'description': 'Whether include anonymous records', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}, {'name': 'rrClass', 'in': 'query', 'description': 'Search by recordClass (rrclass)', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['in']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['in']}, 'uniqueItems': True}, {'name': 'rrType', 'in': 'query', 'description': 'Search by type (rrtype)', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['a', 'aaaa', 'cname', 'dname', 'mx', 'naptr', 'ns', 'ptr', 'rp', 'soa', 'srv', 'txt']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['a', 'aaaa', 'cname', 'dname', 'mx', 'naptr', 'ns', 'ptr', 'rp', 'soa', 'srv', 'txt']}, 'uniqueItems': True}, {'name': 'customerID', 'in': 'query', 'description': 'Search by customerID', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'tlp', 'in': 'query', 'description': 'Search by TLP', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['white', 'green', 'amber', 'red']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['white', 'green', 'amber', 'red']}, 'uniqueItems': True}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of records', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Max number of records to be returned', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'queryMatchStrategy', 'in': 'query', 'description': 'Query match strategy, partial must be set to use the wildcard', 'schema': {'type': 'str', 'enum': ['exact', 'includeSubdomains']}, 'type': 'str', 'enum': ['exact', 'includeSubdomains']}], 'responses': {'default': {'description': 'Search against PassiveDNS and return matching records', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing PDNS record information', 'properties': {'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the record was created'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the record was last updated'}, 'times': {'type': 'integer', 'format': 'int64', 'description': 'The number of times this record has been seen'}, 'tlp': {'type': 'string', 'description': 'The TLP of this record', 'enum': ['white', 'green', 'amber', 'red']}, 'query': {'type': 'string', 'description': 'The query section this record represents'}, 'answer': {'type': 'string', 'description': 'The answer section this record represents'}, 'minTtl': {'type': 'integer', 'format': 'int64', 'description': 'The minimum time-to-live of this record'}, 'maxTtl': {'type': 'integer', 'format': 'int64', 'description': 'The maximum time-to-live of this record'}, 'customer': {'type': 'object', 'description': 'The customer that submitted this record', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'flags': {'type': 'array', 'description': 'The flags for this record', 'items': {'type': 'string', 'description': 'The flags for this record', 'enum': ['partialResult']}, 'uniqueItems': True}, 'lastSeenTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the record was last seen'}, 'firstSeenTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the record was first seen'}, 'rrclass': {'type': 'string', 'description': 'The class of this record', 'enum': ['in']}, 'rrtype': {'type': 'string', 'description': 'The type of this record', 'enum': ['a', 'aaaa', 'cname', 'dname', 'mx', 'naptr', 'ns', 'ptr', 'rp', 'soa', 'srv', 'txt']}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing PDNS record information', 'properties': {'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the record was created'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the record was last updated'}, 'times': {'type': 'integer', 'format': 'int64', 'description': 'The number of times this record has been seen'}, 'tlp': {'type': 'string', 'description': 'The TLP of this record', 'enum': ['white', 'green', 'amber', 'red']}, 'query': {'type': 'string', 'description': 'The query section this record represents'}, 'answer': {'type': 'string', 'description': 'The answer section this record represents'}, 'minTtl': {'type': 'integer', 'format': 'int64', 'description': 'The minimum time-to-live of this record'}, 'maxTtl': {'type': 'integer', 'format': 'int64', 'description': 'The maximum time-to-live of this record'}, 'customer': {'type': 'object', 'description': 'The customer that submitted this record', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'flags': {'type': 'array', 'description': 'The flags for this record', 'items': {'type': 'string', 'description': 'The flags for this record', 'enum': ['partialResult']}, 'uniqueItems': True}, 'lastSeenTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the record was last seen'}, 'firstSeenTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the record was first seen'}, 'rrclass': {'type': 'string', 'description': 'The class of this record', 'enum': ['in']}, 'rrtype': {'type': 'string', 'description': 'The type of this record', 'enum': ['a', 'aaaa', 'cname', 'dname', 'mx', 'naptr', 'ns', 'ptr', 'rp', 'soa', 'srv', 'txt']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}}}, '402': {'description': 'Resource limit exceeded', 'content': {'application/json': {}, 'text/csv': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}, 'text/csv': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}