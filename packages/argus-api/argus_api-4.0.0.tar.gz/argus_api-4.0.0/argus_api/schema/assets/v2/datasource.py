"""Autogenerated API schema"""
from argus_api import session


create_asset_data_source = {'tags': ['assets/v2/datasource'], 'summary': 'Create a new Asset Data Source (INTERNAL)', 'description': '', 'operationId': 'createAssetDataSource', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to retrieve a Data Source', 'properties': {'customer': {'type': 'str', 'description': 'The id or shortName of the Customer.'}, 'description': {'type': 'str', 'description': "The Data Source's description.", 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'name': {'type': 'str', 'description': 'The human readable display name. If not provided will be populated by the short name.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'otherSourceMergeResolutionStrategy': {'type': 'str', 'description': 'The chosen merge resolution strategy when handling merge conflicts with the another datasource.', 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'float', 'default': 5, 'description': 'Priority of the given datasource', 'maximum': 10, 'minimum': 0}, 'sameSourceMergeResolutionStrategy': {'type': 'str', 'description': 'The chosen merge resolution strategy when handling merge conflicts with the same datasource.', 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'str', 'description': 'The machine readable shortName for the Data Source. Must be unique per customer.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'ttl': {'type': 'int', 'default': 0, 'description': 'Time to live, 0 mean never expires', 'minimum': 0}, 'writePermission': {'type': 'str', 'description': 'Id or name of the permission required to write data to this source.'}}, 'required': ['customer', 'otherSourceMergeResolutionStrategy', 'sameSourceMergeResolutionStrategy', 'shortName', 'writePermission']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create a new Asset Data Source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The underlying source reporting information about Assets, Observations, and their components', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was deleted'}, 'description': {'type': 'string', 'description': "The Data Source's description"}, 'flags': {'type': 'array', 'description': 'Flags set on the Data Source', 'items': {'type': 'string', 'description': 'Flags set on the Data Source', 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': "The Data Source's id"}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was updated'}, 'name': {'type': 'string', 'description': "The Data Source's name"}, 'otherSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with other datasources.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'number', 'format': 'double', 'description': "The Data Source's priority"}, 'sameSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with the same datasource.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'string', 'description': "The Data Source's short name (unique per customer)"}, 'ttl': {'type': 'integer', 'format': 'int64', 'description': "The Data Source's time to live, 0 mean never expires"}, 'writePermission': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateAssetDataSource'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_asset_data_source = {'tags': ['assets/v2/datasource'], 'summary': 'Delete Data Source (INTERNAL)', 'description': '', 'operationId': 'deleteAssetDataSource', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Data Source ID or short name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': "Customer ID or short name (default is user's customer), only used when the data source's short name was provided to retrieve the data source", 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete Data Source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The underlying source reporting information about Assets, Observations, and their components', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was deleted'}, 'description': {'type': 'string', 'description': "The Data Source's description"}, 'flags': {'type': 'array', 'description': 'Flags set on the Data Source', 'items': {'type': 'string', 'description': 'Flags set on the Data Source', 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': "The Data Source's id"}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was updated'}, 'name': {'type': 'string', 'description': "The Data Source's name"}, 'otherSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with other datasources.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'number', 'format': 'double', 'description': "The Data Source's priority"}, 'sameSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with the same datasource.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'string', 'description': "The Data Source's short name (unique per customer)"}, 'ttl': {'type': 'integer', 'format': 'int64', 'description': "The Data Source's time to live, 0 mean never expires"}, 'writePermission': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateAssetDataSource'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_asset_data_source = {'tags': ['assets/v2/datasource'], 'summary': 'Get Data Source (INTERNAL)', 'description': '', 'operationId': 'getAssetDataSource', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Data Source ID or short name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': "Customer ID or short name (default is user's customer), only used when the data source's short name was provided to retrieve the asset", 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get Data Source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The underlying source reporting information about Assets, Observations, and their components', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was deleted'}, 'description': {'type': 'string', 'description': "The Data Source's description"}, 'flags': {'type': 'array', 'description': 'Flags set on the Data Source', 'items': {'type': 'string', 'description': 'Flags set on the Data Source', 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': "The Data Source's id"}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was updated'}, 'name': {'type': 'string', 'description': "The Data Source's name"}, 'otherSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with other datasources.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'number', 'format': 'double', 'description': "The Data Source's priority"}, 'sameSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with the same datasource.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'string', 'description': "The Data Source's short name (unique per customer)"}, 'ttl': {'type': 'integer', 'format': 'int64', 'description': "The Data Source's time to live, 0 mean never expires"}, 'writePermission': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAssetDataSource'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_asset_data_sources = {'tags': ['assets/v2/datasource'], 'summary': 'Search Asset Data Sources with specified query params (INTERNAL)', 'description': '', 'operationId': 'listAssetDataSources', 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'Customer ids or short names', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Filter search by Asset Data Source keyword fields (short name, name, and description)', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'maximum': 10000, 'minimum': 0}, 'type': 'int', 'default': '25', 'maximum': 10000, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'maximum': 10000, 'minimum': 0}, 'type': 'int', 'default': '0', 'maximum': 10000, 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'sortBy', 'in': 'query', 'description': 'Field(s) to sort by (shortName, name, createdTimestamp, lastUpdatedTimestamp, deletedTimestamp)', 'schema': {'type': 'list', 'items': {'type': 'string'}}, 'type': 'list', 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Search Asset Data Sources with specified query params', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'The underlying source reporting information about Assets, Observations, and their components', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was deleted'}, 'description': {'type': 'string', 'description': "The Data Source's description"}, 'flags': {'type': 'array', 'description': 'Flags set on the Data Source', 'items': {'type': 'string', 'description': 'Flags set on the Data Source', 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': "The Data Source's id"}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was updated'}, 'name': {'type': 'string', 'description': "The Data Source's name"}, 'otherSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with other datasources.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'number', 'format': 'double', 'description': "The Data Source's priority"}, 'sameSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with the same datasource.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'string', 'description': "The Data Source's short name (unique per customer)"}, 'ttl': {'type': 'integer', 'format': 'int64', 'description': "The Data Source's time to live, 0 mean never expires"}, 'writePermission': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAssetDataSource'], 'x-Argus-ApiStatus': 'INTERNAL'}
restore_asset_data_source = {'tags': ['assets/v2/datasource'], 'summary': 'Restore Data Source (INTERNAL)', 'description': '', 'operationId': 'restoreAssetDataSource', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Data Source ID or short name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': "Customer ID or short name (default is user's customer), only used when the data source's short name was provided to retrieve the asset", 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Restore Data Source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The underlying source reporting information about Assets, Observations, and their components', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was deleted'}, 'description': {'type': 'string', 'description': "The Data Source's description"}, 'flags': {'type': 'array', 'description': 'Flags set on the Data Source', 'items': {'type': 'string', 'description': 'Flags set on the Data Source', 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': "The Data Source's id"}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was updated'}, 'name': {'type': 'string', 'description': "The Data Source's name"}, 'otherSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with other datasources.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'number', 'format': 'double', 'description': "The Data Source's priority"}, 'sameSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with the same datasource.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'string', 'description': "The Data Source's short name (unique per customer)"}, 'ttl': {'type': 'integer', 'format': 'int64', 'description': "The Data Source's time to live, 0 mean never expires"}, 'writePermission': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateAssetDataSource'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_asset_data_sources = {'tags': ['assets/v2/datasource'], 'summary': 'Search Asset Data Sources with specified criteria (INTERNAL)', 'description': '', 'operationId': 'searchAssetDataSources', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'description': 'Search for Asset Data Sources with these Customer IDs or short names', 'items': {'type': 'str', 'description': 'Search for Asset Data Sources with these Customer IDs or short names'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'excludeFlags': {'type': 'list', 'description': 'Explicitly filter out Assets that contain these flags', 'items': {'type': 'str', 'description': 'Explicitly filter out Assets that contain these flags', 'enum': ['deleted']}, 'uniqueItems': True}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'Whether to include deleted results'}, 'includeFlags': {'type': 'list', 'description': 'Explicitly search for Assets that contain these flags', 'items': {'type': 'str', 'description': 'Explicitly search for Assets that contain these flags', 'enum': ['deleted']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'enum': ['all', 'shortName', 'name', 'description']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict different keywords should be matched (default match any keywords)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'items': {'type': 'str', 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit maximum amount of results', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'Skip specified amount of results', 'minimum': 0}, 'sortBy': {'type': 'list', 'description': 'Field(s) by which to sort the results', 'items': {'type': 'str', 'description': 'Field(s) by which to sort the results', 'enum': ['shortName', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-shortName', '-name', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}}, 'startTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'subCriteria': {'type': 'list', 'description': 'Set additional criteria that are applied with logical OR by default', 'items': {'type': 'dict', 'description': 'Search sub-criteria for searching for Asset Data Sources', 'properties': {'customer': {'type': 'list', 'description': 'Search for Asset Data Sources with these Customer IDs or short names', 'items': {'type': 'str', 'description': 'Search for Asset Data Sources with these Customer IDs or short names'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'exclude': {'type': 'bool', 'default': False, 'description': 'If set to true, objects matching this criteria will be excluded'}, 'excludeFlags': {'type': 'list', 'description': 'Explicitly filter out Assets that contain these flags', 'items': {'type': 'str', 'description': 'Explicitly filter out Assets that contain these flags', 'enum': ['deleted']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Explicitly search for Assets that contain these flags', 'items': {'type': 'str', 'description': 'Explicitly search for Assets that contain these flags', 'enum': ['deleted']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'enum': ['all', 'shortName', 'name', 'description']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict different keywords should be matched (default match any keywords)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'items': {'type': 'str', 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'If set to true, objects matching this criteria are required (logical AND-ed together with parent criteria)'}, 'startTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'timeFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['all', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['any', 'all']}, 'user': {'type': 'list', 'description': 'Search for Asset Data Sources by associated user IDs or short names defined by the UserFieldStrategy', 'items': {'type': 'str', 'description': 'Search for Asset Data Sources by associated user IDs or short names defined by the UserFieldStrategy'}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which user fields to filter with the submitted user value(s)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which user fields to filter with the submitted user value(s)', 'enum': ['all', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['all', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['any', 'all']}, 'user': {'type': 'list', 'description': 'Search for Asset Data Sources by associated user IDs or short names defined by the UserFieldStrategy', 'items': {'type': 'str', 'description': 'Search for Asset Data Sources by associated user IDs or short names defined by the UserFieldStrategy'}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which user fields to filter with the submitted user value(s)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which user fields to filter with the submitted user value(s)', 'enum': ['all', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search Asset Data Sources with specified criteria', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'The underlying source reporting information about Assets, Observations, and their components', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was deleted'}, 'description': {'type': 'string', 'description': "The Data Source's description"}, 'flags': {'type': 'array', 'description': 'Flags set on the Data Source', 'items': {'type': 'string', 'description': 'Flags set on the Data Source', 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': "The Data Source's id"}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was updated'}, 'name': {'type': 'string', 'description': "The Data Source's name"}, 'otherSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with other datasources.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'number', 'format': 'double', 'description': "The Data Source's priority"}, 'sameSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with the same datasource.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'string', 'description': "The Data Source's short name (unique per customer)"}, 'ttl': {'type': 'integer', 'format': 'int64', 'description': "The Data Source's time to live, 0 mean never expires"}, 'writePermission': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAssetDataSource'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_asset_data_source = {'tags': ['assets/v2/datasource'], 'summary': 'Update an existing Asset Data Source (INTERNAL)', 'description': '', 'operationId': 'updateAssetDataSource', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Data Source ID or short name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': "Customer ID or short name (default is user's customer), only used when the data source's short name was provided to retrieve the data source", 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an active Data Source', 'properties': {'description': {'type': 'str', 'description': "The Data Source's new description", 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'name': {'type': 'str', 'description': "The Data Source's new name", 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'otherSourceMergeResolutionStrategy': {'type': 'str', 'description': 'The chosen merge resolution strategy when handling merge conflicts with other datasources.', 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'float', 'description': 'Priority of the given datasource', 'maximum': 10, 'minimum': 0}, 'sameSourceMergeResolutionStrategy': {'type': 'str', 'description': 'The chosen merge resolution strategy when handling merge conflicts with the same datasource.', 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'str', 'description': "The Data Source's new shortname", 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'ttl': {'type': 'int', 'description': 'Time to live, 0 mean never expires', 'minimum': 0}, 'writePermission': {'type': 'str', 'description': 'Id or name of the permission required to write data to this source.'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update an existing Asset Data Source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The underlying source reporting information about Assets, Observations, and their components', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was deleted'}, 'description': {'type': 'string', 'description': "The Data Source's description"}, 'flags': {'type': 'array', 'description': 'Flags set on the Data Source', 'items': {'type': 'string', 'description': 'Flags set on the Data Source', 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': "The Data Source's id"}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When, in epoch millis, the Data source was updated'}, 'name': {'type': 'string', 'description': "The Data Source's name"}, 'otherSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with other datasources.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'priority': {'type': 'number', 'format': 'double', 'description': "The Data Source's priority"}, 'sameSourceMergeResolutionStrategy': {'type': 'string', 'description': "The Data Source's chosen merge resolution strategy when handling merge conflicts with the same datasource.", 'enum': ['reject', 'replace', 'append', 'expire']}, 'shortName': {'type': 'string', 'description': "The Data Source's short name (unique per customer)"}, 'ttl': {'type': 'integer', 'format': 'int64', 'description': "The Data Source's time to live, 0 mean never expires"}, 'writePermission': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateAssetDataSource'], 'x-Argus-ApiStatus': 'INTERNAL'}