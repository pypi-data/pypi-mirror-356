"""Autogenerated API schema"""
from argus_api import session


aggregate_metrics = {'tags': ['metrics/v1'], 'summary': 'Fetch metrics that matches given aggregation criteria (PUBLIC)', 'description': '', 'operationId': 'aggregateMetrics', 'parameters': [{'name': 'descriptor', 'in': 'path', 'description': 'Shortname or ID of descriptor', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'descriptorDomain', 'in': 'query', 'description': "Domain which is used if short name is specified for 'descriptor' parameter. Defaults to current user domain.", 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'calendarInterval': {'type': 'str', 'default': 'null', 'description': 'States the calendar interval the aggregation results should be sorted by, such as month or year.It only allows for a resolution of 1, and overrides the resolution unit such that if calendar interval is week, then the result will be in intervals of 1 whole week, expanding backwards in time for start and forwards for end. It is by defaults not used and set to null.', 'enum': ['second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year']}, 'customer': {'type': 'list', 'description': 'Restrict result set to records bound to specified customers. The list accepts both ID or shortname for the customers. For global metrics, this field should not be set.', 'items': {'type': 'str', 'description': 'Restrict result set to records bound to specified customers. The list accepts both ID or shortname for the customers. For global metrics, this field should not be set.'}, 'uniqueItems': True}, 'customerDomain': {'type': 'str', 'description': 'Restrict result set to records with customers from the specific domain. The field accepts ID or shortname for the domain.'}, 'endTimestamp': {'type': 'str', 'default': 'now', 'description': 'Restrict result set to records submitted before this time. Allows the use of unix timestamp (milliseconds), ISO timestamp, or relative time.  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'groupBy': {'type': 'list', 'description': "List of descriptor's key names for aggregating the result. The result will be grouped into key buckets up to the limit given.The buckets themselves will be ordered in a descending order based on the values aggregated.", 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'description': "Name of the key you want to have the results grouped by, results will return one bucket for each found key value.\nAdditionally supports 'customer' as an option.\n"}, 'limit': {'type': 'int', 'default': 10, 'description': 'Set this value to set max number of results. Min 1, max 10000', 'maximum': 10000, 'minimum': 1}, 'keyName': {'type': 'dict', 'properties': {'key': {'type': 'str', 'description': "Name of the key you want to have the results grouped by, results will return one bucket for each found key value.\nAdditionally supports 'customer' as an option.\n"}, 'limit': {'type': 'int', 'default': 10, 'description': 'Set this value to set max number of results. Min 1, max 10000', 'maximum': 10000, 'minimum': 1}, 'keyName': []}, 'required': ['key']}}, 'required': ['key']}}, 'groupByCustomer': {'type': 'bool', 'default': False, 'deprecated': True, 'description': 'States whether Metric records will be aggregated by customers. Deprecated, use the groupBy field.'}, 'includeOthers': {'type': 'bool', 'default': True, 'description': 'States whether the aggregation results will contain buckets for the data not included in the keys given by the groupBy field.Is not used if the groupBy field is empty. It defaults to true.'}, 'keyIntervals': {'type': 'list', 'default': 'null', 'description': 'List of key intervals, to filter the aggregation on.', 'items': {'type': 'dict', 'properties': {'cidr': {'type': 'str', 'description': "CIDR mask, only for keys holding ip addresses. Can't be used together with 'gte', 'gt', 'lte', 'lt'"}, 'gt': {'type': 'str', 'description': 'Include only records with the key values larger than the value in this field.'}, 'gte': {'type': 'str', 'description': "Include only records with the key values larger then or equal to the value in this field. Can't be used together with 'gt'"}, 'lt': {'type': 'str', 'description': 'Include only records with the key values smaller than the value in this field.'}, 'lte': {'type': 'str', 'description': "Include only records with the key values smaller then or equal to the value in this field. Can't be used together with 'lt'"}, 'name': {'type': 'str', 'description': "Name of the 'key' type field the interval is set on."}, 'values': {'type': 'list', 'description': "Set of discrete values the records will be filtered with. This field uses 'Where value in' logic. Please make sure the values type is congruent with the key field type. For IP addresses only single IPs are allowed. Can't be used with ranges.", 'items': {'type': 'str', 'description': "Set of discrete values the records will be filtered with. This field uses 'Where value in' logic. Please make sure the values type is congruent with the key field type. For IP addresses only single IPs are allowed. Can't be used with ranges."}, 'uniqueItems': True}}, 'required': ['name']}}, 'keys': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Restrict result set to records with these key names and key values. Must match the keys given in the descriptor, but IP type allows using IP ranges, such as 192.168.0.0/16 for IPv4 or 2001:db8::/48 for IPv6. Deprecated, use keyIntervals instead.'}, 'description': 'Restrict result set to records with these key names and key values. Must match the keys given in the descriptor, but IP type allows using IP ranges, such as 192.168.0.0/16 for IPv4 or 2001:db8::/48 for IPv6. Deprecated, use keyIntervals instead.'}, 'resolution': {'type': 'int', 'description': "Aggregation resolution period in units specified by 'resolutionUnit' property. If 0 the resolution is the entire time span given by the start and end timestamps. If the expected combination of timestamps, resolution, and resolution unit would result in more buckets than ElasticSearch permits, which is 10000, then the request will be denied. Note that the initial calculation on this is rough, and that ES might still deny the request. In which case lower the resolution.", 'minimum': 0}, 'resolutionUnit': {'type': 'str', 'default': 'millisecond', 'description': 'Units for aggregation resolution.', 'enum': ['millisecond', 'second', 'minute', 'hour', 'day', 'milliseconds', 'seconds', 'minutes', 'hours', 'days']}, 'skipKeyTranslation': {'type': 'bool', 'default': False, 'description': 'Whether to skip key translation and return the raw value.'}, 'sortBy': {'type': 'list', 'description': "Fields to sort result by. The results are sortable by any of the keys or values in the resulting aggregation. Note: you have to provide the exact names of the fields you need the sorting done on. So if the resulting field name is 'value1_sum' this is what has to be provided. The sorting is prioritized based on the order given, and in the case of key and value having the same name, then the value is used, while the key is ignored. Note: use '-' to sort in desc order. By default the results are not sorted. To sort by customer use option field name 'customerID'.", 'items': {'type': 'str', 'description': "Fields to sort result by. The results are sortable by any of the keys or values in the resulting aggregation. Note: you have to provide the exact names of the fields you need the sorting done on. So if the resulting field name is 'value1_sum' this is what has to be provided. The sorting is prioritized based on the order given, and in the case of key and value having the same name, then the value is used, while the key is ignored. Note: use '-' to sort in desc order. By default the results are not sorted. To sort by customer use option field name 'customerID'."}}, 'startTimestamp': {'type': 'str', 'description': 'Restrict result set to records submitted after this time.Allows the use of unix timestamp (milliseconds), ISO timestamp, or relative time.  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'subCriteria': {'type': 'list', 'default': 'OR', 'description': 'Set additional criterias to be applied as specified in the subcriteria object(s) (AND, AND NOT, OR).', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'description': 'Restrict result set to records bound to specified customers. The list accepts both ID or shortname for the customers. For global metrics, this field should not be set.', 'items': {'type': 'str', 'description': 'Restrict result set to records bound to specified customers. The list accepts both ID or shortname for the customers. For global metrics, this field should not be set.'}, 'uniqueItems': True}, 'customerDomain': {'type': 'str', 'description': 'Restrict result set to records with customers from the specific domain. The field accepts ID or shortname for the domain.'}, 'exclude': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria object will be excluded.'}, 'keyIntervals': {'type': 'list', 'default': 'null', 'description': 'List of key intervals, to filter the aggregation on.', 'items': {'type': 'dict', 'properties': {'cidr': {'type': 'str', 'description': "CIDR mask, only for keys holding ip addresses. Can't be used together with 'gte', 'gt', 'lte', 'lt'"}, 'gt': {'type': 'str', 'description': 'Include only records with the key values larger than the value in this field.'}, 'gte': {'type': 'str', 'description': "Include only records with the key values larger then or equal to the value in this field. Can't be used together with 'gt'"}, 'lt': {'type': 'str', 'description': 'Include only records with the key values smaller than the value in this field.'}, 'lte': {'type': 'str', 'description': "Include only records with the key values smaller then or equal to the value in this field. Can't be used together with 'lt'"}, 'name': {'type': 'str', 'description': "Name of the 'key' type field the interval is set on."}, 'values': {'type': 'list', 'description': "Set of discrete values the records will be filtered with. This field uses 'Where value in' logic. Please make sure the values type is congruent with the key field type. For IP addresses only single IPs are allowed. Can't be used with ranges.", 'items': {'type': 'str', 'description': "Set of discrete values the records will be filtered with. This field uses 'Where value in' logic. Please make sure the values type is congruent with the key field type. For IP addresses only single IPs are allowed. Can't be used with ranges."}, 'uniqueItems': True}}, 'required': ['name']}}, 'keys': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Restrict result set to records with these key names and key values. Must match the keys given in the descriptor, but IP type allows using IP ranges, such as 192.168.0.0/16 for IPv4 or 2001:db8::/48 for IPv6. Deprecated, use keyIntervals instead.'}, 'description': 'Restrict result set to records with these key names and key values. Must match the keys given in the descriptor, but IP type allows using IP ranges, such as 192.168.0.0/16 for IPv4 or 2001:db8::/48 for IPv6. Deprecated, use keyIntervals instead.'}, 'required': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}}}, 'uniqueItems': True}, 'timeZone': {'type': 'str', 'default': 'null', 'description': "Settable Timezone. For more information please refer to official java documentation\nhttps://docs.oracle.com/middleware/12211/wcs/tag-ref/MISC/TimeZones.html\nIf not set the data will be localized according to user's timezone."}, 'values': {'type': 'list', 'description': "Descriptor's values included in aggregation result.", 'items': {'type': 'dict', 'properties': {'aggregationFunction': {'type': 'str', 'description': "Aggregation function used for aggregating the result. Defaults to the metric descriptor's 'defaultAggregationFunction'.", 'enum': ['sum', 'avg', 'min', 'max', 'wavg', 'sumOfSquares', 'last']}, 'name': {'type': 'str', 'description': "Name of the 'value' type field the aggregation should be performed on."}, 'weightByValue': {'type': 'str', 'description': "Which 'value' type field should be used as weight. This field is required for wavg aggregate function, it is not used by other functions."}}, 'required': ['name']}, 'maxItems': 2147483647, 'minItems': 1}}, 'required': ['endTimestamp', 'startTimestamp', 'values']}}}, 'required': True}, 'responses': {'default': {'description': 'Fetch metrics that matches given aggregation criteria', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'keys': {'type': 'array', 'description': 'Keys associated to the metric aggregate.', 'items': {'type': 'object', 'description': 'List of key associated to the metric record.', 'properties': {'name': {'type': 'string', 'description': 'Name of the metric key.'}, 'translation': {'type': 'string', 'description': 'Translation of the key value to a human readable string.'}, 'value': {'type': 'string', 'description': 'Value of the metric key.'}}}}, 'metricDescriptorID': {'type': 'string', 'format': 'uuid', 'description': 'Unique identifier of the metric descriptor.'}, 'metricTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of metric aggregate. 0 if query is not time-based.'}, 'values': {'type': 'array', 'description': 'Measured values for the metric aggregate.', 'items': {'type': 'object', 'description': 'List of measured values for a given metricTimestamp.', 'properties': {'name': {'type': 'string', 'description': 'Name of the metric value.'}, 'unit': {'type': 'string', 'description': 'The unit in which the value is measured', 'enum': ['count', 'milliseconds', 'seconds', 'minutes', 'hours', 'bytes']}, 'value': {'type': 'integer', 'format': 'int64', 'description': 'Actual value of the metric value.'}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewMetric'], 'x-Argus-ApiStatus': 'PUBLIC'}
search_metrics = {'tags': ['metrics/v1'], 'summary': 'Search the submitted metrics for a specific descriptor. (PUBLIC)', 'description': '', 'operationId': 'searchMetrics', 'parameters': [{'name': 'descriptor', 'in': 'path', 'description': 'Shortname or ID of descriptor', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'descriptorDomain', 'in': 'query', 'description': "Domain which is used if short name is specified for 'descriptor' parameter. Defaults to current user domain.", 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'description': 'Restrict result set to records bound to specified customers. The list accepts both ID or shortname for the customers. For global metrics, this field should not be set.', 'items': {'type': 'str', 'description': 'Restrict result set to records bound to specified customers. The list accepts both ID or shortname for the customers. For global metrics, this field should not be set.'}, 'uniqueItems': True}, 'customerDomain': {'type': 'str', 'description': 'Restrict result set to records with customers from the specific domain. The field accepts ID or shortname for the domain.'}, 'endTimestamp': {'type': 'str', 'default': 'now', 'description': 'Restrict result set to records submitted before this time. Allows the use of unix timestamp (milliseconds), ISO timestamp, or relative time.  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'keyIntervals': {'type': 'list', 'default': 'null', 'description': 'List of key intervals, to filter the aggregation on.', 'items': {'type': 'dict', 'properties': {'cidr': {'type': 'str', 'description': "CIDR mask, only for keys holding ip addresses. Can't be used together with 'gte', 'gt', 'lte', 'lt'"}, 'gt': {'type': 'str', 'description': 'Include only records with the key values larger than the value in this field.'}, 'gte': {'type': 'str', 'description': "Include only records with the key values larger then or equal to the value in this field. Can't be used together with 'gt'"}, 'lt': {'type': 'str', 'description': 'Include only records with the key values smaller than the value in this field.'}, 'lte': {'type': 'str', 'description': "Include only records with the key values smaller then or equal to the value in this field. Can't be used together with 'lt'"}, 'name': {'type': 'str', 'description': "Name of the 'key' type field the interval is set on."}, 'values': {'type': 'list', 'description': "Set of discrete values the records will be filtered with. This field uses 'Where value in' logic. Please make sure the values type is congruent with the key field type. For IP addresses only single IPs are allowed. Can't be used with ranges.", 'items': {'type': 'str', 'description': "Set of discrete values the records will be filtered with. This field uses 'Where value in' logic. Please make sure the values type is congruent with the key field type. For IP addresses only single IPs are allowed. Can't be used with ranges."}, 'uniqueItems': True}}, 'required': ['name']}}, 'keys': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Restrict result set to records with these key names and key values. Must match the keys given in the descriptor, but IP type allows using IP ranges, such as 192.168.0.0/16 for IPv4 or 2001:db8::/48 for IPv6. Deprecated, use keyIntervals instead.'}, 'description': 'Restrict result set to records with these key names and key values. Must match the keys given in the descriptor, but IP type allows using IP ranges, such as 192.168.0.0/16 for IPv4 or 2001:db8::/48 for IPv6. Deprecated, use keyIntervals instead.'}, 'limit': {'type': 'int', 'default': 25, 'description': 'Set this value to set max number of results. Cannot exceed 10000 which is the Elasticsearch search window.', 'maximum': 10000}, 'offset': {'type': 'int', 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object.Cannot, in combination with the limit, exceed 10000, as this will exceed the Elasticsearch search window.', 'maximum': 9999}, 'skipKeyTranslation': {'type': 'bool', 'default': False, 'description': 'Whether to skip key translation and return the raw value.'}, 'sortBy': {'type': 'list', 'description': "Fields to sort result by. The results are sortable by any of the keys or values in the descriptor,e.g. 'suricata_detections' is sortable by 'host, interface, alerts, rules_loaded'.The sorting is prioritized based on the order given, and in the case of both key and value having the same name,then the value is used, while the key is ignored.Note: use '-' to sort in desc order. By default the results are sorted by timestamp.", 'items': {'type': 'str', 'description': "Fields to sort result by. The results are sortable by any of the keys or values in the descriptor,e.g. 'suricata_detections' is sortable by 'host, interface, alerts, rules_loaded'.The sorting is prioritized based on the order given, and in the case of both key and value having the same name,then the value is used, while the key is ignored.Note: use '-' to sort in desc order. By default the results are sorted by timestamp."}}, 'startTimestamp': {'type': 'str', 'description': 'Restrict result set to records submitted after this time.Allows the use of unix timestamp (milliseconds), ISO timestamp, or relative time.  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'subCriteria': {'type': 'list', 'default': 'OR', 'description': 'Set additional criterias to be applied as specified in the subcriteria object(s) (AND, AND NOT, OR).', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'description': 'Restrict result set to records bound to specified customers. The list accepts both ID or shortname for the customers. For global metrics, this field should not be set.', 'items': {'type': 'str', 'description': 'Restrict result set to records bound to specified customers. The list accepts both ID or shortname for the customers. For global metrics, this field should not be set.'}, 'uniqueItems': True}, 'customerDomain': {'type': 'str', 'description': 'Restrict result set to records with customers from the specific domain. The field accepts ID or shortname for the domain.'}, 'exclude': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria object will be excluded.'}, 'keyIntervals': {'type': 'list', 'default': 'null', 'description': 'List of key intervals, to filter the aggregation on.', 'items': {'type': 'dict', 'properties': {'cidr': {'type': 'str', 'description': "CIDR mask, only for keys holding ip addresses. Can't be used together with 'gte', 'gt', 'lte', 'lt'"}, 'gt': {'type': 'str', 'description': 'Include only records with the key values larger than the value in this field.'}, 'gte': {'type': 'str', 'description': "Include only records with the key values larger then or equal to the value in this field. Can't be used together with 'gt'"}, 'lt': {'type': 'str', 'description': 'Include only records with the key values smaller than the value in this field.'}, 'lte': {'type': 'str', 'description': "Include only records with the key values smaller then or equal to the value in this field. Can't be used together with 'lt'"}, 'name': {'type': 'str', 'description': "Name of the 'key' type field the interval is set on."}, 'values': {'type': 'list', 'description': "Set of discrete values the records will be filtered with. This field uses 'Where value in' logic. Please make sure the values type is congruent with the key field type. For IP addresses only single IPs are allowed. Can't be used with ranges.", 'items': {'type': 'str', 'description': "Set of discrete values the records will be filtered with. This field uses 'Where value in' logic. Please make sure the values type is congruent with the key field type. For IP addresses only single IPs are allowed. Can't be used with ranges."}, 'uniqueItems': True}}, 'required': ['name']}}, 'keys': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Restrict result set to records with these key names and key values. Must match the keys given in the descriptor, but IP type allows using IP ranges, such as 192.168.0.0/16 for IPv4 or 2001:db8::/48 for IPv6. Deprecated, use keyIntervals instead.'}, 'description': 'Restrict result set to records with these key names and key values. Must match the keys given in the descriptor, but IP type allows using IP ranges, such as 192.168.0.0/16 for IPv4 or 2001:db8::/48 for IPv6. Deprecated, use keyIntervals instead.'}, 'required': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}}}, 'uniqueItems': True}, 'timeZone': {'type': 'str', 'default': 'null', 'description': "Settable Timezone. For more information please refer to official java documentation\nhttps://docs.oracle.com/middleware/12211/wcs/tag-ref/MISC/TimeZones.html\nIf not set the data will be localized according to user's timezone."}}, 'required': ['endTimestamp', 'startTimestamp']}}}, 'required': True}, 'responses': {'default': {'description': 'Search the submitted metrics for a specific descriptor.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'descriptor': {'type': 'object', 'description': 'Descriptor that the metric record belongs to.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'shortName': {'type': 'string', 'description': 'Short name of the  metric descriptor. This name is unique per domain.'}}}, 'id': {'type': 'string', 'description': 'ID of the metric as required by ES'}, 'keys': {'type': 'array', 'description': 'List of key associated to the metric record.', 'items': {'type': 'object', 'description': 'List of key associated to the metric record.', 'properties': {'name': {'type': 'string', 'description': 'Name of the metric key.'}, 'translation': {'type': 'string', 'description': 'Translation of the key value to a human readable string.'}, 'value': {'type': 'string', 'description': 'Value of the metric key.'}}}}, 'metricTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of the metric record provided by client.'}, 'submissionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of the metric record submission.'}, 'submittedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'values': {'type': 'array', 'description': 'List of measured values for a given metricTimestamp.', 'items': {'type': 'object', 'description': 'List of measured values for a given metricTimestamp.', 'properties': {'name': {'type': 'string', 'description': 'Name of the metric value.'}, 'unit': {'type': 'string', 'description': 'The unit in which the value is measured', 'enum': ['count', 'milliseconds', 'seconds', 'minutes', 'hours', 'bytes']}, 'value': {'type': 'integer', 'format': 'int64', 'description': 'Actual value of the metric value.'}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewMetric'], 'x-Argus-ApiStatus': 'PUBLIC'}
submit_metric = {'tags': ['metrics/v1'], 'summary': 'Submit new metric (PUBLIC)', 'description': '', 'operationId': 'submitMetric', 'parameters': [{'name': 'descriptor', 'in': 'path', 'description': 'ID or short name of metric descriptor', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'descriptorDomain', 'in': 'query', 'description': "Domain which is used if short name is specified for 'descriptor' parameter. Defaults to current user domain.", 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'ignoreOnFailed': {'type': 'bool', 'default': False, 'description': 'Set this value for successful response even failures occur while submitting.'}, 'records': {'type': 'list', 'description': 'Metric records for submission.', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'str', 'default': 'Current user customer', 'description': "ID or shortname of customer owning the metric record. This will default to current user's customer if not set. For global metrics, this field should not be set."}, 'customerDomain': {'type': 'str', 'default': 'Current user domain', 'description': 'ID or shortname of domain for customer owning the metric record.'}, 'keys': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Keys for the metric record.'}, 'description': 'Keys for the metric record.'}, 'timestamp': {'type': 'int', 'description': 'Timestamp of the metric record.', 'minimum': 1}, 'values': {'type': 'dict', 'additionalProperties': {'type': 'int', 'description': 'Measured values for the metric record.'}, 'description': 'Measured values for the metric record.'}}, 'required': ['keys', 'values']}, 'maxItems': 2147483647, 'minItems': 1}}, 'required': ['records']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Submit new metric', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'errorInformationList': {'type': 'array', 'description': 'Information regarding any metrics that failed during submission.', 'items': {'type': 'object', 'description': 'Information regarding any metrics that failed during submission.', 'properties': {'errorMessages': {'type': 'array', 'description': 'String message of error cause.', 'items': {'type': 'string', 'description': 'String message of error cause.'}}, 'submissionIndex': {'type': 'integer', 'format': 'int32', 'description': 'Index of the submission as it appears in the submission request.'}}}}, 'failed': {'type': 'integer', 'format': 'int32', 'description': 'Number of failed metric records.'}, 'success': {'type': 'integer', 'format': 'int32', 'description': 'Number of successfully submitted metric records.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['submitMetric'], 'x-Argus-ApiStatus': 'PUBLIC'}