"""Autogenerated API schema"""
from argus_api import session


add_document_by_path_raw = {'tags': ['documents/v1'], 'summary': 'Create a new document with the specified name into the parent folder (PUBLIC)', 'description': 'Submit document data as raw data to this request. The content type specified in the request will be used.', 'operationId': 'addDocumentByPathRaw', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path from customer root to the parent folder (if not specified, add the folder in the root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to fetch from (default is current users customer', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'accessMode', 'in': 'query', 'description': 'Access mode to set on new document', 'schema': {'type': 'str', 'default': 'roleBased', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'type': 'str', 'default': 'roleBased', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, {'name': 'createMissing', 'in': 'query', 'description': 'If true, create any missing folders before adding document', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'overwriteExisting', 'in': 'query', 'description': 'If true, overwrite existing document with the same name', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'skipNotification', 'in': 'query', 'description': 'If true, skip notification to folder watchers', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'Content-Type', 'in': 'header', 'description': 'Document MIME-type', 'schema': {'type': 'string'}}], 'requestBody': {'content': {'*': {'schema': {'type': 'object'}}}}, 'responses': {'default': {'description': 'Create a new document with the specified name into the parent folder', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Parent folder not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_document_watcher = {'tags': ['documents/v1'], 'summary': 'Add watcher to specified document. Requires write access to the document. (PUBLIC)', 'description': '', 'operationId': 'addDocumentWatcher', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'negated': {'type': 'bool', 'default': False, 'description': 'If true, register an explicitly negated watcher entry. Default is to add a new active watcher.'}, 'subject': {'type': 'str', 'description': 'ID or shortname of subject to add as watcher.'}, 'subjectDomain': {'type': 'str', 'description': 'Domain to resolve subject shortname in. Defaults to current users domain.'}}, 'required': ['subject']}}}, 'required': True}, 'responses': {'default': {'description': 'Add watcher to specified document. Requires write access to the document.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'createdByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was created'}, 'deletedByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was deleted, or 0 (if not deleted)'}, 'elementInfo': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'flags': {'type': 'array', 'description': 'Active flags for this watcher', 'items': {'type': 'string', 'description': 'Active flags for this watcher', 'enum': ['deleted', 'negated', 'inherited', 'memberNegated', 'disabledAccess']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_document_watcher_by_path = {'tags': ['documents/v1'], 'summary': 'Add watcher to specified document. Requires write access to the document. (PUBLIC)', 'description': '', 'operationId': 'addDocumentWatcherByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path to parent folder (if not specified, select document from root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to lookup folder in (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'negated': {'type': 'bool', 'default': False, 'description': 'If true, register an explicitly negated watcher entry. Default is to add a new active watcher.'}, 'subject': {'type': 'str', 'description': 'ID or shortname of subject to add as watcher.'}, 'subjectDomain': {'type': 'str', 'description': 'Domain to resolve subject shortname in. Defaults to current users domain.'}}, 'required': ['subject']}}}, 'required': True}, 'responses': {'default': {'description': 'Add watcher to specified document. Requires write access to the document.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'createdByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was created'}, 'deletedByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was deleted, or 0 (if not deleted)'}, 'elementInfo': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'flags': {'type': 'array', 'description': 'Active flags for this watcher', 'items': {'type': 'string', 'description': 'Active flags for this watcher', 'enum': ['deleted', 'negated', 'inherited', 'memberNegated', 'disabledAccess']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
commit_document = {'tags': ['documents/v1'], 'summary': 'Commit specified document (PUBLIC)', 'description': '', 'operationId': 'commitDocument', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to commit', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'data': {'type': 'str', 'maxLength': 2147483647, 'minLength': 1}, 'lockRequestTime': {'type': 'int', 'default': 0, 'description': 'Specify how long the document should be locked'}, 'mimeType': {'type': 'str', 'description': 'If set change document MIME type'}, 'name': {'type': 'str', 'description': 'If set change document name', 'pattern': '\\A[^\\\\\\/:*"?<>|]{1,254}\\z'}, 'notificationOptions': {'type': 'dict', 'properties': {'skip': {'type': 'bool', 'description': 'If true, skip notification for current operation.'}}}, 'text': {'type': 'str', 'description': 'Plain text document content. If set change document content'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Commit specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}, '423': {'description': 'Document locked', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'elementID': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the element'}, 'elementName': {'type': 'string', 'description': 'Name of the element'}, 'elementType': {'type': 'string', 'description': 'Type of the element', 'enum': ['document', 'folder']}, 'lockedUntil': {'type': 'integer', 'format': 'int64', 'description': 'Until when the element is locked'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'ID of the user who locked the element.'}, 'userName': {'type': 'string', 'description': 'Username of the user who locked the element.'}}}}}}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_document = {'tags': ['documents/v1'], 'summary': 'Discard specified document (PUBLIC)', 'description': '', 'operationId': 'deleteDocument', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to discard', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Discard specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}, '423': {'description': 'Document locked', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'elementID': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the element'}, 'elementName': {'type': 'string', 'description': 'Name of the element'}, 'elementType': {'type': 'string', 'description': 'Type of the element', 'enum': ['document', 'folder']}, 'lockedUntil': {'type': 'integer', 'format': 'int64', 'description': 'Until when the element is locked'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'ID of the user who locked the element.'}, 'userName': {'type': 'string', 'description': 'Username of the user who locked the element.'}}}}}}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_document_by_path = {'tags': ['documents/v1'], 'summary': 'Discard specified document (PUBLIC)', 'description': '', 'operationId': 'deleteDocumentByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path from customer root to the parent folder (if not specified, fetch document from root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to fetch from (default is current users customer', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Discard specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}, '423': {'description': 'Document locked', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'elementID': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the element'}, 'elementName': {'type': 'string', 'description': 'Name of the element'}, 'elementType': {'type': 'string', 'description': 'Type of the element', 'enum': ['document', 'folder']}, 'lockedUntil': {'type': 'integer', 'format': 'int64', 'description': 'Until when the element is locked'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'ID of the user who locked the element.'}, 'userName': {'type': 'string', 'description': 'Username of the user who locked the element.'}}}}}}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_document_watcher = {'tags': ['documents/v1'], 'summary': 'Delete watcher entry on document. Requires write access to document. (PUBLIC)', 'description': '', 'operationId': 'deleteDocumentWatcher', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'entryID', 'in': 'path', 'description': 'ID of watcher entry', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete watcher entry on document. Requires write access to document.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'createdByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was created'}, 'deletedByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was deleted, or 0 (if not deleted)'}, 'elementInfo': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'flags': {'type': 'array', 'description': 'Active flags for this watcher', 'items': {'type': 'string', 'description': 'Active flags for this watcher', 'enum': ['deleted', 'negated', 'inherited', 'memberNegated', 'disabledAccess']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_document_watcher_by_path = {'tags': ['documents/v1'], 'summary': 'Delete watcher entry on document. Requires write access to document. (PUBLIC)', 'description': '', 'operationId': 'deleteDocumentWatcherByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path to parent folder (if not specified, select document from root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to lookup folder in (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'entryID', 'in': 'path', 'description': 'ID of watcher entry', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete watcher entry on document. Requires write access to document.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'createdByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was created'}, 'deletedByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was deleted, or 0 (if not deleted)'}, 'elementInfo': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'flags': {'type': 'array', 'description': 'Active flags for this watcher', 'items': {'type': 'string', 'description': 'Active flags for this watcher', 'enum': ['deleted', 'negated', 'inherited', 'memberNegated', 'disabledAccess']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_current_user_document_watch_status = {'tags': ['documents/v1'], 'summary': 'Get current user watcher status for document (PUBLIC)', 'description': '', 'operationId': 'getCurrentUserDocumentWatchStatus', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Get current user watcher status for document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'element': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'status': {'type': 'string', 'description': "This status reflects the current state of the currentuser for the current document or folder. If the currentuser is not a watcher for this document, this will return 'none'.", 'enum': ['user', 'group', 'inherited', 'negated', 'none']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}, 'watcherID': {'type': 'string', 'format': 'uuid', 'description': 'If currentuser is a watcher, this points to the ID of the closed watcher entry. Returns null if currentuser is not a watcher.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_current_user_document_watch_status_by_path = {'tags': ['documents/v1'], 'summary': 'Get current user watcher status for document (PUBLIC)', 'description': '', 'operationId': 'getCurrentUserDocumentWatchStatusByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path to parent folder (if not specified, select document from root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to lookup folder in (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get current user watcher status for document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'element': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'status': {'type': 'string', 'description': "This status reflects the current state of the currentuser for the current document or folder. If the currentuser is not a watcher for this document, this will return 'none'.", 'enum': ['user', 'group', 'inherited', 'negated', 'none']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}, 'watcherID': {'type': 'string', 'format': 'uuid', 'description': 'If currentuser is a watcher, this points to the ID of the closed watcher entry. Returns null if currentuser is not a watcher.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_document_content_by_id = {'tags': ['documents/v1'], 'summary': 'Download content as a file for specified document (PUBLIC)', 'description': '', 'operationId': 'getDocumentContentById', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to fetch', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Download content as a file for specified document', 'content': {'application/octet-stream': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/octet-stream': {}}}, '403': {'description': 'Access denied', 'content': {'application/octet-stream': {}}}, '404': {'description': 'Object not found', 'content': {'application/octet-stream': {}}}, '412': {'description': 'Validation failed', 'content': {'application/octet-stream': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_document_content_by_path = {'tags': ['documents/v1'], 'summary': 'Download content as a file for specified document (PUBLIC)', 'description': '', 'operationId': 'getDocumentContentByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path from customer root to the parent folder (if not specified, fetch document from root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to fetch from (default is current users customer', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Download content as a file for specified document', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_document_revisions = {'tags': ['documents/v1'], 'summary': 'Fetch specified document revisions (PUBLIC)', 'description': '', 'operationId': 'getDocumentRevisions', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to fetch revisions', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'Fetch specified document revisions', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_meta_info_by_id = {'tags': ['documents/v1'], 'summary': 'Fetch specified document excluding content (PUBLIC)', 'description': '', 'operationId': 'getMetaInfoById', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to fetch', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Fetch specified document excluding content', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_meta_info_by_path = {'tags': ['documents/v1'], 'summary': 'Fetch specified document meta data (PUBLIC)', 'description': '', 'operationId': 'getMetaInfoByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path from customer root to the parent folder (if not specified, fetch document from root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to fetch from (default is current users customer', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch specified document meta data', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
grant_document_access = {'tags': ['documents/v1'], 'summary': 'Grant access to specified document (PUBLIC)', 'description': 'If the access level is folder, the user is allowed to obtain the information about the document (without content). If the access level is read, the user is allowed to obtain the content of the document. If the access level is write, the user is allowed to update the document.', 'operationId': 'grantDocumentAccess', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'Document ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'subjectID': {'type': 'dict', 'properties': {'subjectID': [], 'subject': {'type': 'str', 'description': 'Specify user/group to grant access to'}, 'level': {'type': 'str', 'description': 'Specify access level to grant to user/group', 'enum': ['folder', 'read', 'write']}}, 'required': ['level', 'subject']}, 'subject': {'type': 'str', 'description': 'Specify user/group to grant access to'}, 'level': {'type': 'str', 'description': 'Specify access level to grant to user/group', 'enum': ['folder', 'read', 'write']}}, 'required': ['level', 'subject']}}}, 'required': True}, 'responses': {'default': {'description': 'Grant access to specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'level': {'type': 'string', 'description': 'What access level was granted', 'enum': ['none', 'folder', 'read', 'write']}, 'subject': {'oneOf': [{'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, {'allOf': [{'type': 'object', 'description': 'Who has access (group/user)', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}]}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
grant_document_access_by_path = {'tags': ['documents/v1'], 'summary': 'Grant access to specified document (PUBLIC)', 'description': 'If the access level is folder, the user is allowed to obtain the information about the document (without content). If the access level is read, the user is allowed to obtain the content of the document. If the access level is write, the user is allowed to update the document.', 'operationId': 'grantDocumentAccessByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path from customer root (if not specified, this returns the root)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to fetch from (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'subjectID': {'type': 'dict', 'properties': {'subjectID': [], 'subject': {'type': 'str', 'description': 'Specify user/group to grant access to'}, 'level': {'type': 'str', 'description': 'Specify access level to grant to user/group', 'enum': ['folder', 'read', 'write']}}, 'required': ['level', 'subject']}, 'subject': {'type': 'str', 'description': 'Specify user/group to grant access to'}, 'level': {'type': 'str', 'description': 'Specify access level to grant to user/group', 'enum': ['folder', 'read', 'write']}}, 'required': ['level', 'subject']}}}, 'required': True}, 'responses': {'default': {'description': 'Grant access to specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'level': {'type': 'string', 'description': 'What access level was granted', 'enum': ['none', 'folder', 'read', 'write']}, 'subject': {'oneOf': [{'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, {'allOf': [{'type': 'object', 'description': 'Who has access (group/user)', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}]}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_document_access = {'tags': ['documents/v1'], 'summary': 'Fetch ACL for specified document (PUBLIC)', 'description': '', 'operationId': 'listDocumentAccess', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'Document ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'Fetch ACL for specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'level': {'type': 'string', 'description': 'What access level was granted', 'enum': ['none', 'folder', 'read', 'write']}, 'subject': {'oneOf': [{'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, {'allOf': [{'type': 'object', 'description': 'Who has access (group/user)', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}]}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_document_access_by_path = {'tags': ['documents/v1'], 'summary': 'Fetch ACL for specified document (PUBLIC)', 'description': '', 'operationId': 'listDocumentAccessByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path from customer root (if not specified, this returns the root)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to fetch from (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'Fetch ACL for specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'level': {'type': 'string', 'description': 'What access level was granted', 'enum': ['none', 'folder', 'read', 'write']}, 'subject': {'oneOf': [{'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, {'allOf': [{'type': 'object', 'description': 'Who has access (group/user)', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}]}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_document_watchers_by_id = {'tags': ['documents/v1'], 'summary': 'Get all watchers for document (PUBLIC)', 'description': '', 'operationId': 'listDocumentWatchersByID', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'limit', 'in': 'query', 'description': 'Limit the result', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results', 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}, {'name': 'includeInherited', 'in': 'query', 'description': 'If true, also fetch watchers defined on parent folders', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}, {'name': 'includeNegated', 'in': 'query', 'description': 'If true, also fetch explicit unwatch records', 'schema': {'type': 'boolean'}, 'type': 'bool'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'If true, also fetch deleted watcher records', 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'responses': {'default': {'description': 'Get all watchers for document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'createdByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was created'}, 'deletedByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was deleted, or 0 (if not deleted)'}, 'elementInfo': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'flags': {'type': 'array', 'description': 'Active flags for this watcher', 'items': {'type': 'string', 'description': 'Active flags for this watcher', 'enum': ['deleted', 'negated', 'inherited', 'memberNegated', 'disabledAccess']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_document_watchers_by_path = {'tags': ['documents/v1'], 'summary': 'Get all watchers for document (PUBLIC)', 'description': '', 'operationId': 'listDocumentWatchersByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path to parent folder (if not specified, select document from root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to lookup folder in (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit the result', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results', 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}, {'name': 'includeInherited', 'in': 'query', 'description': 'If true, also fetch watchers defined on parent folders', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}, {'name': 'includeNegated', 'in': 'query', 'description': 'If true, also fetch explicit unwatch records', 'schema': {'type': 'boolean'}, 'type': 'bool'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'If true, also fetch deleted watcher records', 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'responses': {'default': {'description': 'Get all watchers for document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'createdByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was created'}, 'deletedByUser': {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this watcher was deleted, or 0 (if not deleted)'}, 'elementInfo': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'flags': {'type': 'array', 'description': 'Active flags for this watcher', 'items': {'type': 'string', 'description': 'Active flags for this watcher', 'enum': ['deleted', 'negated', 'inherited', 'memberNegated', 'disabledAccess']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_documents = {'tags': ['documents/v1'], 'summary': 'List documents (PUBLIC)', 'description': '', 'operationId': 'listDocuments', 'parameters': [{'name': 'customerID', 'in': 'query', 'description': 'Filter documents by customerID', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Filter documents by keywords', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'List documents', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
lock_document = {'tags': ['documents/v1'], 'summary': 'Lock/Unlock specified document (PUBLIC)', 'description': '', 'operationId': 'lockDocument', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to lock/unlock', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'lockRequestTime': {'type': 'int', 'description': "If 'mode' is set to LOCK, specify how long the document should be locked", 'minimum': 0}, 'mode': {'type': 'str', 'default': 'LOCK', 'description': 'Specify whether to lock or unlock the document, or to override an existing lock', 'enum': ['UNLOCK', 'OVERRIDE', 'LOCK']}}, 'required': ['mode']}}}, 'required': True}, 'responses': {'default': {'description': 'Lock/Unlock specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}, '423': {'description': 'Document locked', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'elementID': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the element'}, 'elementName': {'type': 'string', 'description': 'Name of the element'}, 'elementType': {'type': 'string', 'description': 'Type of the element', 'enum': ['document', 'folder']}, 'lockedUntil': {'type': 'integer', 'format': 'int64', 'description': 'Until when the element is locked'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'ID of the user who locked the element.'}, 'userName': {'type': 'string', 'description': 'Username of the user who locked the element.'}}}}}}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
move_document = {'tags': ['documents/v1'], 'summary': 'Move document to a different folder (PUBLIC)', 'description': '', 'operationId': 'moveDocument', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to move', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'newFolderID': {'type': 'int', 'description': 'The ID of the parent folder to move this document to', 'minimum': 1}}}}}, 'required': True}, 'responses': {'default': {'description': 'Move document to a different folder', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}, '423': {'description': 'Document locked', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'elementID': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the element'}, 'elementName': {'type': 'string', 'description': 'Name of the element'}, 'elementType': {'type': 'string', 'description': 'Type of the element', 'enum': ['document', 'folder']}, 'lockedUntil': {'type': 'integer', 'format': 'int64', 'description': 'Until when the element is locked'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'ID of the user who locked the element.'}, 'userName': {'type': 'string', 'description': 'Username of the user who locked the element.'}}}}}}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
revoke_document_access = {'tags': ['documents/v1'], 'summary': 'Revoke specified explicit access from document (PUBLIC)', 'description': '', 'operationId': 'revokeDocumentAccess', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'Document ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'accessID', 'in': 'path', 'description': 'Access ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Revoke specified explicit access from document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'level': {'type': 'string', 'description': 'What access level was granted', 'enum': ['none', 'folder', 'read', 'write']}, 'subject': {'oneOf': [{'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, {'allOf': [{'type': 'object', 'description': 'Who has access (group/user)', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}]}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
revoke_document_access_by_path = {'tags': ['documents/v1'], 'summary': 'Revoke specified explicit access from document (PUBLIC)', 'description': '', 'operationId': 'revokeDocumentAccessByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path from customer root (if not specified, this returns the root)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'accessID', 'in': 'path', 'description': 'Access ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to fetch from (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Revoke specified explicit access from document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'level': {'type': 'string', 'description': 'What access level was granted', 'enum': ['none', 'folder', 'read', 'write']}, 'subject': {'oneOf': [{'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, {'allOf': [{'type': 'object', 'description': 'Who has access (group/user)', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}]}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
search_documents = {'tags': ['documents/v1'], 'summary': 'Search for specific documents (PUBLIC)', 'description': '', 'operationId': 'searchDocuments', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'id': {'type': 'list', 'description': 'ID of documents to match', 'items': {'type': 'int', 'description': 'ID of documents to match'}, 'uniqueItems': True}, 'userID': {'type': 'list', 'description': 'Restrict search to documents associated with any of these users.', 'items': {'type': 'int', 'description': 'Restrict search to documents associated with any of these users.'}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which user fields will be used for searching for documents associated to userID field.', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which user fields will be used for searching for documents associated to userID field.', 'enum': ['ownedByUser', 'lastUpdatedByUser', 'lockedByUser', 'all']}, 'uniqueItems': True}, 'accessMode': {'type': 'list', 'description': 'Match these access modes', 'items': {'type': 'str', 'description': 'Match these access modes', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'uniqueItems': True}, 'state': {'type': 'list', 'description': 'The status of the documents to match', 'items': {'type': 'str', 'description': 'The status of the documents to match', 'enum': ['draft', 'published', 'discarded']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Start of time search period'}, 'endTimestamp': {'type': 'int', 'description': 'End of time search period'}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'TimeMatchStrategy to define how to match startTimestamp and endTimestamp with fields.', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'createdTimestamp', 'description': 'TimeFieldStrategy to define which timestamp field(s) to match.', 'items': {'type': 'str', 'default': 'createdTimestamp', 'description': 'TimeFieldStrategy to define which timestamp field(s) to match.', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'A set of keywords matched against documents based on the set KeywordFieldStrategy and KeywordMatchStrategy.', 'items': {'type': 'str', 'description': 'A set of keywords matched against documents based on the set KeywordFieldStrategy and KeywordMatchStrategy.'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'KeywordMatchStrategy to define how to match keywords with fields.', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'KeywordFieldStrategy to define which document field(s) to match.', 'items': {'type': 'str', 'default': 'all', 'description': 'KeywordFieldStrategy to define which document field(s) to match.', 'enum': ['name', 'labels', 'all']}, 'uniqueItems': True}, 'labels': {'type': 'list', 'description': 'Match documents with any of these labels', 'items': {'type': 'str', 'description': 'Match documents with any of these labels'}, 'uniqueItems': True}, 'folderID': {'type': 'list', 'description': 'Search for documents within any of these folders. Use folderID=0 to search root folders.', 'items': {'type': 'int', 'description': 'Search for documents within any of these folders. Use folderID=0 to search root folders.'}, 'uniqueItems': True}, 'recursive': {'type': 'bool', 'default': True, 'description': 'Search all subfolders below selected folders'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['type', 'state', 'parentFolder', 'customer', 'name', 'created', 'lastUpdated', 'published', 'publishDue', 'owner', 'lastUpdatedByUser', 'approved', 'period', 'periodFrom', 'approvedByUser', 'assignedToUser', '-type', '-state', '-parentFolder', '-customer', '-name', '-created', '-lastUpdated', '-published', '-publishDue', '-owner', '-lastUpdatedByUser', '-approved', '-period', '-periodFrom', '-approvedByUser', '-assignedToUser']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'id': {'type': 'list', 'description': 'ID of documents to match', 'items': {'type': 'int', 'description': 'ID of documents to match'}, 'uniqueItems': True}, 'userID': {'type': 'list', 'description': 'Restrict search to documents associated with any of these users.', 'items': {'type': 'int', 'description': 'Restrict search to documents associated with any of these users.'}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which user fields will be used for searching for documents associated to userID field.', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which user fields will be used for searching for documents associated to userID field.', 'enum': ['ownedByUser', 'lastUpdatedByUser', 'lockedByUser', 'all']}, 'uniqueItems': True}, 'accessMode': {'type': 'list', 'description': 'Match these access modes', 'items': {'type': 'str', 'description': 'Match these access modes', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'uniqueItems': True}, 'state': {'type': 'list', 'description': 'The status of the documents to match', 'items': {'type': 'str', 'description': 'The status of the documents to match', 'enum': ['draft', 'published', 'discarded']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Start of time search period'}, 'endTimestamp': {'type': 'int', 'description': 'End of time search period'}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'TimeMatchStrategy to define how to match startTimestamp and endTimestamp with fields.', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'createdTimestamp', 'description': 'TimeFieldStrategy to define which timestamp field(s) to match.', 'items': {'type': 'str', 'default': 'createdTimestamp', 'description': 'TimeFieldStrategy to define which timestamp field(s) to match.', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'A set of keywords matched against documents based on the set KeywordFieldStrategy and KeywordMatchStrategy.', 'items': {'type': 'str', 'description': 'A set of keywords matched against documents based on the set KeywordFieldStrategy and KeywordMatchStrategy.'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'KeywordMatchStrategy to define how to match keywords with fields.', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'KeywordFieldStrategy to define which document field(s) to match.', 'items': {'type': 'str', 'default': 'all', 'description': 'KeywordFieldStrategy to define which document field(s) to match.', 'enum': ['name', 'labels', 'all']}, 'uniqueItems': True}, 'labels': {'type': 'list', 'description': 'Match documents with any of these labels', 'items': {'type': 'str', 'description': 'Match documents with any of these labels'}, 'uniqueItems': True}, 'folderID': {'type': 'list', 'description': 'Search for documents within any of these folders. Use folderID=0 to search root folders.', 'items': {'type': 'int', 'description': 'Search for documents within any of these folders. Use folderID=0 to search root folders.'}, 'uniqueItems': True}, 'recursive': {'type': 'bool', 'default': True, 'description': 'Search all subfolders below selected folders'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['type', 'state', 'parentFolder', 'customer', 'name', 'created', 'lastUpdated', 'published', 'publishDue', 'owner', 'lastUpdatedByUser', 'approved', 'period', 'periodFrom', 'approvedByUser', 'assignedToUser', '-type', '-state', '-parentFolder', '-customer', '-name', '-created', '-lastUpdated', '-published', '-publishDue', '-owner', '-lastUpdatedByUser', '-approved', '-period', '-periodFrom', '-approvedByUser', '-assignedToUser']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search for specific documents', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
set_current_user_document_watch_status = {'tags': ['documents/v1'], 'summary': 'Change current user watcher status for document. Requires read access to the document. (PUBLIC)', 'description': '', 'operationId': 'setCurrentUserDocumentWatchStatus', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'watch': {'type': 'bool', 'description': 'If true, enable an explicit watcher for the current user for the target document. If false, add an explicit negation for the current user.'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Change current user watcher status for document. Requires read access to the document.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'element': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'status': {'type': 'string', 'description': "This status reflects the current state of the currentuser for the current document or folder. If the currentuser is not a watcher for this document, this will return 'none'.", 'enum': ['user', 'group', 'inherited', 'negated', 'none']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}, 'watcherID': {'type': 'string', 'format': 'uuid', 'description': 'If currentuser is a watcher, this points to the ID of the closed watcher entry. Returns null if currentuser is not a watcher.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
set_current_user_document_watch_status_by_path = {'tags': ['documents/v1'], 'summary': 'Change current user watcher status for document. Requires read access to the document. (PUBLIC)', 'description': '', 'operationId': 'setCurrentUserDocumentWatchStatusByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path to parent folder (if not specified, select document from root folder)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to lookup folder in (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'watch': {'type': 'bool', 'description': 'If true, enable an explicit watcher for the current user for the target document. If false, add an explicit negation for the current user.'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Change current user watcher status for document. Requires read access to the document.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'element': {'type': 'object', 'description': 'If currentuser is a watcher, this points to the element at which the closest watcher is defined. Returns null if currentuser is not a watcher.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The foldername or filename of this element'}, 'parentElements': {'type': 'array', 'description': 'The list of ancestor elements from this element to the document root', 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'type': {'type': 'string', 'description': 'The type of this element, document or folder', 'enum': ['folder', 'document']}}}, 'status': {'type': 'string', 'description': "This status reflects the current state of the currentuser for the current document or folder. If the currentuser is not a watcher for this document, this will return 'none'.", 'enum': ['user', 'group', 'inherited', 'negated', 'none']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['user']}}}], 'description': 'SPI UserInfo', 'required': ['type']}, {'allOf': [{'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'type': {'type': 'string', 'enum': ['group']}}}], 'description': 'SPI GroupInfo', 'required': ['type']}]}, 'watcherID': {'type': 'string', 'format': 'uuid', 'description': 'If currentuser is a watcher, this points to the ID of the closed watcher entry. Returns null if currentuser is not a watcher.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
set_document_labels = {'tags': ['documents/v1'], 'summary': 'Update labels for specified document (PUBLIC)', 'description': '', 'operationId': 'setDocumentLabels', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to set labels for', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'addLabels': {'type': 'list', 'description': 'Add these labels to existing labels. Cannot be used with setLabels.', 'items': {'type': 'str', 'description': 'Add these labels to existing labels. Cannot be used with setLabels.'}, 'uniqueItems': True}, 'removeLabels': {'type': 'list', 'description': 'Remove these labels from existing labels. Cannot be used with setLabels.', 'items': {'type': 'str', 'description': 'Remove these labels from existing labels. Cannot be used with setLabels.'}, 'uniqueItems': True}, 'setLabels': {'type': 'list', 'description': 'Overwrite existing labels with this set of labels. Cannot be used with addLabels or removeLabels.', 'items': {'type': 'str', 'description': 'Overwrite existing labels with this set of labels. Cannot be used with addLabels or removeLabels.'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update labels for specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'label': {'type': 'string', 'description': 'The label'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}, '423': {'description': 'Document locked', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'elementID': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the element'}, 'elementName': {'type': 'string', 'description': 'Name of the element'}, 'elementType': {'type': 'string', 'description': 'Type of the element', 'enum': ['document', 'folder']}, 'lockedUntil': {'type': 'integer', 'format': 'int64', 'description': 'Until when the element is locked'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'ID of the user who locked the element.'}, 'userName': {'type': 'string', 'description': 'Username of the user who locked the element.'}}}}}}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_document = {'tags': ['documents/v1'], 'summary': 'Update specified document (PUBLIC)', 'description': '', 'operationId': 'updateDocument', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'ID of document to update', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'data': {'type': 'str', 'maxLength': 2147483647, 'minLength': 1}, 'lockRequestTime': {'type': 'int', 'default': 0, 'description': 'Specify how long the document should be locked'}, 'mimeType': {'type': 'str', 'description': 'If set change document MIME type'}, 'name': {'type': 'str', 'description': 'If set change document name', 'pattern': '\\A[^\\\\\\/:*"?<>|]{1,254}\\z'}, 'notificationOptions': {'type': 'dict', 'properties': {'skip': {'type': 'bool', 'description': 'If true, skip notification for current operation.'}}}, 'text': {'type': 'str', 'description': 'Plain text document content. If set change document content'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}, '423': {'description': 'Document locked', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'elementID': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the element'}, 'elementName': {'type': 'string', 'description': 'Name of the element'}, 'elementType': {'type': 'string', 'description': 'Type of the element', 'enum': ['document', 'folder']}, 'lockedUntil': {'type': 'integer', 'format': 'int64', 'description': 'Until when the element is locked'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'ID of the user who locked the element.'}, 'userName': {'type': 'string', 'description': 'Username of the user who locked the element.'}}}}}}}}}, 'x-Argus-Required-Permissions': ['updateDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_document_access_settings = {'tags': ['documents/v1'], 'summary': 'Change access settings on specified document (PUBLIC)', 'description': "If the access mode is roleBased, user accessing the document must have appropriate role, set by administrator. If the access mode is writeRestricted, user accessing the document can read, but must have appropriate role for write, set by administrator. If the access mode is readRestricted, user accessing the document must have appropriate roles for both read and write, set by administrator. If the access mode is explicit, user accessing the document must have explicit grant by document's owner.", 'operationId': 'updateDocumentAccessSettings', 'parameters': [{'name': 'documentID', 'in': 'path', 'description': 'Document ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'accessMode': {'type': 'str', 'description': 'Specify general access mode for document/folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}}, 'required': ['accessMode']}}}, 'required': True}, 'responses': {'default': {'description': 'Change access settings on specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_document_access_settings_by_path = {'tags': ['documents/v1'], 'summary': 'Change access settings on specified document (PUBLIC)', 'description': "If the access mode is roleBased, user accessing the document must have appropriate role, set by administrator. If the access mode is writeRestricted, user accessing the document can read, but must have appropriate role for write, set by administrator. If the access mode is readRestricted, user accessing the document must have appropriate roles for both read and write, set by administrator. If the access mode is explicit, user accessing the document must have explicit grant by document's owner.", 'operationId': 'updateDocumentAccessSettingsByPath', 'parameters': [{'name': 'parentFolderPath', 'in': 'path', 'description': 'Path from customer root (if not specified, this returns the root)', 'required': True, 'schema': {'type': 'str', 'pattern': '(/.+)?'}, 'type': 'str', 'pattern': '(/.+)?'}, {'name': 'documentName', 'in': 'path', 'description': 'Document name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Customer space to fetch from (default is current users customer)', 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'accessMode': {'type': 'str', 'description': 'Specify general access mode for document/folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}}, 'required': ['accessMode']}}}, 'required': True}, 'responses': {'default': {'description': 'Change access settings on specified document', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'currentUserLockStatus': {'type': 'string', 'description': 'The lock status of this document, for the current user.', 'enum': ['unlocked', 'lockedOtherUser', 'lockedCurrentUser', 'lockedOtherUserCanOverride']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'dataSize': {'type': 'integer', 'format': 'int64', 'description': 'Size of the document content in bytes'}, 'documentType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document']}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'document'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ATTACHMENT', 'CONTROLLED_VERSION', 'UNCOMMITTED', 'LOCKED_BY_CURRENTUSER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'labels': {'type': 'array', 'description': 'Free-text labels assigned to the document', 'items': {'type': 'string', 'description': 'Free-text labels assigned to the document'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'lockedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lockedUntilTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Until when the document is locked'}, 'masterID': {'type': 'integer', 'format': 'int64', 'description': 'Points to the master document of this revision'}, 'mimeType': {'type': 'string', 'description': 'MIME type of the document content'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}, 'publishDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document must be published (due date)'}, 'publishedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the document was published'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'Revision count'}, 'sha256': {'type': 'string', 'description': 'SHA256 digest of this document'}, 'state': {'type': 'string', 'description': 'Current state of the document', 'enum': ['draft', 'published', 'discarded', 'incomplete']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}