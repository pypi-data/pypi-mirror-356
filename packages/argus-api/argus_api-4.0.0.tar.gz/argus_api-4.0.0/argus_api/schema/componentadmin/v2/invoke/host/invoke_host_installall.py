"""Autogenerated API schema"""
from argus_api import session


clear_persistent_component = {'tags': ['componentadmin/v2'], 'summary': 'Clear persistent component (INTERNAL)', 'description': '', 'operationId': 'clearPersistentComponent', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'component', 'in': 'query', 'description': 'Component name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'container', 'in': 'query', 'description': 'Container name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'waitFor', 'in': 'query', 'description': 'Wait for completion of this task (milliseconds), default is 0 (no wait)', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'Clear persistent component', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['caClearPersistence'], 'x-Argus-ApiStatus': 'INTERNAL'}
compact_persistence = {'tags': ['componentadmin/v2'], 'summary': 'Initiate persistence compaction on specified host (INTERNAL)', 'description': '', 'operationId': 'persistenceCompaction', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to initiate persistence compaction', 'properties': {'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Initiate persistence compaction on specified host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation."}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['caCompactPersistence'], 'x-Argus-ApiStatus': 'INTERNAL'}
fetch_instance_performance_data = {'tags': ['componentadmin/v2'], 'summary': 'Fetch performance data for specified instance (INTERNAL)', 'description': '', 'operationId': 'fetchInstancePerformanceData', 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance to fetch performance data from', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'waitFor', 'in': 'query', 'description': 'Wait for completion of this task (milliseconds), default is 0 (no wait)', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'Fetch performance data for specified instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'components': {'type': 'object', 'description': 'List of fetched performance data', 'items': {'type': 'object', 'description': 'List of fetched performance data', 'properties': {'componentID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of the component'}, 'componentName': {'type': 'string', 'description': 'The name of the component'}, 'metricName': {'type': 'string', 'description': 'The name of the metric (for this component)'}, 'performanceData': {'type': 'array', 'description': 'Set of performance data records', 'items': {'type': 'object', 'description': 'Set of performance data records', 'properties': {'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of the performance data record'}, 'value': {'type': 'integer', 'format': 'int64', 'description': 'Value of the performance data record'}}}}}}}, 'type': {'type': 'string', 'enum': ['FetchInstancePerformanceDataResponse']}}}], 'required': ['type']}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewComponentPerformance'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_task_response = {'tags': ['componentadmin/v2'], 'summary': 'Fetch status for specific task (INTERNAL)', 'description': '', 'operationId': 'getTaskResponse', 'parameters': [{'name': 'taskID', 'in': 'path', 'description': 'ID of the task to fetch', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}, {'name': 'waitFor', 'in': 'query', 'description': 'Wait for completion of this task (milliseconds), default is 0 (no wait)', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'Fetch status for specific task', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'oneOf': [{'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation."}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'installationTasks': {'type': 'object', 'description': 'Set of tasks to install on specified host', 'items': {'type': 'object', 'format': 'uuid', 'description': 'Set of tasks to install on specified host'}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['HostInstallAllResponse']}}}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'expiredResources': {'type': 'object', 'description': 'Set of resources with expired cache', 'items': {'type': 'object', 'description': 'Set of resources with expired cache', 'enum': ['dataStore', 'reputation', 'alarm', 'eventFilter', 'geoIP']}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['InstanceExpireCacheResponse']}}}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation."}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'components': {'type': 'object', 'description': 'List of fetched performance data', 'items': {'type': 'object', 'description': 'List of fetched performance data', 'properties': {'componentID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of the component'}, 'componentName': {'type': 'string', 'description': 'The name of the component'}, 'metricName': {'type': 'string', 'description': 'The name of the metric (for this component)'}, 'performanceData': {'type': 'array', 'description': 'Set of performance data records', 'items': {'type': 'object', 'description': 'Set of performance data records', 'properties': {'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of the performance data record'}, 'value': {'type': 'integer', 'format': 'int64', 'description': 'Value of the performance data record'}}}}}}}, 'type': {'type': 'string', 'enum': ['FetchInstancePerformanceDataResponse']}}}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'persistentComponentRecords': {'type': 'object', 'description': 'Set of listed persistent component records', 'items': {'type': 'object', 'description': 'Set of listed persistent component records', 'properties': {'componentName': {'type': 'string', 'description': 'The name of the persistent component'}, 'containerName': {'type': 'string', 'description': 'The name of the container of the persistent component'}, 'hostID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the host of the persistent component'}}}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['ListPersistentComponentsResponse']}}}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}]}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewTasks'], 'x-Argus-ApiStatus': 'INTERNAL'}
host_install_all_components = {'tags': ['componentadmin/v2'], 'summary': 'Install all instances on specified host (INTERNAL)', 'description': '', 'operationId': 'hostInstallAll', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to install all instances of the host'}}}}, 'responses': {'default': {'description': 'Install all instances on specified host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'installationTasks': {'type': 'object', 'description': 'Set of tasks to install on specified host', 'items': {'type': 'object', 'format': 'uuid', 'description': 'Set of tasks to install on specified host'}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['HostInstallAllResponse']}}}], 'required': ['type']}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['installConfigurationInstance'], 'x-Argus-ApiStatus': 'INTERNAL'}
host_restart_all_components = {'tags': ['componentadmin/v2'], 'summary': 'Restart all instances on specified host (INTERNAL)', 'description': '', 'operationId': 'hostRestartAll', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to restart all targets on the host', 'properties': {'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Restart all instances on specified host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['rebootContainer'], 'x-Argus-ApiStatus': 'INTERNAL'}
host_uninstall_all = {'tags': ['componentadmin/v2'], 'summary': 'Uninstall all instances on specified host (INTERNAL)', 'description': '', 'operationId': 'hostUninstallAll', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to uninstall all instances of the host', 'properties': {'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Uninstall all instances on specified host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['installConfigurationInstance'], 'x-Argus-ApiStatus': 'INTERNAL'}
install_instance = {'tags': ['componentadmin/v2'], 'summary': 'Install specified instance (INTERNAL)', 'description': '', 'operationId': 'instanceInstall', 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to invoke instance install', 'properties': {'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Install specified instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['installConfigurationInstance'], 'x-Argus-ApiStatus': 'INTERNAL'}
instance_expire_cache = {'tags': ['componentadmin/v2'], 'summary': 'Expire cache on resources on specified instance (INTERNAL)', 'description': '', 'operationId': 'instanceExpireCache', 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to expire data caches on components', 'properties': {'resources': {'type': 'list', 'description': 'Set of resources to expire', 'items': {'type': 'str', 'description': 'Set of resources to expire', 'enum': ['dataStore', 'reputation', 'alarm', 'eventFilter', 'geoIP', 'aggregator', 'customer', 'network', 'sensor']}, 'uniqueItems': True}, 'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Expire cache on resources on specified instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'expiredResources': {'type': 'object', 'description': 'Set of resources with expired cache', 'items': {'type': 'object', 'description': 'Set of resources with expired cache', 'enum': ['dataStore', 'reputation', 'alarm', 'eventFilter', 'geoIP']}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['InstanceExpireCacheResponse']}}}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['expireComponentCache'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_host_persistent_components = {'tags': ['componentadmin/v2'], 'summary': 'List persistent components (INTERNAL)', 'description': '', 'operationId': 'listHostPersistentComponents', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'waitFor', 'in': 'query', 'description': 'Wait for completion of this task (milliseconds), default is 0 (no wait)', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'List persistent components', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'persistentComponentRecords': {'type': 'object', 'description': 'Set of listed persistent component records', 'items': {'type': 'object', 'description': 'Set of listed persistent component records', 'properties': {'componentName': {'type': 'string', 'description': 'The name of the persistent component'}, 'containerName': {'type': 'string', 'description': 'The name of the container of the persistent component'}, 'hostID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the host of the persistent component'}}}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['ListPersistentComponentsResponse']}}}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['caClearPersistence'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_task_response = {'tags': ['componentadmin/v2'], 'summary': 'List task status (INTERNAL)', 'description': '', 'operationId': 'listTaskResponse', 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Limit response to this number of results (0 means unlimited)', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first results in the response (default is 0)', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}, {'name': 'state', 'in': 'query', 'description': 'Filter response by status', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'uniqueItems': True}], 'responses': {'default': {'description': 'List task status', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'oneOf': [{'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation."}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'installationTasks': {'type': 'object', 'description': 'Set of tasks to install on specified host', 'items': {'type': 'object', 'format': 'uuid', 'description': 'Set of tasks to install on specified host'}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['HostInstallAllResponse']}}}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'expiredResources': {'type': 'object', 'description': 'Set of resources with expired cache', 'items': {'type': 'object', 'description': 'Set of resources with expired cache', 'enum': ['dataStore', 'reputation', 'alarm', 'eventFilter', 'geoIP']}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['InstanceExpireCacheResponse']}}}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation."}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'components': {'type': 'object', 'description': 'List of fetched performance data', 'items': {'type': 'object', 'description': 'List of fetched performance data', 'properties': {'componentID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of the component'}, 'componentName': {'type': 'string', 'description': 'The name of the component'}, 'metricName': {'type': 'string', 'description': 'The name of the metric (for this component)'}, 'performanceData': {'type': 'array', 'description': 'Set of performance data records', 'items': {'type': 'object', 'description': 'Set of performance data records', 'properties': {'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of the performance data record'}, 'value': {'type': 'integer', 'format': 'int64', 'description': 'Value of the performance data record'}}}}}}}, 'type': {'type': 'string', 'enum': ['FetchInstancePerformanceDataResponse']}}}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}, {'type': 'object', 'properties': {'persistentComponentRecords': {'type': 'object', 'description': 'Set of listed persistent component records', 'items': {'type': 'object', 'description': 'Set of listed persistent component records', 'properties': {'componentName': {'type': 'string', 'description': 'The name of the persistent component'}, 'containerName': {'type': 'string', 'description': 'The name of the container of the persistent component'}, 'hostID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the host of the persistent component'}}}, 'uniqueItems': True}, 'type': {'type': 'string', 'enum': ['ListPersistentComponentsResponse']}}}], 'required': ['type']}, {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}]}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewTasks'], 'x-Argus-ApiStatus': 'INTERNAL'}
request_updated_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Request updated status of a specified host or instance (INTERNAL)', 'description': '', 'operationId': 'requestUpdatedHostStatus', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or name of the host', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to request updated host status', 'properties': {'includeComponents': {'type': 'bool', 'description': 'If true, the components will be included'}, 'instanceID': {'type': 'int', 'description': 'The ID of the instance from which to request updated status'}, 'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Request updated status of a specified host or instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation."}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getContainerStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
restart_instance = {'tags': ['componentadmin/v2'], 'summary': 'Restart specified instance (INTERNAL)', 'description': '', 'operationId': 'instanceRestart', 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to restart an instance', 'properties': {'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Restart specified instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['rebootContainer'], 'x-Argus-ApiStatus': 'INTERNAL'}
start_instance = {'tags': ['componentadmin/v2'], 'summary': 'Start specified instance (INTERNAL)', 'description': '', 'operationId': 'instanceStart', 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to start an instance', 'properties': {'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Start specified instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['initializeContainer'], 'x-Argus-ApiStatus': 'INTERNAL'}
stop_instance = {'tags': ['componentadmin/v2'], 'summary': 'Stop specified instance (INTERNAL)', 'description': '', 'operationId': 'instanceStop', 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to stop an instance', 'properties': {'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Stop specified instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['destroyContainer'], 'x-Argus-ApiStatus': 'INTERNAL'}
uninstall_instance = {'tags': ['componentadmin/v2'], 'summary': 'Uninstall specified instance (INTERNAL)', 'description': '', 'operationId': 'instanceUninstall', 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to invoke instance uninstall', 'properties': {'waitFor': {'type': 'int', 'default': 0, 'description': 'The max amount of millis to wait for a success or exception response', 'maximum': 60000}}}}}}, 'responses': {'default': {'description': 'Uninstall specified instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'completeTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was reported as completed (finished/failed).'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'exception': {'type': 'object', 'description': "If this task resulted in an exception, this contains the exception response. Only set if state is 'failed'.", 'properties': {'message': {'type': 'string', 'description': 'The message of the exception'}, 'type': {'type': 'string', 'description': 'The type of the exception'}}}, 'executingTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task started executing (as reported by the client).'}, 'host': {'type': 'object', 'description': 'The target host for this task.', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the state of this task was last updated (from the client).'}, 'operation': {'type': 'string', 'description': 'The name of the invoked operation.'}, 'requestTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this task was requested/created.'}, 'response': {'allOf': [{'type': 'object', 'description': "The response data for this task. Only set if state is 'finished'. The model of this response is defined in the request endpoint for the tasks operation.", 'discriminator': {'propertyName': 'type'}, 'properties': {'type': {'type': 'string'}}, 'required': ['type']}], 'required': ['type']}, 'state': {'type': 'string', 'description': 'The current state of this task. If state is failed/finished/timeout, the state is final.', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'taskID': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this task'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['rebootHost'], 'x-Argus-ApiStatus': 'INTERNAL'}