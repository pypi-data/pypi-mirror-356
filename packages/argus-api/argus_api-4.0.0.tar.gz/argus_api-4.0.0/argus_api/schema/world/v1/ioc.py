"""Autogenerated API schema"""
from argus_api import session


extract_ioc = {'tags': ['world/v1'], 'summary': 'Extract indicators of compromise (IOC) from a text blob (PUBLIC)', 'description': '', 'operationId': 'extractIOC', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Extract indicators of compromise (IOC) from a text blob', 'properties': {'text': {'type': 'str', 'description': 'Text from which IOC should be extracted'}}, 'required': ['text']}}}, 'required': True}, 'responses': {'default': {'description': 'Extract indicators of compromise (IOC) from a text blob', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Contains extracted indicators of comprise (IOC)', 'properties': {'fqdn': {'type': 'array', 'description': 'Extracted FQDNs', 'items': {'type': 'string', 'description': 'Extracted FQDNs'}, 'uniqueItems': True}, 'ipv4': {'type': 'array', 'description': 'Extracted IPv4 addresses', 'items': {'type': 'string', 'description': 'Extracted IPv4 addresses'}, 'uniqueItems': True}, 'ipv6': {'type': 'array', 'description': 'Extracted IPv6 addresses', 'items': {'type': 'string', 'description': 'Extracted IPv6 addresses'}, 'uniqueItems': True}, 'md5': {'type': 'array', 'description': 'Extracted MD5 hashes', 'items': {'type': 'string', 'description': 'Extracted MD5 hashes'}, 'uniqueItems': True}, 'sha1': {'type': 'array', 'description': 'Extracted SHA1 hashes', 'items': {'type': 'string', 'description': 'Extracted SHA1 hashes'}, 'uniqueItems': True}, 'sha256': {'type': 'array', 'description': 'Extracted SHA256 hashes', 'items': {'type': 'string', 'description': 'Extracted SHA256 hashes'}, 'uniqueItems': True}, 'sha512': {'type': 'array', 'description': 'Extracted SHA512 hashes', 'items': {'type': 'string', 'description': 'Extracted SHA512 hashes'}, 'uniqueItems': True}, 'url': {'type': 'array', 'description': 'Extracted URLs', 'items': {'type': 'string', 'description': 'Extracted URLs'}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['extractIOC'], 'x-Argus-ApiStatus': 'PUBLIC'}