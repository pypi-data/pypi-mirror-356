"""Autogenerated API schema"""
from argus_api import session


submission_advanced_search = {'tags': ['sampledb/v2'], 'summary': 'Advanced search for submissions (PUBLIC)', 'description': '', 'operationId': 'submissionAdvancedSearch', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request used for submission search', 'properties': {'customer': {'type': 'list', 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'items': {'type': 'str', 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'excludeFlags': {'type': 'list', 'description': 'Restrict the search to submissions not containing any of the specified flags', 'items': {'type': 'str', 'description': 'Restrict the search to submissions not containing any of the specified flags', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'fileName': {'type': 'list', 'description': 'Restrict the search to submissions with any of the file names defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the file names defined'}, 'uniqueItems': True}, 'id': {'type': 'list', 'description': 'Restrict the search to submissions with any of the IDs defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the IDs defined'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Restrict the search to submissions containing any of the specified flags', 'items': {'type': 'str', 'description': 'Restrict the search to submissions containing any of the specified flags', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'indexEndTimestamp': {'type': 'str', 'default': 'now', 'description': 'Restrict search to data before this time (epoch millis)Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'indexStartTimestamp': {'type': 'str', 'default': 'now - 1 month', 'description': 'Restrict search to data after this time (epoch millis)Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Restrict to search only in the selected keyword fields', 'items': {'type': 'str', 'default': 'all', 'description': 'Restrict to search only in the selected keyword fields', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'all', 'description': 'Whether all or any (default) of the fields must match one or more of the keywords', 'enum': ['all', 'any']}, 'keywords': {'type': 'list', 'description': 'A set of keywords to search for', 'items': {'type': 'str', 'description': 'A set of keywords to search for'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit the number of search results', 'maximum': 10000, 'minimum': 0}, 'metaData': {'type': 'list', 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'items': {'type': 'dict', 'description': 'Request used to search for sample metadata', 'properties': {'exclude': {'type': 'bool', 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'path': {'type': 'str', 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'required': {'type': 'bool', 'description': 'Whether documents matching this criteria is a requirement'}, 'value': {'type': 'list', 'description': "Values to match against the field pointed to by 'path'", 'items': {'type': 'str', 'description': "Values to match against the field pointed to by 'path'"}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'mimeType': {'type': 'list', 'description': 'Restrict the search to submissions with any of the mime types defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the mime types defined'}, 'uniqueItems': True}, 'offset': {'type': 'int', 'default': 0, 'description': 'Skip a number of search results', 'maximum': 10000, 'minimum': 0}, 'sampleSha256': {'type': 'list', 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the sample sha256s defined'}, 'uniqueItems': True}, 'sortBy': {'type': 'list', 'default': '-submittedTimestamp', 'description': 'Specify sort ordering for returned submissions', 'items': {'type': 'str', 'default': '-submittedTimestamp', 'description': 'Specify sort ordering for returned submissions', 'enum': ['fileName', 'mimeType', 'expiryTimestamp', 'observedTimestamp', 'submittedTimestamp', '-fileName', '-mimeType', '-expiryTimestamp', '-observedTimestamp', '-submittedTimestamp']}}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'subCriteria': {'type': 'list', 'description': 'Search sub criteria', 'items': {'type': 'dict', 'description': 'Request used for submission sub criteria search', 'properties': {'customer': {'type': 'list', 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'items': {'type': 'str', 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'exclude': {'type': 'bool', 'default': False, 'description': 'Whether documents matching this sub-criteria should be excluded from search results'}, 'excludeFlags': {'type': 'list', 'description': 'Restrict the search to submissions not containing any of the specified flags', 'items': {'type': 'str', 'description': 'Restrict the search to submissions not containing any of the specified flags', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'fileName': {'type': 'list', 'description': 'Restrict the search to submissions with any of the file names defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the file names defined'}, 'uniqueItems': True}, 'id': {'type': 'list', 'description': 'Restrict the search to submissions with any of the IDs defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the IDs defined'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Restrict the search to submissions containing any of the specified flags', 'items': {'type': 'str', 'description': 'Restrict the search to submissions containing any of the specified flags', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Restrict to search only in the selected keyword fields', 'items': {'type': 'str', 'default': 'all', 'description': 'Restrict to search only in the selected keyword fields', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'all', 'description': 'Whether all or any (default) of the fields must match one or more of the keywords', 'enum': ['all', 'any']}, 'keywords': {'type': 'list', 'description': 'A set of keywords to search for', 'items': {'type': 'str', 'description': 'A set of keywords to search for'}, 'uniqueItems': True}, 'metaData': {'type': 'list', 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'items': {'type': 'dict', 'description': 'Request used to search for sample metadata', 'properties': {'exclude': {'type': 'bool', 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'path': {'type': 'str', 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'required': {'type': 'bool', 'description': 'Whether documents matching this criteria is a requirement'}, 'value': {'type': 'list', 'description': "Values to match against the field pointed to by 'path'", 'items': {'type': 'str', 'description': "Values to match against the field pointed to by 'path'"}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'mimeType': {'type': 'list', 'description': 'Restrict the search to submissions with any of the mime types defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the mime types defined'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'Whether documents matching this sub-criteria is a requirement'}, 'sampleSha256': {'type': 'list', 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the sample sha256s defined'}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'timeFieldStrategy': {'type': 'list', 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'items': {'type': 'str', 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp)', 'enum': ['all', 'any']}, 'tlp': {'type': 'list', 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'items': {'type': 'str', 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'enum': ['red', 'amber', 'green', 'clear']}, 'uniqueItems': True}, 'userAgent': {'type': 'list', 'description': 'Restrict the search to submissions with any of the user agents defined', 'items': {'type': 'dict', 'description': 'The user agent request used in sample search', 'properties': {'name': {'type': 'list', 'description': 'Restrict the search to user agents with either of the defined names', 'items': {'type': 'str', 'description': 'Restrict the search to user agents with either of the defined names'}, 'uniqueItems': True}, 'version': {'type': 'list', 'description': 'Restrict the search to user agents with either of the defined versions', 'items': {'type': 'str', 'description': 'Restrict the search to user agents with either of the defined versions'}, 'uniqueItems': True}}}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'items': {'type': 'str', 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp)', 'enum': ['all', 'any']}, 'tlp': {'type': 'list', 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'items': {'type': 'str', 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'enum': ['red', 'amber', 'green', 'clear']}, 'uniqueItems': True}, 'userAgent': {'type': 'list', 'description': 'Restrict the search to submissions with any of the user agents defined', 'items': {'type': 'dict', 'description': 'The user agent request used in sample search', 'properties': {'name': {'type': 'list', 'description': 'Restrict the search to user agents with either of the defined names', 'items': {'type': 'str', 'description': 'Restrict the search to user agents with either of the defined names'}, 'uniqueItems': True}, 'version': {'type': 'list', 'description': 'Restrict the search to user agents with either of the defined versions', 'items': {'type': 'str', 'description': 'Restrict the search to user agents with either of the defined versions'}, 'uniqueItems': True}}}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Advanced search for submissions', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'A submission for a sample. Represents the observation of a sample at a customer site', 'properties': {'acl': {'type': 'array', 'description': 'List of access controls that describe explicit access given to users or groups for this submission', 'items': {'type': 'object', 'description': 'Response model for access control', 'properties': {'grantedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'grantedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time at which the explicit access was granted'}, 'subject': {'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}}}, 'uniqueItems': True}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'expiryTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the submission will be deleted'}, 'fileName': {'type': 'string', 'description': 'The filename of the sample'}, 'flags': {'type': 'array', 'description': 'The flags set on this submission', 'items': {'type': 'string', 'description': 'The flags set on this submission', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'metaData': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Meta data about the sample'}, 'description': 'Meta data about the sample'}, 'mimeType': {'type': 'string', 'description': 'The sample mime type'}, 'observedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp for when the sample was observed'}, 'sampleSha256': {'type': 'string', 'description': 'The sample this submission belongs to'}, 'submittedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp for when the submission was added'}, 'tlp': {'type': 'string', 'description': 'TLP color of the submission', 'enum': ['red', 'amber', 'green', 'clear']}, 'userAgent': {'type': 'object', 'description': 'Model used for representing a user agent', 'properties': {'name': {'type': 'string', 'description': 'The name of the user agent'}, 'version': {'type': 'string', 'description': 'The version of the user agent'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSampleSubmission'], 'x-Argus-ApiStatus': 'PUBLIC'}
submission_simple_search = {'tags': ['sampledb/v2'], 'summary': 'Simple search for submissions (PUBLIC)', 'description': '', 'operationId': 'submissionSimpleSearch', 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Number of results to skip', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': "Fields to sort the results by. Prefix with '-' to sort descending", 'schema': {'type': 'list', 'default': '-observedTimestamp', 'enum': ['fileName', 'mimeType', 'expiryTimestamp', 'observedTimestamp', 'submittedTimestamp', '-fileName', '-mimeType', '-expiryTimestamp', '-observedTimestamp', '-submittedTimestamp'], 'items': {'type': 'string'}}, 'type': 'list', 'default': '-observedTimestamp', 'enum': ['fileName', 'mimeType', 'expiryTimestamp', 'observedTimestamp', 'submittedTimestamp', '-fileName', '-mimeType', '-expiryTimestamp', '-observedTimestamp', '-submittedTimestamp'], 'items': {'type': 'string'}}, {'name': 'keywords', 'in': 'query', 'description': 'A set of keywords to search for', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywordFieldStrategy', 'in': 'query', 'description': 'Which fields to search on', 'schema': {'type': 'list', 'default': 'all', 'items': {'type': 'str', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}, 'uniqueItems': True}, 'type': 'list', 'default': 'all', 'items': {'type': 'str', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}, 'uniqueItems': True}, {'name': 'keywordMatchStrategy', 'in': 'query', 'description': 'Whether the keywords must match all or any of the keyword fields', 'schema': {'type': 'str', 'default': 'any', 'enum': ['all', 'any']}, 'type': 'str', 'default': 'any', 'enum': ['all', 'any']}, {'name': 'indexStartTimestamp', 'in': 'query', 'description': 'Restrict search to data after this time. Timestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp. See the general integration guide for more details', 'schema': {'type': 'str', 'default': 'now - 1 month'}, 'type': 'str', 'default': 'now - 1 month'}, {'name': 'indexEndTimestamp', 'in': 'query', 'description': 'Restrict search to data before this time. Timestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp. See the general integration guide for more details', 'schema': {'type': 'str', 'default': 'now'}, 'type': 'str', 'default': 'now'}], 'responses': {'default': {'description': 'Simple search for submissions', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'A submission for a sample. Represents the observation of a sample at a customer site', 'properties': {'acl': {'type': 'array', 'description': 'List of access controls that describe explicit access given to users or groups for this submission', 'items': {'type': 'object', 'description': 'Response model for access control', 'properties': {'grantedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'grantedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time at which the explicit access was granted'}, 'subject': {'type': 'object', 'description': 'SPI SubjectInfo', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}}}, 'uniqueItems': True}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'expiryTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the submission will be deleted'}, 'fileName': {'type': 'string', 'description': 'The filename of the sample'}, 'flags': {'type': 'array', 'description': 'The flags set on this submission', 'items': {'type': 'string', 'description': 'The flags set on this submission', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'metaData': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Meta data about the sample'}, 'description': 'Meta data about the sample'}, 'mimeType': {'type': 'string', 'description': 'The sample mime type'}, 'observedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp for when the sample was observed'}, 'sampleSha256': {'type': 'string', 'description': 'The sample this submission belongs to'}, 'submittedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp for when the submission was added'}, 'tlp': {'type': 'string', 'description': 'TLP color of the submission', 'enum': ['red', 'amber', 'green', 'clear']}, 'userAgent': {'type': 'object', 'description': 'Model used for representing a user agent', 'properties': {'name': {'type': 'string', 'description': 'The name of the user agent'}, 'version': {'type': 'string', 'description': 'The version of the user agent'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSampleSubmission'], 'x-Argus-ApiStatus': 'PUBLIC'}
submission_statistics = {'tags': ['sampledb/v2'], 'summary': 'Aggregation for Submission statistics (INTERNAL)', 'description': '', 'operationId': 'submissionStatistics', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Parent request for statistics for a set of Submissions', 'properties': {'customer': {'type': 'list', 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'items': {'type': 'str', 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'excludeFlags': {'type': 'list', 'description': 'Restrict the search to submissions not containing any of the specified flags', 'items': {'type': 'str', 'description': 'Restrict the search to submissions not containing any of the specified flags', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'fileName': {'type': 'list', 'description': 'Restrict the search to submissions with any of the file names defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the file names defined'}, 'uniqueItems': True}, 'groupBy': {'type': 'list', 'description': 'The fields by which to group statistics', 'items': {'type': 'dict', 'description': 'Request to instruct the service by which field(s) to group Submission statistics', 'properties': {'field': {'type': 'str', 'description': 'The field by which to group Submissions when generating statistics', 'enum': ['customer', 'fileName', 'sampleSha256', 'mimeType', 'tlp', 'metaData']}, 'limit': {'type': 'int', 'default': 25, 'description': 'The maximum number of distinct categories for the given group field for which to generate statistics', 'minimum': 1}, 'metaDataField': {'type': 'str', 'description': "If the statistics should be grouped by a MetaData-related field, the that metadata subfield needs to be specified here. This metadata-field is ignored if the GroupByField is not set to 'metadata'"}}, 'required': ['field']}}, 'id': {'type': 'list', 'description': 'Restrict the search to submissions with any of the IDs defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the IDs defined'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Restrict the search to submissions containing any of the specified flags', 'items': {'type': 'str', 'description': 'Restrict the search to submissions containing any of the specified flags', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'indexEndTimestamp': {'type': 'str', 'default': 'now', 'description': 'Restrict search to data before this time (epoch millis)Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies.'}, 'indexStartTimestamp': {'type': 'str', 'default': 'now - 1 month', 'description': 'Restrict search to data after this time (epoch millis)Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies.'}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Restrict to search only in the selected keyword fields', 'items': {'type': 'str', 'default': 'all', 'description': 'Restrict to search only in the selected keyword fields', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'all', 'description': 'Whether all or any (default) of the fields must match one or more of the keywords', 'enum': ['all', 'any']}, 'keywords': {'type': 'list', 'description': 'A set of keywords to search for', 'items': {'type': 'str', 'description': 'A set of keywords to search for'}, 'uniqueItems': True}, 'metaData': {'type': 'list', 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'items': {'type': 'dict', 'description': 'Request used to search for sample metadata', 'properties': {'exclude': {'type': 'bool', 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'path': {'type': 'str', 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'required': {'type': 'bool', 'description': 'Whether documents matching this criteria is a requirement'}, 'value': {'type': 'list', 'description': "Values to match against the field pointed to by 'path'", 'items': {'type': 'str', 'description': "Values to match against the field pointed to by 'path'"}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'mimeType': {'type': 'list', 'description': 'Restrict the search to submissions with any of the mime types defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the mime types defined'}, 'uniqueItems': True}, 'sampleSha256': {'type': 'list', 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the sample sha256s defined'}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'statistics': {'type': 'list', 'description': 'The numerical fields for which to generate metrics', 'items': {'type': 'dict', 'description': "Request for statistics for a set of Submission's numerical fields", 'properties': {'field': {'type': 'str', 'description': 'The Submission field for which we want statistics', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'name': {'type': 'str', 'description': 'The name for this aggregation. Must be unique for the parent statistics request', 'pattern': '^[a-zA-Z0-9_-]+$'}}, 'required': ['field', 'name']}}, 'subCriteria': {'type': 'list', 'description': 'Search sub criteria', 'items': {'type': 'dict', 'description': 'Request used for submission sub criteria search', 'properties': {'customer': {'type': 'list', 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'items': {'type': 'str', 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'exclude': {'type': 'bool', 'default': False, 'description': 'Whether documents matching this sub-criteria should be excluded from search results'}, 'excludeFlags': {'type': 'list', 'description': 'Restrict the search to submissions not containing any of the specified flags', 'items': {'type': 'str', 'description': 'Restrict the search to submissions not containing any of the specified flags', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'fileName': {'type': 'list', 'description': 'Restrict the search to submissions with any of the file names defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the file names defined'}, 'uniqueItems': True}, 'id': {'type': 'list', 'description': 'Restrict the search to submissions with any of the IDs defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the IDs defined'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Restrict the search to submissions containing any of the specified flags', 'items': {'type': 'str', 'description': 'Restrict the search to submissions containing any of the specified flags', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Restrict to search only in the selected keyword fields', 'items': {'type': 'str', 'default': 'all', 'description': 'Restrict to search only in the selected keyword fields', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'all', 'description': 'Whether all or any (default) of the fields must match one or more of the keywords', 'enum': ['all', 'any']}, 'keywords': {'type': 'list', 'description': 'A set of keywords to search for', 'items': {'type': 'str', 'description': 'A set of keywords to search for'}, 'uniqueItems': True}, 'metaData': {'type': 'list', 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'items': {'type': 'dict', 'description': 'Request used to search for sample metadata', 'properties': {'exclude': {'type': 'bool', 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'path': {'type': 'str', 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'required': {'type': 'bool', 'description': 'Whether documents matching this criteria is a requirement'}, 'value': {'type': 'list', 'description': "Values to match against the field pointed to by 'path'", 'items': {'type': 'str', 'description': "Values to match against the field pointed to by 'path'"}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'mimeType': {'type': 'list', 'description': 'Restrict the search to submissions with any of the mime types defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the mime types defined'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'Whether documents matching this sub-criteria is a requirement'}, 'sampleSha256': {'type': 'list', 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'items': {'type': 'str', 'description': 'Restrict the search to submissions with any of the sample sha256s defined'}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'timeFieldStrategy': {'type': 'list', 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'items': {'type': 'str', 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp)', 'enum': ['all', 'any']}, 'tlp': {'type': 'list', 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'items': {'type': 'str', 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'enum': ['red', 'amber', 'green', 'clear']}, 'uniqueItems': True}, 'userAgent': {'type': 'list', 'description': 'Restrict the search to submissions with any of the user agents defined', 'items': {'type': 'dict', 'description': 'The user agent request used in sample search', 'properties': {'name': {'type': 'list', 'description': 'Restrict the search to user agents with either of the defined names', 'items': {'type': 'str', 'description': 'Restrict the search to user agents with either of the defined names'}, 'uniqueItems': True}, 'version': {'type': 'list', 'description': 'Restrict the search to user agents with either of the defined versions', 'items': {'type': 'str', 'description': 'Restrict the search to user agents with either of the defined versions'}, 'uniqueItems': True}}}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'items': {'type': 'str', 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp)', 'enum': ['all', 'any']}, 'timeline': {'type': 'list', 'description': 'The timestamp fields for which to generate statistics', 'items': {'type': 'dict', 'description': 'Request for statistics for Submissions that will be used for creating a histogram by resolution', 'properties': {'field': {'type': 'str', 'description': 'The timestamp field against which to filter', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'includeEmpty': {'type': 'bool', 'default': False, 'description': 'Whether to return temporal buckets for the entire range regardless of whether they contain values'}, 'name': {'type': 'str', 'description': 'The name for this aggregation. Must be unique for the parent statistics request', 'pattern': '^[a-zA-Z0-9_-]+$'}, 'resolution': {'type': 'str', 'description': 'If set, the temporal resolution by which to sub-aggregate the range metric i.e. by hour, day, week, month, or year', 'enum': ['hour', 'day', 'week', 'month', 'quarter']}}, 'required': ['field', 'name', 'resolution']}}, 'tlp': {'type': 'list', 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'items': {'type': 'str', 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'enum': ['red', 'amber', 'green', 'clear']}, 'uniqueItems': True}, 'userAgent': {'type': 'list', 'description': 'Restrict the search to submissions with any of the user agents defined', 'items': {'type': 'dict', 'description': 'The user agent request used in sample search', 'properties': {'name': {'type': 'list', 'description': 'Restrict the search to user agents with either of the defined names', 'items': {'type': 'str', 'description': 'Restrict the search to user agents with either of the defined names'}, 'uniqueItems': True}, 'version': {'type': 'list', 'description': 'Restrict the search to user agents with either of the defined versions', 'items': {'type': 'str', 'description': 'Restrict the search to user agents with either of the defined versions'}, 'uniqueItems': True}}}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Aggregation for Submission statistics', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Container for submission statistics on data stored by the Sample Service', 'properties': {'buckets': {'type': 'array', 'description': 'Submission metric buckets below this level, contains SubmissionMetricRecords', 'items': {'type': 'object', 'description': 'Container for submission statistics on data stored by the Sample Service', 'properties': {'buckets': {'type': 'array', 'description': 'Submission metric buckets below this level, contains SubmissionMetricRecords', 'items': []}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'The number of documents contained within this record sharing the same data'}, 'group': {'type': 'object', 'description': 'Metadata for submission statistics aggregation container', 'properties': {'displayName': {'type': 'string', 'description': "The aggregation container's displayName, like customer name.Populate with 'identifier' if there's no display name."}, 'identifier': {'type': 'string', 'description': "The aggregation container's ID, e.g. customer ID or sample SHA256."}, 'metaDataField': {'type': 'string', 'description': 'If the aggregation is grouped by metaDataField, this is used to show which field was used'}, 'shortName': {'type': 'string', 'description': "The aggregation container's shortName, like customer short name. Populating with 'identifier' if there's no short name."}, 'type': {'type': 'string', 'description': "The aggregation container's type.", 'enum': ['customer', 'fileName', 'sampleSha256', 'mimeType', 'tlp', 'metaData']}}}, 'statistics': {'type': 'array', 'description': 'Statistics metrics for the requested fields. Will only be populated in leafs', 'items': {'type': 'object', 'description': 'Statistics for a given numerical field for set of matching documents', 'properties': {'field': {'type': 'string', 'description': 'The field for the metrics we want statistics for, as submitted in the request', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'max': {'type': 'integer', 'format': 'int64', 'description': 'The maximum field value amongst the documents used to calculate these metrics'}, 'min': {'type': 'integer', 'format': 'int64', 'description': 'The minimum field value amongst the documents used to calculate these metrics'}, 'name': {'type': 'string', 'description': 'The unique identifying name for this metric as submitted in the request'}}}}, 'timeline': {'type': 'array', 'description': 'Timestamp metrics for the requested fields. Will only be populated in leafs', 'items': {'type': 'object', 'description': 'Metric representing the statistics for Submission that will be used for creating a histogram', 'properties': {'buckets': {'type': 'array', 'description': 'Buckets are sorted in ascending order based on the timestamp field', 'items': {'type': 'object', 'description': 'A timestamp histogram bucket', 'properties': {'count': {'type': 'integer', 'format': 'int64', 'description': 'The number of documents whose field was used for this bucket'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp for the histogram bucket'}}}}, 'field': {'type': 'string', 'description': 'The timestamp field against which to filter as submitted in the request', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'name': {'type': 'string', 'description': 'The unique identifying name for this metric as submitted in the request'}}}}}}}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'The number of documents contained within this record sharing the same data'}, 'group': {'type': 'object', 'description': 'Metadata for submission statistics aggregation container', 'properties': {'displayName': {'type': 'string', 'description': "The aggregation container's displayName, like customer name.Populate with 'identifier' if there's no display name."}, 'identifier': {'type': 'string', 'description': "The aggregation container's ID, e.g. customer ID or sample SHA256."}, 'metaDataField': {'type': 'string', 'description': 'If the aggregation is grouped by metaDataField, this is used to show which field was used'}, 'shortName': {'type': 'string', 'description': "The aggregation container's shortName, like customer short name. Populating with 'identifier' if there's no short name."}, 'type': {'type': 'string', 'description': "The aggregation container's type.", 'enum': ['customer', 'fileName', 'sampleSha256', 'mimeType', 'tlp', 'metaData']}}}, 'statistics': {'type': 'array', 'description': 'Statistics metrics for the requested fields. Will only be populated in leafs', 'items': {'type': 'object', 'description': 'Statistics for a given numerical field for set of matching documents', 'properties': {'field': {'type': 'string', 'description': 'The field for the metrics we want statistics for, as submitted in the request', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'max': {'type': 'integer', 'format': 'int64', 'description': 'The maximum field value amongst the documents used to calculate these metrics'}, 'min': {'type': 'integer', 'format': 'int64', 'description': 'The minimum field value amongst the documents used to calculate these metrics'}, 'name': {'type': 'string', 'description': 'The unique identifying name for this metric as submitted in the request'}}}}, 'timeline': {'type': 'array', 'description': 'Timestamp metrics for the requested fields. Will only be populated in leafs', 'items': {'type': 'object', 'description': 'Metric representing the statistics for Submission that will be used for creating a histogram', 'properties': {'buckets': {'type': 'array', 'description': 'Buckets are sorted in ascending order based on the timestamp field', 'items': {'type': 'object', 'description': 'A timestamp histogram bucket', 'properties': {'count': {'type': 'integer', 'format': 'int64', 'description': 'The number of documents whose field was used for this bucket'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp for the histogram bucket'}}}}, 'field': {'type': 'string', 'description': 'The timestamp field against which to filter as submitted in the request', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'name': {'type': 'string', 'description': 'The unique identifying name for this metric as submitted in the request'}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSampleSubmission'], 'x-Argus-ApiStatus': 'INTERNAL'}