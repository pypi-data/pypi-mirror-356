{
  "openapi": "3.1.0",
  "info": {
    "title": "Argus API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.mnemonic.no"
    }
  ],
  "security": [
    {
      "ApiKeyScheme": []
    }
  ],
  "paths": {
    "/geoip/v1/country": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "List GeoIP countries (INTERNAL)",
        "description": "",
        "operationId": "listCountries",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of items to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending, supported fields are: id, countryName, countryCode)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fromID",
            "in": "query",
            "description": "Only return countries with numeric ID greater than or equal to this value",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List GeoIP countries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.geoip.Country"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewGeoIPData"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      },
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Add new country (DEV)",
        "description": "",
        "operationId": "addCountry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.request.CountryAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Add new country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.geoip.Country"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addGeoIPData"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v1/location": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "List locations (INTERNAL)",
        "description": "",
        "operationId": "listLocations",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of items to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending, supported fields are: id, externalID, countryCode, regionCode)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fromID",
            "in": "query",
            "description": "Only return locations with numeric ID greater than or equal to this value",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": "0",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List locations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.geoip.GeoLocation"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewGeoIPData"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      },
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Add new location (DEV)",
        "description": "",
        "operationId": "addLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.GeoLocation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Add new location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addGeoIPData",
          "updateGeoIPData"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v1/ranges": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "List IP ranges (INTERNAL)",
        "description": "",
        "operationId": "listRanges",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of items to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending, supported fields are: id, startIP, endIP, locationID)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List IP ranges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.geoip.GeoIPRange"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewGeoIPData"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      },
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Add or update IP ranges (DEV)",
        "description": "",
        "operationId": "addOrUpdateRanges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.request.GeoIPRangeRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Add or update IP ranges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.geoip.GeoIPRange"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addGeoIPData",
          "updateGeoIPData"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v1/region": {
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Add new region (DEV)",
        "description": "",
        "operationId": "addRegion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.Region"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Add new region",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.geoip.Region"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addGeoIPData",
          "updateGeoIPData"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v1/country/{id}": {
      "put": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Update an existing country (DEV)",
        "description": "",
        "operationId": "updateCountry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Country ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.request.CountryUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Update an existing country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.geoip.Country"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "updateGeoIPData"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v1/country/search": {
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Find GeoIP countries (INTERNAL)",
        "description": "",
        "operationId": "searchCountries",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.request.CountrySearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Find GeoIP countries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.geoip.Country"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewGeoIPData"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/geoip/v1/location/{id}": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Lookup location (INTERNAL)",
        "description": "",
        "operationId": "getLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Location ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Lookup location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewGeoIPData"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/geoip/v1/location/search": {
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Find locations (INTERNAL)",
        "description": "",
        "operationId": "searchLocations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.request.LocationSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Find locations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.geoip.GeoLocation"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewGeoIPData"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/geoip/v1/ranges/search": {
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Find IP ranges (INTERNAL)",
        "description": "",
        "operationId": "findRanges",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.request.IPRangeSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Find IP ranges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.geoip.GeoIPRange"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewGeoIPData"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/geoip/v1/ranges/{ip}": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Lookup IP range (INTERNAL)",
        "description": "",
        "operationId": "lookupIP",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "description": "IP-address that has to be covered by the range",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Lookup IP range",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.geoip.GeoIPRange"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation failed",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewGeoIPData"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/geoip/v2/asn/{asnOrIP}": {
      "get": {
        "tags": [
          "geoip/v2"
        ],
        "summary": "Fetch an autonomous system by ASN or IP (DEV)",
        "description": "",
        "operationId": "getAutonomousSystem",
        "parameters": [
          {
            "name": "asnOrIP",
            "in": "path",
            "description": "The ASN or IP of the autonomous system to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Fetch an autonomous system by ASN or IP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAutonomousSystems"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v2/asn/{asnOrIP}/networks": {
      "get": {
        "tags": [
          "geoip/v2"
        ],
        "summary": "Fetch autonomous system networks for a single autonomous system by ASN or IP (DEV)",
        "description": "",
        "operationId": "getAutonomousSystemNetworks",
        "parameters": [
          {
            "name": "asnOrIP",
            "in": "path",
            "description": "Identifier of the AS",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of returned networks",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip the first $offset networks",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Fetch autonomous system networks for a single autonomous system by ASN or IP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAutonomousSystems"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v2/asn/networks": {
      "get": {
        "tags": [
          "geoip/v2"
        ],
        "summary": "Search for autonomous system networks with query parameters (DEV)",
        "description": "",
        "operationId": "listAutonomousSystemNetworks",
        "parameters": [
          {
            "name": "asn",
            "in": "query",
            "description": "Only return networks matching the given ASNs",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "ip",
            "in": "query",
            "description": "Only return networks where one of the provided IPs belongs to the network",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of returned networks",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip the first $offset networks",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "If true include networks marked as deleted",
            "schema": {
              "type": "boolean",
              "default": "false",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the returned entries. Prefix with '-' to sort descending",
            "schema": {
              "type": "array",
              "default": "ip",
              "enum": [
                "asn",
                "ip",
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "-asn",
                "-ip",
                "-createdTimestamp",
                "-lastUpdatedTimestamp",
                "-deletedTimestamp"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Search for autonomous system networks with query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAutonomousSystems"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v2/asn": {
      "get": {
        "tags": [
          "geoip/v2"
        ],
        "summary": "Search for autonomous system with query parameters (DEV)",
        "description": "",
        "operationId": "listAutonomousSystems",
        "parameters": [
          {
            "name": "asn",
            "in": "query",
            "description": "Only return AS matching the given ASNs",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of returned AS",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip the first $offset AS",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "If true include AS marked as deleted",
            "schema": {
              "type": "boolean",
              "default": "false",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the returned entries. Prefix with '-' to sort descending",
            "schema": {
              "type": "array",
              "default": "asn",
              "enum": [
                "asn",
                "name",
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "-asn",
                "-name",
                "-createdTimestamp",
                "-lastUpdatedTimestamp",
                "-deletedTimestamp"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Search for autonomous system with query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAutonomousSystems"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v2/asn/networks/search": {
      "post": {
        "tags": [
          "geoip/v2"
        ],
        "summary": "Search for autonomous system networks with an AutonomousSystemNetworkSearchRequest (DEV)",
        "description": "",
        "operationId": "searchAutonomousSystemNetworks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.v2.request.AutonomousSystemNetworkSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Search for autonomous system networks with an AutonomousSystemNetworkSearchRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAutonomousSystems"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/geoip/v2/asn/search": {
      "post": {
        "tags": [
          "geoip/v2"
        ],
        "summary": "Search for autonomous systems with an AutonomousSystemSearchRequest (DEV)",
        "description": "",
        "operationId": "searchAutonomousSystems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.v2.request.AutonomousSystemSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Search for autonomous systems with an AutonomousSystemSearchRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAutonomousSystems"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    }
  },
  "components": {
    "schemas": {
      "no.mnemonic.jargus.model.geoip.Country": {
        "type": "object",
        "description": "Contains basic data about a country.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "countryName": {
            "type": "string",
            "description": "The name of the country."
          },
          "countryCode": {
            "type": "string",
            "description": "The two-letter country-code."
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when this country was last updated."
          },
          "flags": {
            "type": "array",
            "description": "Flags assigned to the object.",
            "items": {
              "type": "string",
              "description": "Flags assigned to the object.",
              "enum": [
                "DELETED",
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "flag": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          }
        }
      },
      "no.mnemonic.services.geoip.spi.request.CountryAddRequest": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "The two-letter country-code",
            "maxLength": 2,
            "minLength": 2
          },
          "countryName": {
            "type": "string",
            "description": "The name of the country",
            "maxLength": 100,
            "minLength": 0
          }
        },
        "required": [
          "countryCode",
          "countryName"
        ]
      },
      "no.mnemonic.jargus.model.geoip.GeoLocation": {
        "type": "object",
        "description": "Location is a subunit of a region. It contains data about the location and also the region and country it belongs to.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "extID": {
            "type": "integer",
            "format": "int32",
            "description": "The external ID of the location (0 if not set)."
          },
          "countryCode": {
            "type": "string",
            "description": "The two-letter code of the country where this location is in."
          },
          "locationName": {
            "type": "string",
            "description": "The name of the the location."
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when this location was last updated."
          },
          "flags": {
            "type": "array",
            "description": "Flags assigned to the object.",
            "items": {
              "type": "string",
              "description": "Flags assigned to the object.",
              "enum": [
                "deleted",
                "disabled"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.jargus.model.geoip.GeoIPRange": {
        "type": "object",
        "description": "Combines IP-address range (from- and to-address) with country and location data.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "range": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.net.IPRange"
          },
          "countryCode": {
            "type": "string",
            "description": "The two-letter code of the country where this IP-range is located."
          },
          "locationID": {
            "type": "integer",
            "format": "int64",
            "description": "The location ID associated with this IP-range."
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when this IP-range was last updated."
          },
          "flags": {
            "type": "array",
            "description": "Flags assigned to the object.",
            "items": {
              "type": "string",
              "description": "Flags assigned to the object.",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Geographic latitude of the spot where this IP-range is located (0.0 if not set)."
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Geographic longitude of the spot where this IP-range is located (0.0 if not set)."
          }
        }
      },
      "no.mnemonic.jargus.net.IPAddress": {
        "type": "object",
        "properties": {
          "host": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "public": {
            "type": "boolean"
          },
          "ipv6": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "maskBits": {
            "type": "integer",
            "format": "int32"
          },
          "multicast": {
            "type": "boolean"
          },
          "address": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "no.mnemonic.jargus.net.IPRange": {
        "type": "object",
        "properties": {
          "fromAddress": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.net.IPAddress"
          },
          "toAddress": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.net.IPAddress"
          }
        }
      },
      "no.mnemonic.services.geoip.spi.request.GeoIPRangeRequest": {
        "type": "object",
        "description": "Request to add or update IP-address range",
        "properties": {
          "fromAddress": {
            "type": "string",
            "description": "The lower end of the IP-address range (inclusive)."
          },
          "toAddress": {
            "type": "string",
            "description": "The upper end of the IP-address range (inclusive)."
          },
          "locationID": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the location associated with the IP-address range."
          }
        }
      },
      "no.mnemonic.jargus.model.geoip.Region": {
        "type": "object",
        "description": "Region is a subunit of a country. It contains data about the region and also the country it belongs to.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "countryCode": {
            "type": "string",
            "description": "The two-letter code of the country where this region is in."
          },
          "regionCode": {
            "type": "string",
            "description": "The code of the region."
          },
          "regionName": {
            "type": "string",
            "description": "The name of the region."
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when this region was last updated."
          },
          "flags": {
            "type": "array",
            "description": "Flags assigned to the object.",
            "items": {
              "type": "string",
              "description": "Flags assigned to the object.",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "minLocationID": {
            "type": "integer",
            "format": "int64"
          },
          "maxLocationID": {
            "type": "integer",
            "format": "int64"
          },
          "flag": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          }
        }
      },
      "no.mnemonic.services.geoip.spi.request.CountryUpdateRequest": {
        "type": "object",
        "properties": {
          "countryName": {
            "type": "string",
            "description": "The name of the country",
            "maxLength": 100,
            "minLength": 0
          }
        },
        "required": [
          "countryName"
        ]
      },
      "no.mnemonic.services.geoip.spi.request.CountrySearchRequest": {
        "type": "object",
        "description": "Request to search for countries",
        "properties": {
          "fromID": {
            "type": "integer",
            "format": "int32",
            "description": "Only return countries with IDs greater than or equal to this ID.",
            "minimum": 0
          },
          "includeFlags": {
            "type": "array",
            "description": "A set of included enumerated flags of the searched countries.",
            "items": {
              "type": "string",
              "description": "A set of included enumerated flags of the searched countries.",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "A set of excluded enumerated flags of the searched countries.",
            "items": {
              "type": "string",
              "description": "A set of excluded enumerated flags of the searched countries.",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "If true, also include countries marked as deleted."
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Max number of results.",
            "minimum": 0
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Skip the first (offset) objects. By default, return result from first object.",
            "minimum": 0
          },
          "sortBy": {
            "type": "array",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
            "items": {
              "type": "string",
              "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
              "enum": [
                "id",
                "countryName",
                "countryCode",
                "-id",
                "-countryName",
                "-countryCode"
              ]
            }
          }
        }
      },
      "no.mnemonic.services.geoip.spi.request.LocationSearchRequest": {
        "type": "object",
        "description": "Request to search for locations",
        "properties": {
          "country": {
            "type": "array",
            "description": "Only return locations from these countries (by country ID or two-letter code).",
            "items": {
              "type": "string",
              "description": "Only return locations from these countries (by country ID or two-letter code)."
            },
            "uniqueItems": true
          },
          "extID": {
            "type": "array",
            "description": "Only return locations bound to these external IDs.",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "Only return locations bound to these external IDs."
            },
            "uniqueItems": true
          },
          "fromID": {
            "type": "integer",
            "format": "int64",
            "description": "Only return locations with IDs greater than or equal to this ID.",
            "minimum": 0
          },
          "includeFlags": {
            "type": "array",
            "description": "A set of included enumerated flags of the searched locations.",
            "items": {
              "type": "string",
              "description": "A set of included enumerated flags of the searched locations.",
              "enum": [
                "deleted",
                "disabled",
                "withoutExtID"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "A set of excluded enumerated flags of the searched locations.",
            "items": {
              "type": "string",
              "description": "A set of excluded enumerated flags of the searched locations.",
              "enum": [
                "deleted",
                "disabled",
                "withoutExtID"
              ]
            },
            "uniqueItems": true
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "If true, also include locations marked as deleted."
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Search for locations having lastUpdatedTimestamp greater than or equal to this timestamp."
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Search for locations having lastUpdatedTimestamp lower than or equal to this timestamp."
          },
          "countTimeout": {
            "type": "integer",
            "format": "int32",
            "default": -1,
            "description": "Max wait in seconds for the count query to run. Set the value to -1 to skip counting (count will be returned -1). Set the value to 0 to execute the count query as long as the service allows, max allowed timeout value is 30 (seconds), default value is -1.",
            "maximum": 30,
            "minimum": -1
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Max number of results.",
            "minimum": 0
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Skip the first (offset) objects. By default, return result from first object.",
            "minimum": 0
          },
          "sortBy": {
            "type": "array",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
            "items": {
              "type": "string",
              "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
              "enum": [
                "id",
                "externalID",
                "countryCode",
                "regionCode",
                "-id",
                "-externalID",
                "-countryCode",
                "-regionCode"
              ]
            }
          }
        }
      },
      "no.mnemonic.services.geoip.spi.request.IPRangeSearchRequest": {
        "type": "object",
        "description": "Request to search for IP-address ranges",
        "properties": {
          "country": {
            "type": "array",
            "description": "Only return ranges from these countries (by country ID or two-letter code).",
            "items": {
              "type": "string",
              "description": "Only return ranges from these countries (by country ID or two-letter code)."
            },
            "uniqueItems": true
          },
          "regionID": {
            "type": "array",
            "description": "Only return ranges from these regions (by region ID).",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "Only return ranges from these regions (by region ID)."
            },
            "uniqueItems": true
          },
          "locationID": {
            "type": "array",
            "description": "Only return ranges from these locations (by location ID).",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "Only return ranges from these locations (by location ID)."
            },
            "uniqueItems": true
          },
          "rangeID": {
            "type": "array",
            "description": "Only return specific ranges (by ID).",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "Only return specific ranges (by ID)."
            },
            "uniqueItems": true
          },
          "ipAddress": {
            "type": "array",
            "description": "Only return ranges which cover any of these IP-addresses. [format:ip]",
            "items": {
              "type": "string",
              "description": "Only return ranges which cover any of these IP-addresses."
            },
            "uniqueItems": true,
            "x-Argus-Format": "ip"
          },
          "addressFamily": {
            "type": "string",
            "description": "Only return ranges for this address family range (ipv4 or ipv6).",
            "enum": [
              "IPv4",
              "IPv6"
            ]
          },
          "includeFlags": {
            "type": "array",
            "description": "A set of included enumerated flags of the searched ranges.",
            "items": {
              "type": "string",
              "description": "A set of included enumerated flags of the searched ranges.",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "A set of excluded enumerated flags of the searched ranges.",
            "items": {
              "type": "string",
              "description": "A set of excluded enumerated flags of the searched ranges.",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "If true, also include ranges marked as deleted."
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Search for ranges having lastUpdatedTimestamp greater than or equal to this timestamp."
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Search for ranges having lastUpdatedTimestamp less than or equal to this timestamp."
          },
          "countTimeout": {
            "type": "integer",
            "format": "int32",
            "default": -1,
            "description": "Max wait in seconds for the count query to run. Set the value to -1 to skip counting (count will be returned -1). Set the value to 0 to execute the count query as long as the service allows, max allowed timeout value is 30 (seconds), default value is -1.",
            "maximum": 30,
            "minimum": -1
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Max number of results.",
            "minimum": 0
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Skip the first (offset) objects. By default, return result from first object.",
            "minimum": 0
          },
          "sortBy": {
            "type": "array",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
            "items": {
              "type": "string",
              "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
              "enum": [
                "id",
                "startIP",
                "endIP",
                "locationID",
                "-id",
                "-startIP",
                "-endIP",
                "-locationID"
              ]
            }
          },
          "startIPAddress": {
            "type": "array",
            "description": "Only return ranges where the range start address matches one of these IP-addresses. [format:ip]",
            "items": {
              "type": "string",
              "description": "Only return ranges where the range start address matches one of these IP-addresses."
            },
            "uniqueItems": true,
            "x-Argus-Format": "ip"
          },
          "fromIP": {
            "type": "string",
            "description": "Only return ranges where the range start address is greater than or equal to this IP-address. [format:ip]",
            "x-Argus-Format": "ip"
          },
          "toIP": {
            "type": "string",
            "description": "Only return ranges where the range start address is less than or equal to this IP-address. [format:ip]",
            "x-Argus-Format": "ip"
          }
        }
      },
      "no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse": {
        "type": "object",
        "description": "Response model representing an autonomous system",
        "properties": {
          "asn": {
            "type": "integer",
            "format": "int64",
            "description": "The autonomous system number"
          },
          "name": {
            "type": "string",
            "description": "The name of the autonomous system"
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the AS was first registered in the database"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the AS was last updated/changed in the database"
          },
          "deletedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the AS was removed from the database"
          },
          "flags": {
            "type": "array",
            "description": "Flags defined for the autonomous system",
            "items": {
              "type": "string",
              "description": "Flags defined for the autonomous system",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemInfo": {
        "type": "object",
        "description": "Compact representation of an autonomous system",
        "properties": {
          "asn": {
            "type": "integer",
            "format": "int64",
            "description": "The autonomous system number"
          },
          "name": {
            "type": "string",
            "description": "The name of the autonomous system"
          }
        }
      },
      "no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse": {
        "type": "object",
        "description": "Response model representing an autonomous system network",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Argus-specific unique identifier"
          },
          "autonomousSystem": {
            "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemInfo"
          },
          "network": {
            "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.v2.response.IPNetworkResponse"
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the network was first registered in the database"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the network was last updated/changed in the database"
          },
          "deletedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the network was removed from the database"
          },
          "flags": {
            "type": "array",
            "description": "Flags defined for the autonomous system network",
            "items": {
              "type": "string",
              "description": "Flags defined for the autonomous system network",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.services.geoip.spi.v2.response.IPNetworkResponse": {
        "type": "object",
        "description": "Response model representing a network IP",
        "properties": {
          "address": {
            "type": "string",
            "description": "Start IP of the network"
          },
          "mask": {
            "type": "integer",
            "format": "int32",
            "description": "Net mask (CIDR)"
          }
        }
      },
      "no.mnemonic.services.geoip.spi.v2.request.AutonomousSystemNetworkSearchRequest": {
        "type": "object",
        "description": "Request used for autonomous system network search",
        "properties": {
          "asn": {
            "type": "array",
            "description": "Only return networks matching the given ASNs",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "Only return networks matching the given ASNs"
            },
            "uniqueItems": true
          },
          "ip": {
            "type": "array",
            "description": "Only return networks where one of the provided IPs belongs to the network [format:ip]",
            "items": {
              "type": "string",
              "description": "Only return networks where one of the provided IPs belongs to the network"
            },
            "uniqueItems": true,
            "x-Argus-Format": "ip"
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 25,
            "description": "Limit the amount of returned networks",
            "minimum": 0
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "Skip the first $offset networks",
            "minimum": 0
          },
          "includeDeleted": {
            "type": "boolean",
            "default": false,
            "description": "If true include networks marked as deleted"
          },
          "sortBy": {
            "type": "array",
            "default": "ip",
            "description": "Sort the returned entries. Prefix with '-' to sort descending",
            "items": {
              "type": "string",
              "default": "ip",
              "description": "Sort the returned entries. Prefix with '-' to sort descending",
              "enum": [
                "asn",
                "ip",
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "-asn",
                "-ip",
                "-createdTimestamp",
                "-lastUpdatedTimestamp",
                "-deletedTimestamp"
              ]
            }
          }
        }
      },
      "no.mnemonic.services.geoip.spi.v2.request.AutonomousSystemSearchRequest": {
        "type": "object",
        "description": "Request used for autonomous system search",
        "properties": {
          "asn": {
            "type": "array",
            "description": "Only return AS matching the given ASNs",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "Only return AS matching the given ASNs"
            },
            "uniqueItems": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 25,
            "description": "Limit the amount of returned AS",
            "minimum": 0
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "Skip the first $offset AS",
            "minimum": 0
          },
          "includeDeleted": {
            "type": "boolean",
            "default": false,
            "description": "If true include AS marked as deleted"
          },
          "sortBy": {
            "type": "array",
            "default": "asn",
            "description": "Sort the returned entries. Prefix with '-' to sort descending",
            "items": {
              "type": "string",
              "default": "asn",
              "description": "Sort the returned entries. Prefix with '-' to sort descending",
              "enum": [
                "asn",
                "name",
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "-asn",
                "-name",
                "-createdTimestamp",
                "-lastUpdatedTimestamp",
                "-deletedTimestamp"
              ]
            }
          }
        }
      },
      "no.mnemonic.services.argus.common.rest.model.ResultMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message text"
          },
          "messageTemplate": {
            "type": "string",
            "description": "Message template"
          },
          "type": {
            "type": "string",
            "description": "Message type",
            "enum": [
              "FIELD_ERROR",
              "ACTION_ERROR",
              "WARNING",
              "NOTIFICATION",
              "INFO"
            ]
          },
          "field": {
            "type": "string",
            "description": "Field which this message applies to"
          },
          "parameter": {
            "type": "string",
            "description": "The affected parameter"
          }
        }
      },
      "no.mnemonic.services.argus.common.rest.model.ResultStash": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "object",
            "description": "Returned results (might be an array or a single object)"
          }
        }
      },
      "ResultStash-list-no.mnemonic.jargus.model.geoip.Country": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.Country",
              "description": "Contains basic data about a country."
            }
          }
        }
      },
      "ResultStash-no.mnemonic.jargus.model.geoip.Country": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.Country",
            "description": "Contains basic data about a country."
          }
        }
      },
      "ResultStash-list-no.mnemonic.jargus.model.geoip.GeoLocation": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.GeoLocation",
              "description": "Location is a subunit of a region. It contains data about the location and also the region and country it belongs to."
            }
          }
        }
      },
      "ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.GeoLocation",
            "description": "Location is a subunit of a region. It contains data about the location and also the region and country it belongs to."
          }
        }
      },
      "ResultStash-list-no.mnemonic.jargus.model.geoip.GeoIPRange": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.GeoIPRange",
              "description": "Combines IP-address range (from- and to-address) with country and location data."
            }
          }
        }
      },
      "ResultStash-no.mnemonic.jargus.model.geoip.Region": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.Region",
            "description": "Region is a subunit of a country. It contains data about the region and also the country it belongs to."
          }
        }
      },
      "ResultStash-no.mnemonic.jargus.model.geoip.GeoIPRange": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.geoip.GeoIPRange",
            "description": "Combines IP-address range (from- and to-address) with country and location data."
          }
        }
      },
      "ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse",
            "description": "Response model representing an autonomous system"
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse",
              "description": "Response model representing an autonomous system network"
            }
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse",
              "description": "Response model representing an autonomous system"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyScheme": {
        "type": "apiKey",
        "name": "Argus-API-Key",
        "in": "header"
      }
    }
  },
  "x-ResultStash-converted": true
}