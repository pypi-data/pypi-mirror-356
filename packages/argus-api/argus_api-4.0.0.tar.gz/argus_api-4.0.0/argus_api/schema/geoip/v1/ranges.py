"""Autogenerated API schema"""
from argus_api import session


add_or_update_ranges = {'tags': ['/geoip/v1'], 'summary': 'Add or update IP ranges (DEV)', 'description': '', 'operationId': 'addOrUpdateRanges', 'requestBody': {'content': {'application/json': {'schema': {'type': 'array', 'items': {'type': 'object', 'description': 'Request to add or update IP-address range', 'properties': {'fromAddress': {'type': 'string', 'description': 'The lower end of the IP-address range (inclusive).'}, 'toAddress': {'type': 'string', 'description': 'The upper end of the IP-address range (inclusive).'}, 'locationID': {'type': 'integer', 'format': 'int64', 'description': 'The ID of the location associated with the IP-address range.'}}}}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add or update IP ranges', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Combines IP-address range (from- and to-address) with country and location data.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'range': {'type': 'object', 'properties': {'fromAddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'toAddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'countryCode': {'type': 'string', 'description': 'The two-letter code of the country where this IP-range is located.'}, 'locationID': {'type': 'integer', 'format': 'int64', 'description': 'The location ID associated with this IP-range.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this IP-range was last updated.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted']}, 'uniqueItems': True}, 'latitude': {'type': 'number', 'format': 'double', 'description': 'Geographic latitude of the spot where this IP-range is located (0.0 if not set).'}, 'longitude': {'type': 'number', 'format': 'double', 'description': 'Geographic longitude of the spot where this IP-range is located (0.0 if not set).'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addGeoIPData', 'updateGeoIPData'], 'x-Argus-ApiStatus': 'DEV'}
find_ranges = {'tags': ['/geoip/v1'], 'summary': 'Find IP ranges (INTERNAL)', 'description': '', 'operationId': 'findRanges', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to search for IP-address ranges', 'properties': {'country': {'type': 'list', 'description': 'Only return ranges from these countries (by country ID or two-letter code).', 'items': {'type': 'str', 'description': 'Only return ranges from these countries (by country ID or two-letter code).'}, 'uniqueItems': True}, 'regionID': {'type': 'list', 'description': 'Only return ranges from these regions (by region ID).', 'items': {'type': 'int', 'description': 'Only return ranges from these regions (by region ID).'}, 'uniqueItems': True}, 'locationID': {'type': 'list', 'description': 'Only return ranges from these locations (by location ID).', 'items': {'type': 'int', 'description': 'Only return ranges from these locations (by location ID).'}, 'uniqueItems': True}, 'rangeID': {'type': 'list', 'description': 'Only return specific ranges (by ID).', 'items': {'type': 'int', 'description': 'Only return specific ranges (by ID).'}, 'uniqueItems': True}, 'ipAddress': {'type': 'list', 'description': 'Only return ranges which cover any of these IP-addresses. [format:ip]', 'items': {'type': 'str', 'description': 'Only return ranges which cover any of these IP-addresses.'}, 'uniqueItems': True, 'x-Argus-Format': 'ip'}, 'addressFamily': {'type': 'str', 'description': 'Only return ranges for this address family range (ipv4 or ipv6).', 'enum': ['IPv4', 'IPv6']}, 'includeFlags': {'type': 'list', 'description': 'A set of included enumerated flags of the searched ranges.', 'items': {'type': 'str', 'description': 'A set of included enumerated flags of the searched ranges.', 'enum': ['deleted']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'A set of excluded enumerated flags of the searched ranges.', 'items': {'type': 'str', 'description': 'A set of excluded enumerated flags of the searched ranges.', 'enum': ['deleted']}, 'uniqueItems': True}, 'includeDeleted': {'type': 'bool', 'description': 'If true, also include ranges marked as deleted.'}, 'startTimestamp': {'type': 'int', 'description': 'Search for ranges having lastUpdatedTimestamp greater than or equal to this timestamp.'}, 'endTimestamp': {'type': 'int', 'description': 'Search for ranges having lastUpdatedTimestamp less than or equal to this timestamp.'}, 'countTimeout': {'type': 'int', 'default': -1, 'description': 'Max wait in seconds for the count query to run. Set the value to -1 to skip counting (count will be returned -1). Set the value to 0 to execute the count query as long as the service allows, max allowed timeout value is 30 (seconds), default value is -1.', 'maximum': 30, 'minimum': -1}, 'limit': {'type': 'int', 'description': 'Max number of results.', 'minimum': 0}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.', 'minimum': 0}, 'sortBy': {'type': 'list', 'description': "Fields to sort results by (without a sign is ascending, with '-' sign is descending).", 'items': {'type': 'str', 'description': "Fields to sort results by (without a sign is ascending, with '-' sign is descending).", 'enum': ['id', 'startIP', 'endIP', 'locationID', '-id', '-startIP', '-endIP', '-locationID']}}, 'startIPAddress': {'type': 'list', 'description': 'Only return ranges where the range start address matches one of these IP-addresses. [format:ip]', 'items': {'type': 'str', 'description': 'Only return ranges where the range start address matches one of these IP-addresses.'}, 'uniqueItems': True, 'x-Argus-Format': 'ip'}, 'fromIP': {'type': 'str', 'description': 'Only return ranges where the range start address is greater than or equal to this IP-address. [format:ip]', 'x-Argus-Format': 'ip'}, 'toIP': {'type': 'str', 'description': 'Only return ranges where the range start address is less than or equal to this IP-address. [format:ip]', 'x-Argus-Format': 'ip'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Find IP ranges', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Combines IP-address range (from- and to-address) with country and location data.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'range': {'type': 'object', 'properties': {'fromAddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'toAddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'countryCode': {'type': 'string', 'description': 'The two-letter code of the country where this IP-range is located.'}, 'locationID': {'type': 'integer', 'format': 'int64', 'description': 'The location ID associated with this IP-range.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this IP-range was last updated.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted']}, 'uniqueItems': True}, 'latitude': {'type': 'number', 'format': 'double', 'description': 'Geographic latitude of the spot where this IP-range is located (0.0 if not set).'}, 'longitude': {'type': 'number', 'format': 'double', 'description': 'Geographic longitude of the spot where this IP-range is located (0.0 if not set).'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewGeoIPData'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_ranges = {'tags': ['/geoip/v1'], 'summary': 'List IP ranges (INTERNAL)', 'description': '', 'operationId': 'listRanges', 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Max number of items to return', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'The amount of items to skip from the beginning', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': "Fields to sort results by (without a sign is ascending, with '-' sign is descending, supported fields are: id, startIP, endIP, locationID)", 'schema': {'type': 'list', 'items': {'type': 'string'}}, 'type': 'list', 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'List IP ranges', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Combines IP-address range (from- and to-address) with country and location data.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'range': {'type': 'object', 'properties': {'fromAddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'toAddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'countryCode': {'type': 'string', 'description': 'The two-letter code of the country where this IP-range is located.'}, 'locationID': {'type': 'integer', 'format': 'int64', 'description': 'The location ID associated with this IP-range.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this IP-range was last updated.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted']}, 'uniqueItems': True}, 'latitude': {'type': 'number', 'format': 'double', 'description': 'Geographic latitude of the spot where this IP-range is located (0.0 if not set).'}, 'longitude': {'type': 'number', 'format': 'double', 'description': 'Geographic longitude of the spot where this IP-range is located (0.0 if not set).'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewGeoIPData'], 'x-Argus-ApiStatus': 'INTERNAL'}
lookup_ip = {'tags': ['/geoip/v1'], 'summary': 'Lookup IP range (INTERNAL)', 'description': '', 'operationId': 'lookupIP', 'parameters': [{'name': 'ip', 'in': 'path', 'description': 'IP-address that has to be covered by the range', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Lookup IP range', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Combines IP-address range (from- and to-address) with country and location data.', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'range': {'type': 'object', 'properties': {'fromAddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'toAddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'countryCode': {'type': 'string', 'description': 'The two-letter code of the country where this IP-range is located.'}, 'locationID': {'type': 'integer', 'format': 'int64', 'description': 'The location ID associated with this IP-range.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this IP-range was last updated.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted']}, 'uniqueItems': True}, 'latitude': {'type': 'number', 'format': 'double', 'description': 'Geographic latitude of the spot where this IP-range is located (0.0 if not set).'}, 'longitude': {'type': 'number', 'format': 'double', 'description': 'Geographic longitude of the spot where this IP-range is located (0.0 if not set).'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewGeoIPData'], 'x-Argus-ApiStatus': 'INTERNAL'}