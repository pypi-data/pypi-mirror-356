"""Autogenerated API schema"""
from argus_api import session


add_notification_rule_for_current_user = {'tags': ['notifications/v2/settings'], 'summary': 'Add a case notification rule for the current user (DEV)', 'description': '', 'operationId': 'addNotificationRuleForCurrentUser', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'caseTypes': {'type': 'list', 'description': 'Specify which case types should match this rule. Default is empty (match all)', 'items': {'type': 'str', 'description': 'Specify which case types should match this rule. Default is empty (match all)', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'categories': {'type': 'list', 'description': 'Specify which categories (ID or shortname) should match this rule. Default is empty (match all)', 'items': {'type': 'str', 'description': 'Specify which categories (ID or shortname) should match this rule. Default is empty (match all)'}, 'uniqueItems': True}, 'channels': {'type': 'dict', 'properties': {'email': {'type': 'dict', 'properties': {'active': {'type': 'str', 'description': 'Specify the channel active setting this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'mobile': {'type': 'dict', 'properties': {'active': {'type': 'str', 'description': 'Specify the channel active setting this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'sms': {'type': 'dict', 'properties': {'active': {'type': 'str', 'description': 'Specify the channel active setting this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}}}, 'customers': {'type': 'list', 'description': 'Specify which customers (ID or shortname) should match this rule. Default is empty (match all)', 'items': {'type': 'str', 'description': 'Specify which customers (ID or shortname) should match this rule. Default is empty (match all)'}, 'uniqueItems': True}, 'index': {'type': 'int', 'description': 'Specify the evaluation index for this rule (0-based). Default is 0, meaning that the new rule will be evaluated first.', 'minimum': 0}, 'name': {'type': 'str', 'description': 'A name for this rule'}, 'operations': {'type': 'list', 'description': 'Specify which update operations should match this rule. Default is empty (match all)', 'items': {'type': 'str', 'description': 'Specify which update operations should match this rule. Default is empty (match all)', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'caseAddAttachment', 'caseAccessGranted']}, 'uniqueItems': True}, 'priorities': {'type': 'list', 'description': 'Specify which priorities should match this rule. Default is empty (match all)', 'items': {'type': 'str', 'description': 'Specify which priorities should match this rule. Default is empty (match all)', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'services': {'type': 'list', 'description': 'Specify which services (ID or shortname) should match this rule. Default is empty (match all)', 'items': {'type': 'str', 'description': 'Specify which services (ID or shortname) should match this rule. Default is empty (match all)'}, 'uniqueItems': True}, 'userRoles': {'type': 'list', 'description': 'Specify which user roles should match this rule. Default is empty (match all)', 'items': {'type': 'str', 'description': 'Specify which user roles should match this rule. Default is empty (match all)', 'enum': ['customer', 'tech']}, 'uniqueItems': True}}, 'required': ['channels', 'name']}}}, 'required': True}, 'responses': {'default': {'description': 'Add a case notification rule for the current user', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'caseTypes': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case types', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases for one of these case types', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'categories': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case categories', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these case categories', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}, 'channels': {'type': 'object', 'description': 'Channel settings applied by this rule to notifications matching the rule criteria', 'properties': {'email': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'mobile': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'sms': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was created.'}, 'customers': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case customers', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was deleted. Not set for non-deleted rules.'}, 'flags': {'type': 'array', 'description': 'State flags set for this rule', 'items': {'type': 'string', 'description': 'State flags set for this rule', 'enum': ['deleted', 'legacyContact', 'legacyContactEmail', 'legacyContactSMS', 'disabled']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of this rule'}, 'index': {'type': 'integer', 'format': 'int32', 'description': 'Evaluatino index of this rule, determining the evaluation order which apply to rules for a user'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was last updated.'}, 'name': {'type': 'string', 'description': 'Name of this rule'}, 'operations': {'type': 'array', 'description': 'If set, this rule will only match updates to cases for one of these events', 'items': {'type': 'string', 'description': 'If set, this rule will only match updates to cases for one of these events', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'caseAddAttachment', 'caseAccessGranted']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, this rule will only match cases with one of these priorities', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases with one of these priorities', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these services', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these services', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
delete_notification_rule_for_current_user = {'tags': ['notifications/v2/settings'], 'summary': 'Delete a case notification rule for the current user (DEV)', 'description': '', 'operationId': 'deleteNotificationRuleForCurrentUser', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete a case notification rule for the current user', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'caseTypes': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case types', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases for one of these case types', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'categories': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case categories', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these case categories', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}, 'channels': {'type': 'object', 'description': 'Channel settings applied by this rule to notifications matching the rule criteria', 'properties': {'email': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'mobile': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'sms': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was created.'}, 'customers': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case customers', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was deleted. Not set for non-deleted rules.'}, 'flags': {'type': 'array', 'description': 'State flags set for this rule', 'items': {'type': 'string', 'description': 'State flags set for this rule', 'enum': ['deleted', 'legacyContact', 'legacyContactEmail', 'legacyContactSMS', 'disabled']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of this rule'}, 'index': {'type': 'integer', 'format': 'int32', 'description': 'Evaluatino index of this rule, determining the evaluation order which apply to rules for a user'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was last updated.'}, 'name': {'type': 'string', 'description': 'Name of this rule'}, 'operations': {'type': 'array', 'description': 'If set, this rule will only match updates to cases for one of these events', 'items': {'type': 'string', 'description': 'If set, this rule will only match updates to cases for one of these events', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'caseAddAttachment', 'caseAccessGranted']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, this rule will only match cases with one of these priorities', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases with one of these priorities', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these services', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these services', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
get_notification_rule_for_current_user = {'tags': ['notifications/v2/settings'], 'summary': 'Get specified notification rule from the current user (DEV)', 'description': '', 'operationId': 'getNotificationRuleForCurrentUser', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get specified notification rule from the current user', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'caseTypes': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case types', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases for one of these case types', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'categories': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case categories', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these case categories', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}, 'channels': {'type': 'object', 'description': 'Channel settings applied by this rule to notifications matching the rule criteria', 'properties': {'email': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'mobile': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'sms': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was created.'}, 'customers': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case customers', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was deleted. Not set for non-deleted rules.'}, 'flags': {'type': 'array', 'description': 'State flags set for this rule', 'items': {'type': 'string', 'description': 'State flags set for this rule', 'enum': ['deleted', 'legacyContact', 'legacyContactEmail', 'legacyContactSMS', 'disabled']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of this rule'}, 'index': {'type': 'integer', 'format': 'int32', 'description': 'Evaluatino index of this rule, determining the evaluation order which apply to rules for a user'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was last updated.'}, 'name': {'type': 'string', 'description': 'Name of this rule'}, 'operations': {'type': 'array', 'description': 'If set, this rule will only match updates to cases for one of these events', 'items': {'type': 'string', 'description': 'If set, this rule will only match updates to cases for one of these events', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'caseAddAttachment', 'caseAccessGranted']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, this rule will only match cases with one of these priorities', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases with one of these priorities', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these services', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these services', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'User not found', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
get_notification_settings_for_current_user = {'tags': ['notifications/v2/settings'], 'summary': 'Returns the current users default notification settings (DEV)', 'description': '', 'operationId': 'getSettingsForCurrentUser', 'responses': {'default': {'description': 'Returns the current users default notification settings', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'caseDefaultSettings': {'type': 'object', 'description': 'Case notification settings', 'properties': {'email': {'type': 'object', 'description': 'Case notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'boolean', 'description': 'If true, this channel is disabled'}, 'eventType': {'type': 'array', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'array', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'verbose': {'type': 'boolean', 'description': 'If true, verbose messages are enabled for this channel'}}}, 'mobile': {'type': 'object', 'description': 'Case notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'boolean', 'description': 'If true, this channel is disabled'}, 'eventType': {'type': 'array', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'array', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'verbose': {'type': 'boolean', 'description': 'If true, verbose messages are enabled for this channel'}}}, 'sms': {'type': 'object', 'description': 'Case notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'boolean', 'description': 'If true, this channel is disabled'}, 'eventType': {'type': 'array', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'array', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'verbose': {'type': 'boolean', 'description': 'If true, verbose messages are enabled for this channel'}}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when these settings were last updated'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
list_notification_rules_for_current_user = {'tags': ['notifications/v2/settings'], 'summary': 'List the current users case notification rules (DEV)', 'description': '', 'operationId': 'listNotificationRulesForCurrentUser', 'parameters': [{'name': 'limit', 'in': 'query', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'responses': {'default': {'description': 'List the current users case notification rules', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'caseTypes': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case types', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases for one of these case types', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'categories': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case categories', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these case categories', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}, 'channels': {'type': 'object', 'description': 'Channel settings applied by this rule to notifications matching the rule criteria', 'properties': {'email': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'mobile': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'sms': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was created.'}, 'customers': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case customers', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was deleted. Not set for non-deleted rules.'}, 'flags': {'type': 'array', 'description': 'State flags set for this rule', 'items': {'type': 'string', 'description': 'State flags set for this rule', 'enum': ['deleted', 'legacyContact', 'legacyContactEmail', 'legacyContactSMS', 'disabled']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of this rule'}, 'index': {'type': 'integer', 'format': 'int32', 'description': 'Evaluatino index of this rule, determining the evaluation order which apply to rules for a user'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was last updated.'}, 'name': {'type': 'string', 'description': 'Name of this rule'}, 'operations': {'type': 'array', 'description': 'If set, this rule will only match updates to cases for one of these events', 'items': {'type': 'string', 'description': 'If set, this rule will only match updates to cases for one of these events', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'caseAddAttachment', 'caseAccessGranted']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, this rule will only match cases with one of these priorities', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases with one of these priorities', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these services', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these services', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'User not found', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
set_default_notification_settings_current_user = {'tags': ['notifications/v2/settings'], 'summary': 'Update the current users default case notification settings (DEV)', 'description': '', 'operationId': 'setDefaultCaseSettingsCurrentUser', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request for updating the users case notification settings', 'properties': {'email': {'type': 'dict', 'description': 'Specification for the notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'bool', 'description': 'If set, update the disabled state for this channel.'}, 'verbose': {'type': 'bool', 'description': 'If set, update the verbose setting for this channel'}, 'priority': {'type': 'list', 'description': 'If set, update which case priorities will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which case priorities will be notified on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'list', 'description': 'If set, update which user roles will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which user roles will be notified on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'eventType': {'type': 'list', 'description': 'If set, update which event types will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which event types will be notified on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}}}, 'mobile': {'type': 'dict', 'description': 'Specification for the notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'bool', 'description': 'If set, update the disabled state for this channel.'}, 'verbose': {'type': 'bool', 'description': 'If set, update the verbose setting for this channel'}, 'priority': {'type': 'list', 'description': 'If set, update which case priorities will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which case priorities will be notified on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'list', 'description': 'If set, update which user roles will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which user roles will be notified on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'eventType': {'type': 'list', 'description': 'If set, update which event types will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which event types will be notified on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}}}, 'sms': {'type': 'dict', 'description': 'Specification for the notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'bool', 'description': 'If set, update the disabled state for this channel.'}, 'verbose': {'type': 'bool', 'description': 'If set, update the verbose setting for this channel'}, 'priority': {'type': 'list', 'description': 'If set, update which case priorities will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which case priorities will be notified on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'list', 'description': 'If set, update which user roles will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which user roles will be notified on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'eventType': {'type': 'list', 'description': 'If set, update which event types will be notified on this channel', 'items': {'type': 'str', 'description': 'If set, update which event types will be notified on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update the current users default case notification settings', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'caseDefaultSettings': {'type': 'object', 'description': 'Case notification settings', 'properties': {'email': {'type': 'object', 'description': 'Case notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'boolean', 'description': 'If true, this channel is disabled'}, 'eventType': {'type': 'array', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'array', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'verbose': {'type': 'boolean', 'description': 'If true, verbose messages are enabled for this channel'}}}, 'mobile': {'type': 'object', 'description': 'Case notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'boolean', 'description': 'If true, this channel is disabled'}, 'eventType': {'type': 'array', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'array', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'verbose': {'type': 'boolean', 'description': 'If true, verbose messages are enabled for this channel'}}}, 'sms': {'type': 'object', 'description': 'Case notification settings for a specific notification channel', 'properties': {'disabled': {'type': 'boolean', 'description': 'If true, this channel is disabled'}, 'eventType': {'type': 'array', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to these event types will be sent on this channel', 'enum': ['created', 'updated', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications for cases of the given priority will be sent on this channel', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'userRole': {'type': 'array', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'items': {'type': 'string', 'description': 'If set, only notifications related to updates from given user roles will be sent on this channel', 'enum': ['customer', 'tech']}, 'uniqueItems': True}, 'verbose': {'type': 'boolean', 'description': 'If true, verbose messages are enabled for this channel'}}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when these settings were last updated'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
update_notification_rule_for_current_user = {'tags': ['notifications/v2/settings'], 'summary': 'Update a case notification rule for the current user (DEV)', 'description': '', 'operationId': 'updateNotificationRuleForCurrentUser', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'caseTypes': {'type': 'list', 'description': 'If set, update which case types should match this rule. Use empty set to reset to empty (match all)', 'items': {'type': 'str', 'description': 'If set, update which case types should match this rule. Use empty set to reset to empty (match all)', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'categories': {'type': 'list', 'description': 'If set, update which categories (ID or shortname) should match this rule. Use empty set to reset to empty (match all)', 'items': {'type': 'str', 'description': 'If set, update which categories (ID or shortname) should match this rule. Use empty set to reset to empty (match all)'}, 'uniqueItems': True}, 'channels': {'type': 'dict', 'properties': {'email': {'type': 'dict', 'properties': {'active': {'type': 'str', 'description': 'Specify the channel active setting this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'mobile': {'type': 'dict', 'properties': {'active': {'type': 'str', 'description': 'Specify the channel active setting this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'sms': {'type': 'dict', 'properties': {'active': {'type': 'str', 'description': 'Specify the channel active setting this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}}}, 'customers': {'type': 'list', 'description': 'If set, update which customers (ID or shortname) should match this rule. Use empty set to reset to empty (match all)', 'items': {'type': 'str', 'description': 'If set, update which customers (ID or shortname) should match this rule. Use empty set to reset to empty (match all)'}, 'uniqueItems': True}, 'disabled': {'type': 'bool', 'description': 'If set, enable/disable the rule.'}, 'index': {'type': 'int', 'description': 'If set, change the rule evaluation index for this rule (0-based). This will reorder all other rules.'}, 'name': {'type': 'str', 'description': 'If set, update the rule name'}, 'operations': {'type': 'list', 'description': 'If set, update which operations should match this rule. Use empty set to reset to empty (match all)', 'items': {'type': 'str', 'description': 'If set, update which operations should match this rule. Use empty set to reset to empty (match all)', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'caseAddAttachment', 'caseAccessGranted']}, 'uniqueItems': True}, 'priorities': {'type': 'list', 'description': 'If set, update which case priorities should match this rule. Use empty set to reset to empty (match all)', 'items': {'type': 'str', 'description': 'If set, update which case priorities should match this rule. Use empty set to reset to empty (match all)', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'services': {'type': 'list', 'description': 'If set, update which services (ID or shortname) should match this rule. Use empty set to reset to empty (match all)', 'items': {'type': 'str', 'description': 'If set, update which services (ID or shortname) should match this rule. Use empty set to reset to empty (match all)'}, 'uniqueItems': True}, 'userRoles': {'type': 'list', 'description': 'If set, update which user roles should match this rule. Use empty set to reset to empty (match all)', 'items': {'type': 'str', 'description': 'If set, update which user roles should match this rule. Use empty set to reset to empty (match all)', 'enum': ['customer', 'tech']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update a case notification rule for the current user', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'caseTypes': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case types', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases for one of these case types', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'categories': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case categories', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these case categories', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}, 'channels': {'type': 'object', 'description': 'Channel settings applied by this rule to notifications matching the rule criteria', 'properties': {'email': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'mobile': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}, 'sms': {'type': 'object', 'description': 'Mobile channel settings applied by this rule', 'properties': {'active': {'type': 'string', 'description': 'The channel activation this rule applies. If useDefault, this channel will use the users default settings.', 'enum': ['useDefault', 'enable', 'disable']}}}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was created.'}, 'customers': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these case customers', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was deleted. Not set for non-deleted rules.'}, 'flags': {'type': 'array', 'description': 'State flags set for this rule', 'items': {'type': 'string', 'description': 'State flags set for this rule', 'enum': ['deleted', 'legacyContact', 'legacyContactEmail', 'legacyContactSMS', 'disabled']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of this rule'}, 'index': {'type': 'integer', 'format': 'int32', 'description': 'Evaluatino index of this rule, determining the evaluation order which apply to rules for a user'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this rule was last updated.'}, 'name': {'type': 'string', 'description': 'Name of this rule'}, 'operations': {'type': 'array', 'description': 'If set, this rule will only match updates to cases for one of these events', 'items': {'type': 'string', 'description': 'If set, this rule will only match updates to cases for one of these events', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'caseAddAttachment', 'caseAccessGranted']}, 'uniqueItems': True}, 'priority': {'type': 'array', 'description': 'If set, this rule will only match cases with one of these priorities', 'items': {'type': 'string', 'description': 'If set, this rule will only match cases with one of these priorities', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'If set, this rule will only match cases for one of these services', 'items': {'type': 'object', 'description': 'If set, this rule will only match cases for one of these services', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}