"""Autogenerated API schema"""
from argus_api import session


get_notifications = {'tags': ['notifications/v2/notification'], 'summary': "Returns a list of current user's notifications (DEV)", 'description': '', 'operationId': 'getNotifications', 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': "Returns a list of current user's notifications", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'channels': {'type': 'array', 'description': 'Which notification channels will/was the receiving user attempted to be notified through.', 'items': {'type': 'object', 'description': 'Specifies the notification channel and whether it was a success.', 'properties': {'channel': {'type': 'string', 'description': 'Type of notification channel.', 'enum': ['sms', 'email', 'app', 'argus']}, 'state': {'type': 'string', 'description': 'State of the notification.', 'enum': ['failed', 'succeeded', 'unknown']}}}, 'uniqueItems': True}, 'context': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'Context interface which is extended for specific services.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}, {'type': 'object', 'properties': {'element': {'type': 'object', 'description': 'Model to describe a document', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Id of document'}, 'name': {'type': 'string', 'description': 'Name of document'}, 'type': {'type': 'string', 'description': 'Type of document (folder or document)', 'enum': ['folder', 'document']}}}, 'folder': {'type': 'object', 'description': 'Model to describe a document', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Id of document'}, 'name': {'type': 'string', 'description': 'Name of document'}, 'type': {'type': 'string', 'description': 'Type of document (folder or document)', 'enum': ['folder', 'document']}}}, 'dataType': {'type': 'string', 'enum': ['documentNotificationResponseContext']}}}], 'description': 'Response context for document-service related notifications', 'required': ['dataType']}, {'allOf': [{'type': 'object', 'description': 'Context interface which is extended for specific services.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}, {'type': 'object', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'object', 'format': 'int64', 'description': 'Timestamp for when the key was created'}, 'keyId': {'type': 'object', 'format': 'int32', 'description': 'Id of the personal API-key'}, 'lastUsedClientIp': {'type': 'object', 'description': 'Last client IP which used the API-key'}, 'lastUsedTimestamp': {'type': 'object', 'format': 'int64', 'description': 'Timestamp of when the key was last used. 0 if the key has never been used'}, 'prefix': {'type': 'object', 'description': 'Key prefix'}, 'user': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'validUntil': {'type': 'object', 'format': 'int64', 'description': 'Timestamp for when key expires/expired'}, 'dataType': {'type': 'string', 'enum': ['authenticationApiKeyNotificationResponseContext']}}}], 'description': 'Response context for API-key related notifications', 'required': ['dataType']}, {'allOf': [{'type': 'object', 'description': 'Context interface which is extended for specific services.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}, {'type': 'object', 'properties': {'caseID': {'type': 'object', 'format': 'int64', 'description': 'Id of the case.'}, 'category': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'The UUID of the case category.'}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Localized names for the case category.'}, 'description': 'Localized names for the case category.'}, 'shortName': {'type': 'string', 'description': 'The shortname of the case category.'}}}, 'changes': {'type': 'object', 'description': 'List of changes to the case being notified. Only required on case update events.', 'items': {'type': 'object', 'description': 'Allows us to specify which specific changes has happen to the case on an update notification.', 'properties': {'field': {'type': 'string', 'description': 'Which case filed has been changed.', 'enum': ['attachment', 'category', 'comment', 'customerReference', 'description', 'field', 'priority', 'service', 'status', 'subject', 'tag', 'type', 'watcher', 'assignedTech', 'assignedUser', 'access']}, 'newObject': {'type': 'object', 'description': 'What is the new value. If the change is removal, this is null.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}, 'previousObject': {'type': 'object', 'description': 'What is the new value. If the change is removal, this is null.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}}}}, 'customerReference': {'type': 'object', 'description': 'Customer reference for the case.'}, 'description': {'type': 'object', 'description': 'Textual description of the case. Will be sanitized (HTML).  (@SafeHTML)', 'x-safe-html': True}, 'priority': {'type': 'object', 'description': 'Current priority of the case. Required to correctly label in the notification center.', 'enum': ['low', 'medium', 'high', 'critical']}, 'service': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'The UUID of the case service entity.'}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Localized names for the case service.'}, 'description': 'Localized names for the case service.'}, 'shortName': {'type': 'string', 'description': 'The shortname of the case service.'}}}, 'status': {'type': 'object', 'description': 'Current status of the case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'object', 'description': 'Subject of the case.'}, 'type': {'type': 'object', 'description': 'Case type. Required to correctly label in the notification center.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'dataType': {'type': 'string', 'enum': ['caseNotificationResponseContext']}}}], 'description': 'Notification request context for case notifications. Used to generate notifications in the notification center.', 'required': ['dataType']}]}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for when the notification was created.'}, 'firstSeenTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for when the notification was first seen by the receiving user.'}, 'flags': {'type': 'array', 'description': 'Set of flags for the notification. Tells if the notification is seen or was suppressed.', 'items': {'type': 'string', 'description': 'Set of flags for the notification. Tells if the notification is seen or was suppressed.', 'enum': ['seen', 'suppressed']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Unique identifier for this notification.'}, 'objectCustomer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'objectID': {'type': 'string', 'description': 'The identifier for the object for which the notification transaction was generated'}, 'operation': {'type': 'string', 'description': 'What operation generated the notification', 'enum': ['authenticationEnrollmentActivated', 'authenticationApiKeyExpiring', 'authenticationApiKeyExpired', 'authenticationApiKeyIssued', 'authenticationApiKeyUnused', 'authenticationSendOpenIDProviderLink', 'authenticationSendOpenIDUnknownProviderWarning', 'caseUpdate', 'caseCreate', 'caseClosed', 'casePriorityChange', 'caseAddAttachment', 'caseAddComment', 'documentAdded', 'documentUpdated']}, 'service': {'type': 'string', 'description': 'What service generated the notification', 'enum': ['authenticationService', 'caseService', 'documentService']}, 'transactionID': {'type': 'string', 'format': 'uuid', 'description': 'Unique identifier for the parent transaction which generated this notification.'}, 'transactionUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
notification_bulk_seen = {'tags': ['notifications/v2/notification'], 'summary': 'Marks notifications as seen, either by timestamp or specified ids (DEV)', 'description': '', 'operationId': 'notificationBulkSeen', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Allows current user to set Notifications to seen state', 'properties': {'endTimestamp': {'type': 'int', 'description': 'Timestamp on the day until which to mark notifications as seen. Defaults to time of request.'}, 'notificationIDs': {'type': 'list', 'description': 'UUID of notifications to mark as seen. If empty or null, all are set to seen.', 'items': {'type': 'str', 'description': 'UUID of notifications to mark as seen. If empty or null, all are set to seen.'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Marks notifications as seen, either by timestamp or specified ids', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response to marking User notifications as seen', 'properties': {'seenCount': {'type': 'integer', 'format': 'int32', 'description': 'Number of notifications marked as seen.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
notification_seen = {'tags': ['notifications/v2/notification'], 'summary': 'Marks a single notification as seen (DEV)', 'description': '', 'operationId': 'notificationSeen', 'parameters': [{'name': 'notificationID', 'in': 'path', 'description': 'Notification ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Marks a single notification as seen', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response to marking User notifications as seen', 'properties': {'seenCount': {'type': 'integer', 'format': 'int32', 'description': 'Number of notifications marked as seen.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}
search_notifications = {'tags': ['notifications/v2/notification'], 'summary': "Returns a list of current user's notifications matching the search criteria (DEV)", 'description': '', 'operationId': 'searchNotifications', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Allows current user to search for received notifications.', 'properties': {'channels': {'type': 'list', 'description': 'Restrict search to return notifications which was attempted to send in at least one off the specified channels. Defaults to no channel restrictions.', 'items': {'type': 'str', 'description': 'Restrict search to return notifications which was attempted to send in at least one off the specified channels. Defaults to no channel restrictions.', 'enum': ['email', 'argus', 'app', 'sms']}, 'uniqueItems': True}, 'endTimestamp': {'type': 'int', 'description': 'Restrict search to return notifications created before the timestamp. Defaults to now.'}, 'excludeFlags': {'type': 'list', 'description': 'Restrict search to return notifications which have the specified flags unset.', 'items': {'type': 'str', 'description': 'Restrict search to return notifications which have the specified flags unset.', 'enum': ['seen', 'suppressed']}, 'uniqueItems': True}, 'includeContext': {'type': 'bool', 'default': False, 'description': 'Specify if service specific notification context should be included'}, 'includeFlags': {'type': 'list', 'description': 'Restrict search to return notifications which have the specified flags set.', 'items': {'type': 'str', 'description': 'Restrict search to return notifications which have the specified flags set.', 'enum': ['seen', 'suppressed']}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit number of returning notifications.'}, 'objectCustomer': {'type': 'list', 'description': 'Limit to notifications generated by the specified customers. Can be a list of shortnames and/or customerIDs', 'items': {'type': 'str', 'description': 'Limit to notifications generated by the specified customers. Can be a list of shortnames and/or customerIDs'}, 'uniqueItems': True}, 'objectID': {'type': 'list', 'description': 'Limit to notification generated by the specified set of Argus objects by their IDs', 'items': {'type': 'str', 'description': 'Limit to notification generated by the specified set of Argus objects by their IDs'}, 'uniqueItems': True}, 'offset': {'type': 'int', 'default': 0, 'description': 'Offset notifications'}, 'operation': {'type': 'list', 'description': 'Limit to notifications generated by the specified Argus operations', 'items': {'type': 'str', 'description': 'Limit to notifications generated by the specified Argus operations', 'enum': ['authenticationEnrollmentActivated', 'authenticationApiKeyExpired', 'authenticationApiKeyExpiring', 'authenticationApiKeyIssued', 'authenticationApiKeyUnused', 'authenticationSendOpenIDProviderLink', 'authenticationSendOpenIDUnknownProviderWarning', 'caseUpdate', 'caseCreate', 'caseClosed', 'casePriorityChange', 'caseAddAttachment', 'caseAddComment', 'caseAccessGranted', 'documentAdded', 'documentUpdated']}, 'uniqueItems': True}, 'service': {'type': 'list', 'description': 'Limit to notifications generated by the specified Argus services.', 'items': {'type': 'str', 'description': 'Limit to notifications generated by the specified Argus services.', 'enum': ['authenticationService', 'caseService', 'documentService']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Restrict search to return notifications created after the timestamp. Defaults to no restrictions.'}, 'user': {'type': 'list', 'description': 'Restrict search to return notifications generated by specified users. Can be shortnames or userIds.', 'items': {'type': 'str', 'description': 'Restrict search to return notifications generated by specified users. Can be shortnames or userIds.'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': "Returns a list of current user's notifications matching the search criteria", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'channels': {'type': 'array', 'description': 'Which notification channels will/was the receiving user attempted to be notified through.', 'items': {'type': 'object', 'description': 'Specifies the notification channel and whether it was a success.', 'properties': {'channel': {'type': 'string', 'description': 'Type of notification channel.', 'enum': ['sms', 'email', 'app', 'argus']}, 'state': {'type': 'string', 'description': 'State of the notification.', 'enum': ['failed', 'succeeded', 'unknown']}}}, 'uniqueItems': True}, 'context': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'Context interface which is extended for specific services.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}, {'type': 'object', 'properties': {'element': {'type': 'object', 'description': 'Model to describe a document', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Id of document'}, 'name': {'type': 'string', 'description': 'Name of document'}, 'type': {'type': 'string', 'description': 'Type of document (folder or document)', 'enum': ['folder', 'document']}}}, 'folder': {'type': 'object', 'description': 'Model to describe a document', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Id of document'}, 'name': {'type': 'string', 'description': 'Name of document'}, 'type': {'type': 'string', 'description': 'Type of document (folder or document)', 'enum': ['folder', 'document']}}}, 'dataType': {'type': 'string', 'enum': ['documentNotificationResponseContext']}}}], 'description': 'Response context for document-service related notifications', 'required': ['dataType']}, {'allOf': [{'type': 'object', 'description': 'Context interface which is extended for specific services.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}, {'type': 'object', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'object', 'format': 'int64', 'description': 'Timestamp for when the key was created'}, 'keyId': {'type': 'object', 'format': 'int32', 'description': 'Id of the personal API-key'}, 'lastUsedClientIp': {'type': 'object', 'description': 'Last client IP which used the API-key'}, 'lastUsedTimestamp': {'type': 'object', 'format': 'int64', 'description': 'Timestamp of when the key was last used. 0 if the key has never been used'}, 'prefix': {'type': 'object', 'description': 'Key prefix'}, 'user': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'validUntil': {'type': 'object', 'format': 'int64', 'description': 'Timestamp for when key expires/expired'}, 'dataType': {'type': 'string', 'enum': ['authenticationApiKeyNotificationResponseContext']}}}], 'description': 'Response context for API-key related notifications', 'required': ['dataType']}, {'allOf': [{'type': 'object', 'description': 'Context interface which is extended for specific services.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}, {'type': 'object', 'properties': {'caseID': {'type': 'object', 'format': 'int64', 'description': 'Id of the case.'}, 'category': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'The UUID of the case category.'}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Localized names for the case category.'}, 'description': 'Localized names for the case category.'}, 'shortName': {'type': 'string', 'description': 'The shortname of the case category.'}}}, 'changes': {'type': 'object', 'description': 'List of changes to the case being notified. Only required on case update events.', 'items': {'type': 'object', 'description': 'Allows us to specify which specific changes has happen to the case on an update notification.', 'properties': {'field': {'type': 'string', 'description': 'Which case filed has been changed.', 'enum': ['attachment', 'category', 'comment', 'customerReference', 'description', 'field', 'priority', 'service', 'status', 'subject', 'tag', 'type', 'watcher', 'assignedTech', 'assignedUser', 'access']}, 'newObject': {'type': 'object', 'description': 'What is the new value. If the change is removal, this is null.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}, 'previousObject': {'type': 'object', 'description': 'What is the new value. If the change is removal, this is null.', 'discriminator': {'propertyName': 'dataType'}, 'properties': {'dataType': {'type': 'string'}}, 'required': ['dataType']}}}}, 'customerReference': {'type': 'object', 'description': 'Customer reference for the case.'}, 'description': {'type': 'object', 'description': 'Textual description of the case. Will be sanitized (HTML).  (@SafeHTML)', 'x-safe-html': True}, 'priority': {'type': 'object', 'description': 'Current priority of the case. Required to correctly label in the notification center.', 'enum': ['low', 'medium', 'high', 'critical']}, 'service': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'The UUID of the case service entity.'}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Localized names for the case service.'}, 'description': 'Localized names for the case service.'}, 'shortName': {'type': 'string', 'description': 'The shortname of the case service.'}}}, 'status': {'type': 'object', 'description': 'Current status of the case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'object', 'description': 'Subject of the case.'}, 'type': {'type': 'object', 'description': 'Case type. Required to correctly label in the notification center.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'dataType': {'type': 'string', 'enum': ['caseNotificationResponseContext']}}}], 'description': 'Notification request context for case notifications. Used to generate notifications in the notification center.', 'required': ['dataType']}]}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for when the notification was created.'}, 'firstSeenTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for when the notification was first seen by the receiving user.'}, 'flags': {'type': 'array', 'description': 'Set of flags for the notification. Tells if the notification is seen or was suppressed.', 'items': {'type': 'string', 'description': 'Set of flags for the notification. Tells if the notification is seen or was suppressed.', 'enum': ['seen', 'suppressed']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Unique identifier for this notification.'}, 'objectCustomer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'objectID': {'type': 'string', 'description': 'The identifier for the object for which the notification transaction was generated'}, 'operation': {'type': 'string', 'description': 'What operation generated the notification', 'enum': ['authenticationEnrollmentActivated', 'authenticationApiKeyExpiring', 'authenticationApiKeyExpired', 'authenticationApiKeyIssued', 'authenticationApiKeyUnused', 'authenticationSendOpenIDProviderLink', 'authenticationSendOpenIDUnknownProviderWarning', 'caseUpdate', 'caseCreate', 'caseClosed', 'casePriorityChange', 'caseAddAttachment', 'caseAddComment', 'documentAdded', 'documentUpdated']}, 'service': {'type': 'string', 'description': 'What service generated the notification', 'enum': ['authenticationService', 'caseService', 'documentService']}, 'transactionID': {'type': 'string', 'format': 'uuid', 'description': 'Unique identifier for the parent transaction which generated this notification.'}, 'transactionUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'DEV'}