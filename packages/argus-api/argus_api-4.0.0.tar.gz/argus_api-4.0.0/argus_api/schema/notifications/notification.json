{
  "openapi": "3.1.0",
  "info": {
    "title": "Argus API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.mnemonic.no"
    }
  ],
  "security": [
    {
      "ApiKeyScheme": []
    }
  ],
  "paths": {
    "/notifications/v1/settings/case": {
      "get": {
        "tags": [
          "notifications/v1/settings"
        ],
        "summary": "Get notification settings for current user (INTERNAL)",
        "description": "",
        "operationId": "getSettings",
        "responses": {
          "default": {
            "description": "Get notification settings for current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/notifications/v1/settings/case/app": {
      "put": {
        "tags": [
          "notifications/v1/settings"
        ],
        "summary": "Set notification settings for current user APP notification (INTERNAL)",
        "description": "",
        "operationId": "setAppSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.request.CurrentUserSetCaseAppNotificationSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Set notification settings for current user APP notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/notifications/v1/notification": {
      "post": {
        "tags": [
          "notifications/v1/notification"
        ],
        "summary": "Prepare a new notification (INTERNAL)",
        "description": "",
        "operationId": "prepareNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.request.NotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Prepare a new notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.response.NotificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "prepareNotification"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/notifications/v1/notification/{notificationID}/send": {
      "put": {
        "tags": [
          "notifications/v1/notification"
        ],
        "summary": "Send a pending notification (INTERNAL)",
        "description": "",
        "operationId": "sendNotification",
        "parameters": [
          {
            "name": "notificationID",
            "in": "path",
            "description": "Notification ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Send a pending notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.response.NotificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "prepareNotification"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/notifications/v1/device": {
      "get": {
        "tags": [
          "notifications/v1/device"
        ],
        "summary": "List current users notification device (INTERNAL)",
        "description": "",
        "operationId": "listDevices",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List current users notification device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.notification.spi.response.NotificationDevice"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "INTERNAL"
      },
      "post": {
        "tags": [
          "notifications/v1/device"
        ],
        "summary": "Enroll notification device (INTERNAL)",
        "description": "",
        "operationId": "createDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.request.NotificationDeviceEnrollRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Enroll notification device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.response.NotificationDevice"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/notifications/v1/device/{id}": {
      "delete": {
        "tags": [
          "notifications/v1/device"
        ],
        "summary": "Revoke notification device (INTERNAL)",
        "description": "",
        "operationId": "revokeDevice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of device to revoke",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Revoke notification device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.response.NotificationDevice"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/notifications/v2/settings/case/rules": {
      "get": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "List the current users case notification rules (DEV)",
        "description": "",
        "operationId": "listNotificationRulesForCurrentUser",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List the current users case notification rules",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      },
      "post": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Add a case notification rule for the current user (DEV)",
        "description": "",
        "operationId": "addNotificationRuleForCurrentUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.CreateUserCaseNotificationRuleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Add a case notification rule for the current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/user/{user}/settings/case/rules": {
      "get": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "List a users case notification rules (DEV)",
        "description": "",
        "operationId": "listNotificationRulesForOtherUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List a users case notification rules",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewNotificationSettings"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "post": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Add a case notification rule for the specified user (DEV)",
        "description": "",
        "operationId": "addNotificationRuleForOtherUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.CreateUserCaseNotificationRuleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Add a case notification rule for the specified user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/settings/case": {
      "put": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Update the current users default case notification settings (DEV)",
        "description": "",
        "operationId": "setDefaultCaseSettingsCurrentUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.SetUserCaseNotificationDefaultSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Update the current users default case notification settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.UserNotificationV2SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/user/{user}/settings/case": {
      "put": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Update the current users default case notification settings (DEV)",
        "description": "",
        "operationId": "setDefaultCaseSettingsOtherUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.SetUserCaseNotificationDefaultSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Update the current users default case notification settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.UserNotificationV2SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "updateNotificationSettings"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/settings/case/rules/{id}": {
      "get": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Get specified notification rule from the current user (DEV)",
        "description": "",
        "operationId": "getNotificationRuleForCurrentUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get specified notification rule from the current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      },
      "put": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Update a case notification rule for the current user (DEV)",
        "description": "",
        "operationId": "updateNotificationRuleForCurrentUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UpdateUserCaseNotificationRuleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Update a case notification rule for the current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      },
      "delete": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Delete a case notification rule for the current user (DEV)",
        "description": "",
        "operationId": "deleteNotificationRuleForCurrentUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Delete a case notification rule for the current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/user/{user}/settings/case/rules/{id}": {
      "get": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Get specified notification rule from the specified user (DEV)",
        "description": "",
        "operationId": "getNotificationRuleForOtherUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get specified notification rule from the specified user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User or object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewNotificationSettings"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "put": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Update a case notification rule for another user (DEV)",
        "description": "",
        "operationId": "updateNotificationRuleForOtherUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UpdateUserCaseNotificationRuleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Update a case notification rule for another user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      },
      "delete": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Delete a case notification rule for another user (DEV)",
        "description": "",
        "operationId": "deleteNotificationRuleForOtherUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Delete a case notification rule for another user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Invalid argument",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/notification": {
      "get": {
        "tags": [
          "notifications/v2/notification"
        ],
        "summary": "Returns a list of current user's notifications (DEV)",
        "description": "",
        "operationId": "getNotifications",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns a list of current user's notifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.notification.spi.v2.response.NotificationV2Response"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/notification/seen": {
      "put": {
        "tags": [
          "notifications/v2/notification"
        ],
        "summary": "Marks notifications as seen, either by timestamp or specified ids (DEV)",
        "description": "",
        "operationId": "notificationBulkSeen",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.NotificationSeenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Marks notifications as seen, either by timestamp or specified ids",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.NotificationsSeenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/notification/{notificationID}/seen": {
      "put": {
        "tags": [
          "notifications/v2/notification"
        ],
        "summary": "Marks a single notification as seen (DEV)",
        "description": "",
        "operationId": "notificationSeen",
        "parameters": [
          {
            "name": "notificationID",
            "in": "path",
            "description": "Notification ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Marks a single notification as seen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.NotificationsSeenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/notification/search": {
      "post": {
        "tags": [
          "notifications/v2/notification"
        ],
        "summary": "Returns a list of current user's notifications matching the search criteria (DEV)",
        "description": "",
        "operationId": "searchNotifications",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.NotificationV2SearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Returns a list of current user's notifications matching the search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.notification.spi.v2.response.NotificationV2Response"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/settings": {
      "get": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Returns the current users default notification settings (DEV)",
        "description": "",
        "operationId": "getSettingsForCurrentUser",
        "responses": {
          "default": {
            "description": "Returns the current users default notification settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.UserNotificationV2SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/user/{user}/settings": {
      "get": {
        "tags": [
          "notifications/v2/settings"
        ],
        "summary": "Returns the default notification settings for the specified user (DEV)",
        "description": "",
        "operationId": "getSettingsForOtherUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Returns the default notification settings for the specified user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.UserNotificationV2SettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewNotificationSettings"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/transaction": {
      "post": {
        "tags": [
          "notifications/v2/transaction"
        ],
        "summary": "Prepare a new notification transaction. This endpoint is NOT meant for users, only for applications on behalf of a user. (DEV)",
        "description": "",
        "operationId": "prepareNotificationTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.NotificationV2Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Prepare a new notification transaction. This endpoint is NOT meant for users, only for applications on behalf of a user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.PrepareNotificationTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "prepareNotification"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/transaction/{transactionID}/send": {
      "put": {
        "tags": [
          "notifications/v2/transaction"
        ],
        "summary": "Send a prepared notification transaction - generating notifications to be sent to users. This endpoint is NOT meant for users, only for applications on behalf of a user. (DEV)",
        "description": "",
        "operationId": "sendNotificationTransaction",
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "description": "Transaction ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Send a prepared notification transaction - generating notifications to be sent to users. This endpoint is NOT meant for users, only for applications on behalf of a user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.notification.spi.v2.response.SendPreparedTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "prepareNotification"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/notifications/v2/sms/deliveryreport/{identifier}": {
      "post": {
        "tags": [
          "notifications/v2/sms"
        ],
        "summary": "Receives SMS delivery report from SMS gateway. This endpoint is not meant for other clients. (DEV)",
        "description": "",
        "operationId": "receiveSMSDeliveryReport",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Receives SMS delivery report from SMS gateway. This endpoint is not meant for other clients.",
            "content": {
              "*/*": {}
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "*/*": {}
            }
          },
          "412": {
            "description": "Malformed message",
            "content": {
              "*/*": {}
            }
          }
        },
        "x-Argus-ApiStatus": "DEV"
      }
    }
  },
  "components": {
    "schemas": {
      "no.mnemonic.services.argus.common.spi.response.CustomerInfo": {
        "type": "object",
        "description": "SPI CustomerInfo",
        "properties": {
          "domain": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.DomainInfo",
            "description": "Domain that this customer belongs to."
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the response object."
          },
          "name": {
            "type": "string",
            "description": "Name of the customer."
          },
          "shortName": {
            "type": "string",
            "description": "Shortname of the customer."
          }
        }
      },
      "no.mnemonic.services.argus.common.spi.response.DomainInfo": {
        "type": "object",
        "description": "SPI DomainInfo",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the response object."
          },
          "name": {
            "type": "string",
            "description": "Name of the domain."
          }
        }
      },
      "no.mnemonic.services.argus.common.spi.response.UserInfo": {
        "type": "object",
        "description": "SPI UserInfo",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.CustomerInfo",
            "description": "The customer the subject belongs to"
          },
          "domain": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.DomainInfo",
            "description": "The subject's domain"
          },
          "flags": {
            "type": "array",
            "description": "The subject's flags",
            "items": {
              "type": "string",
              "description": "The subject's flags",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the response object."
          },
          "name": {
            "type": "string",
            "description": "The subject's name"
          },
          "shortName": {
            "type": "string",
            "description": "The subject's short name"
          },
          "type": {
            "type": "string",
            "description": "Type of the subject",
            "enum": [
              "user",
              "group"
            ],
            "readOnly": true
          }
        }
      },
      "no.mnemonic.services.notification.spi.response.UserCaseNotificationAppSettings": {
        "type": "object",
        "description": "The app notification settings set for this user.",
        "properties": {
          "priority": {
            "type": "array",
            "description": "If set, only send app notifications for cases with these priorities.",
            "items": {
              "type": "string",
              "description": "If set, only send app notifications for cases with these priorities.",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ]
            },
            "uniqueItems": true
          },
          "verbose": {
            "type": "boolean",
            "description": "If true, app notifications should be verbose."
          }
        }
      },
      "no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings": {
        "type": "object",
        "properties": {
          "appSettings": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.response.UserCaseNotificationAppSettings",
            "description": "The app notification settings set for this user."
          },
          "user": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo",
            "description": "The user which these settings apply to."
          }
        }
      },
      "no.mnemonic.services.notification.spi.request.CurrentUserSetCaseAppNotificationSettingsRequest": {
        "type": "object",
        "description": "Request to update current case notification settings for app notification",
        "properties": {
          "priority": {
            "type": "array",
            "description": "If set, only send app notifications for cases with these priorities.",
            "items": {
              "type": "string",
              "description": "If set, only send app notifications for cases with these priorities.",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ]
            },
            "uniqueItems": true
          },
          "verbose": {
            "type": "boolean",
            "description": "If set, modify verbosity setting for app notifications."
          }
        }
      },
      "no.mnemonic.services.notification.spi.response.NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the response object."
          },
          "recipients": {
            "type": "array",
            "description": "The recipients that this notification sends to",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.response.NotificationResponseRecipient"
            }
          },
          "state": {
            "type": "string",
            "description": "The state of this notification.",
            "enum": [
              "prepared",
              "sent"
            ]
          }
        }
      },
      "no.mnemonic.services.notification.spi.response.NotificationResponseRecipient": {
        "type": "object",
        "description": "The recipients that this notification sends to",
        "properties": {
          "destination": {
            "type": "string",
            "description": "The destination of this recipient (email, sms or other)"
          },
          "flags": {
            "type": "array",
            "description": "The flags of this recipient",
            "items": {
              "type": "string",
              "description": "The flags of this recipient",
              "enum": [
                "verbose"
              ]
            },
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "Name of this recipient"
          },
          "type": {
            "type": "string",
            "description": "The type of this recipient",
            "enum": [
              "email",
              "sms",
              "app"
            ]
          },
          "userID": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the user this notification is bound to, or 0 if not a user"
          }
        }
      },
      "com.fasterxml.jackson.databind.JsonNode": {
        "type": "object"
      },
      "no.mnemonic.services.notification.spi.request.NotificationRequest": {
        "type": "object",
        "description": "Request to prepare sending notifications. This is only used for API testing, and is not permitted for ordinary users.",
        "properties": {
          "attachments": {
            "type": "array",
            "description": "Attachments to process in this notification. The notification rules and destinations will determine how these are used.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.request.NotificationRequestAttachment"
            }
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/com.fasterxml.jackson.databind.JsonNode"
            },
            "description": "The notification context objects. The notification event determines which context objects are expected. Each object should be JSON serializable."
          },
          "customerID": {
            "type": "integer",
            "format": "int64",
            "description": "Set the customer context of this notification request. If not set, it should default to the current users customer.",
            "minimum": 0
          },
          "event": {
            "type": "string",
            "description": "The name of the notification event to trigger. This will determine notification behaviour and rules."
          },
          "recipients": {
            "type": "array",
            "description": "Recipients to notify, either user or non-user.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.request.NotificationRequestRecipient"
            },
            "maxItems": 2147483647,
            "minItems": 1
          }
        },
        "required": [
          "event",
          "recipients"
        ]
      },
      "no.mnemonic.services.notification.spi.request.NotificationRequestAttachment": {
        "type": "object",
        "description": "Attachment object which is part of a NotificationRequest",
        "properties": {
          "contentType": {
            "type": "string",
            "description": "MIME Content type of this attachment."
          },
          "data": {
            "type": "string"
          },
          "fileName": {
            "type": "string",
            "description": "Filename of this attachment."
          }
        },
        "required": [
          "contentType",
          "data",
          "fileName"
        ]
      },
      "no.mnemonic.services.notification.spi.request.NotificationRequestRecipient": {
        "type": "object",
        "description": "Recipient object which is part of a NotificationRequest",
        "properties": {
          "email": {
            "type": "string",
            "description": "This specifies the notification email of the recipient. Only applicable for recipients of type email, which is not connected to a user."
          },
          "format": {
            "type": "string",
            "description": "If applicable, format suggests the preferred notification format for this recipient. Defaults to brief.",
            "enum": [
              "brief",
              "verbose"
            ]
          },
          "language": {
            "type": "string",
            "description": "Type specifies the preferred notification language for this recipient. Defaults to english.",
            "enum": [
              "english",
              "norwegian"
            ]
          },
          "name": {
            "type": "string",
            "description": "This specifies the name of the recipient. Only applicable if the recipient is not referring to a user."
          },
          "phone": {
            "type": "string",
            "description": "This specifies the notification phone number of the recipient. Only applicable for recipients of type sms, which is not connected to a user."
          },
          "role": {
            "type": "string",
            "description": "This specifies the role this recipient has (why is the recipient being notified). Default is undefined.",
            "enum": [
              "serviceContact",
              "watcher",
              "copy",
              "currentUser"
            ]
          },
          "type": {
            "type": "string",
            "description": "Type specifies the preferred notification type for this recipient. Defaults to email.",
            "enum": [
              "sms",
              "email"
            ]
          },
          "userID": {
            "type": "integer",
            "format": "int64",
            "description": "If set, this ID referse to the user to notify",
            "minimum": 0
          }
        },
        "required": [
          "format",
          "language",
          "type"
        ]
      },
      "no.mnemonic.services.notification.spi.response.NotificationDevice": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "iphone",
              "android"
            ]
          }
        }
      },
      "no.mnemonic.services.notification.spi.request.NotificationDeviceEnrollRequest": {
        "type": "object",
        "description": "Request to enroll a new notification device (for push notifications) for the current user",
        "properties": {
          "name": {
            "type": "string",
            "description": "The display name of the enrolled device."
          },
          "token": {
            "type": "string",
            "description": "The notification token to enroll, to uniquely reference the device. This should be received from the notification service provider."
          },
          "type": {
            "type": "string",
            "description": "The type of device to enroll.",
            "enum": [
              "iphone",
              "android"
            ]
          }
        },
        "required": [
          "name",
          "token",
          "type"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.settings.cases.CategoryResponse": {
        "type": "object",
        "description": "If set, this rule will only match cases for one of these case categories",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "localizedName": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.settings.cases.ServiceResponse": {
        "type": "object",
        "description": "If set, this rule will only match cases for one of these services",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "localizedName": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleChannelSettingsResponse": {
        "type": "object",
        "description": "Mobile channel settings applied by this rule",
        "properties": {
          "active": {
            "type": "string",
            "description": "The channel activation this rule applies. If useDefault, this channel will use the users default settings.",
            "enum": [
              "useDefault",
              "enable",
              "disable"
            ]
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleChannelsResponse": {
        "type": "object",
        "description": "Channel settings applied by this rule to notifications matching the rule criteria",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleChannelSettingsResponse",
            "description": "Email channel settings applied by this rule"
          },
          "mobile": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleChannelSettingsResponse",
            "description": "Mobile channel settings applied by this rule"
          },
          "sms": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleChannelSettingsResponse",
            "description": "SMS channel settings applied by this rule"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse": {
        "type": "object",
        "properties": {
          "caseTypes": {
            "type": "array",
            "description": "If set, this rule will only match cases for one of these case types",
            "items": {
              "type": "string",
              "description": "If set, this rule will only match cases for one of these case types",
              "enum": [
                "securityIncident",
                "operationalIncident",
                "informational",
                "change"
              ]
            },
            "uniqueItems": true
          },
          "categories": {
            "type": "array",
            "description": "If set, this rule will only match cases for one of these case categories",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.CategoryResponse"
            },
            "uniqueItems": true
          },
          "channels": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleChannelsResponse",
            "description": "Channel settings applied by this rule to notifications matching the rule criteria"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo",
            "description": "The user that created the rule"
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when this rule was created."
          },
          "customers": {
            "type": "array",
            "description": "If set, this rule will only match cases for one of these case customers",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
            },
            "uniqueItems": true
          },
          "deletedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo",
            "description": "The user that deleted the rule. Not set for non-deleted rules."
          },
          "deletedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when this rule was deleted. Not set for non-deleted rules."
          },
          "flags": {
            "type": "array",
            "description": "State flags set for this rule",
            "items": {
              "type": "string",
              "description": "State flags set for this rule",
              "enum": [
                "deleted",
                "legacyContact",
                "legacyContactEmail",
                "legacyContactSMS",
                "disabled"
              ]
            },
            "uniqueItems": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of this rule"
          },
          "index": {
            "type": "integer",
            "format": "int32",
            "description": "Evaluatino index of this rule, determining the evaluation order which apply to rules for a user"
          },
          "lastUpdatedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo",
            "description": "The user that last updated the rule"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when this rule was last updated."
          },
          "name": {
            "type": "string",
            "description": "Name of this rule"
          },
          "operations": {
            "type": "array",
            "description": "If set, this rule will only match updates to cases for one of these events",
            "items": {
              "type": "string",
              "description": "If set, this rule will only match updates to cases for one of these events",
              "enum": [
                "caseUpdate",
                "caseCreate",
                "caseClosed",
                "caseAddAttachment",
                "caseAccessGranted"
              ]
            },
            "uniqueItems": true
          },
          "priority": {
            "type": "array",
            "description": "If set, this rule will only match cases with one of these priorities",
            "items": {
              "type": "string",
              "description": "If set, this rule will only match cases with one of these priorities",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ]
            },
            "uniqueItems": true
          },
          "services": {
            "type": "array",
            "description": "If set, this rule will only match cases for one of these services",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.ServiceResponse"
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.request.settings.cases.CreateUserCaseNotificationRuleRequest": {
        "type": "object",
        "properties": {
          "caseTypes": {
            "type": "array",
            "description": "Specify which case types should match this rule. Default is empty (match all)",
            "items": {
              "type": "string",
              "description": "Specify which case types should match this rule. Default is empty (match all)",
              "enum": [
                "securityIncident",
                "operationalIncident",
                "informational",
                "change"
              ]
            },
            "uniqueItems": true
          },
          "categories": {
            "type": "array",
            "description": "Specify which categories (ID or shortname) should match this rule. Default is empty (match all)",
            "items": {
              "type": "string",
              "description": "Specify which categories (ID or shortname) should match this rule. Default is empty (match all)"
            },
            "uniqueItems": true
          },
          "channels": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationRuleChannelsRequest",
            "description": "Define actions to apply when this rule matches"
          },
          "customers": {
            "type": "array",
            "description": "Specify which customers (ID or shortname) should match this rule. Default is empty (match all)",
            "items": {
              "type": "string",
              "description": "Specify which customers (ID or shortname) should match this rule. Default is empty (match all)"
            },
            "uniqueItems": true
          },
          "index": {
            "type": "integer",
            "format": "int32",
            "description": "Specify the evaluation index for this rule (0-based). Default is 0, meaning that the new rule will be evaluated first.",
            "minimum": 0
          },
          "name": {
            "type": "string",
            "description": "A name for this rule"
          },
          "operations": {
            "type": "array",
            "description": "Specify which update operations should match this rule. Default is empty (match all)",
            "items": {
              "type": "string",
              "description": "Specify which update operations should match this rule. Default is empty (match all)",
              "enum": [
                "caseUpdate",
                "caseCreate",
                "caseClosed",
                "caseAddAttachment",
                "caseAccessGranted"
              ]
            },
            "uniqueItems": true
          },
          "priorities": {
            "type": "array",
            "description": "Specify which priorities should match this rule. Default is empty (match all)",
            "items": {
              "type": "string",
              "description": "Specify which priorities should match this rule. Default is empty (match all)",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ]
            },
            "uniqueItems": true
          },
          "services": {
            "type": "array",
            "description": "Specify which services (ID or shortname) should match this rule. Default is empty (match all)",
            "items": {
              "type": "string",
              "description": "Specify which services (ID or shortname) should match this rule. Default is empty (match all)"
            },
            "uniqueItems": true
          },
          "userRoles": {
            "type": "array",
            "description": "Specify which user roles should match this rule. Default is empty (match all)",
            "items": {
              "type": "string",
              "description": "Specify which user roles should match this rule. Default is empty (match all)",
              "enum": [
                "customer",
                "tech"
              ]
            },
            "uniqueItems": true
          }
        },
        "required": [
          "channels",
          "name"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationRuleChannelSettingsRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "string",
            "description": "Specify the channel active setting this rule applies. If useDefault, this channel will use the users default settings.",
            "enum": [
              "useDefault",
              "enable",
              "disable"
            ]
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationRuleChannelsRequest": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationRuleChannelSettingsRequest",
            "description": "If set, change the email channel settings in this rule"
          },
          "mobile": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationRuleChannelSettingsRequest",
            "description": "If set, change the mobile channel settings in this rule"
          },
          "sms": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationRuleChannelSettingsRequest",
            "description": "If set, change the SMS channel settings in this rule"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.settings.UserNotificationV2SettingsResponse": {
        "type": "object",
        "properties": {
          "caseDefaultSettings": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationDefaultSettingsResponse",
            "description": "The default settings for case notifications"
          },
          "lastUpdatedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo",
            "description": "The user that last updated these settings"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when these settings were last updated"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationChannelSettingsResponse": {
        "type": "object",
        "description": "Case notification settings for a specific notification channel",
        "properties": {
          "disabled": {
            "type": "boolean",
            "description": "If true, this channel is disabled"
          },
          "eventType": {
            "type": "array",
            "description": "If set, only notifications related to these event types will be sent on this channel",
            "items": {
              "type": "string",
              "description": "If set, only notifications related to these event types will be sent on this channel",
              "enum": [
                "created",
                "updated",
                "closed"
              ]
            },
            "uniqueItems": true
          },
          "priority": {
            "type": "array",
            "description": "If set, only notifications for cases of the given priority will be sent on this channel",
            "items": {
              "type": "string",
              "description": "If set, only notifications for cases of the given priority will be sent on this channel",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ]
            },
            "uniqueItems": true
          },
          "userRole": {
            "type": "array",
            "description": "If set, only notifications related to updates from given user roles will be sent on this channel",
            "items": {
              "type": "string",
              "description": "If set, only notifications related to updates from given user roles will be sent on this channel",
              "enum": [
                "customer",
                "tech"
              ]
            },
            "uniqueItems": true
          },
          "verbose": {
            "type": "boolean",
            "description": "If true, verbose messages are enabled for this channel"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationDefaultSettingsResponse": {
        "type": "object",
        "description": "Case notification settings",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationChannelSettingsResponse",
            "description": "Notification settings for the email channel"
          },
          "mobile": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationChannelSettingsResponse",
            "description": "Notification settings for the mobile channel"
          },
          "sms": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationChannelSettingsResponse",
            "description": "Notification settings for the sms channel"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.request.settings.cases.SetUserCaseNotificationDefaultSettingsRequest": {
        "type": "object",
        "description": "Request for updating the users case notification settings",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationChannelSettingsRequest",
            "description": "If set, update the notification settings for the email channel"
          },
          "mobile": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationChannelSettingsRequest",
            "description": "If set, update the notification settings for the mobile channel"
          },
          "sms": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationChannelSettingsRequest",
            "description": "If set, update the notification settings for the sms channel"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationChannelSettingsRequest": {
        "type": "object",
        "description": "Specification for the notification settings for a specific notification channel",
        "properties": {
          "disabled": {
            "type": "boolean",
            "description": "If set, update the disabled state for this channel."
          },
          "verbose": {
            "type": "boolean",
            "description": "If set, update the verbose setting for this channel"
          },
          "priority": {
            "type": "array",
            "description": "If set, update which case priorities will be notified on this channel",
            "items": {
              "type": "string",
              "description": "If set, update which case priorities will be notified on this channel",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ]
            },
            "uniqueItems": true
          },
          "userRole": {
            "type": "array",
            "description": "If set, update which user roles will be notified on this channel",
            "items": {
              "type": "string",
              "description": "If set, update which user roles will be notified on this channel",
              "enum": [
                "customer",
                "tech"
              ]
            },
            "uniqueItems": true
          },
          "eventType": {
            "type": "array",
            "description": "If set, update which event types will be notified on this channel",
            "items": {
              "type": "string",
              "description": "If set, update which event types will be notified on this channel",
              "enum": [
                "created",
                "updated",
                "closed"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.services.argus.common.spi.response.GroupInfo": {
        "type": "object",
        "description": "SPI GroupInfo",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.CustomerInfo",
            "description": "The customer the subject belongs to"
          },
          "domain": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.DomainInfo",
            "description": "The subject's domain"
          },
          "flags": {
            "type": "array",
            "description": "The subject's flags",
            "items": {
              "type": "string",
              "description": "The subject's flags",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the response object."
          },
          "name": {
            "type": "string",
            "description": "The subject's name"
          },
          "shortName": {
            "type": "string",
            "description": "The subject's short name"
          },
          "type": {
            "type": "string",
            "description": "Type of the subject",
            "enum": [
              "user",
              "group"
            ],
            "readOnly": true
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.ChannelResponse": {
        "type": "object",
        "description": "Specifies the notification channel and whether it was a success.",
        "properties": {
          "channel": {
            "type": "string",
            "description": "Type of notification channel.",
            "enum": [
              "sms",
              "email",
              "app",
              "argus"
            ]
          },
          "state": {
            "type": "string",
            "description": "State of the notification.",
            "enum": [
              "failed",
              "succeeded",
              "unknown"
            ]
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.NotificationV2Response": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "Which notification channels will/was the receiving user attempted to be notified through.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.ChannelResponse"
            },
            "uniqueItems": true
          },
          "context": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.document.DocumentNotificationV2ResponseContext"
              },
              {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.authentication.AuthApiKeyNotificationV2ResponseContext"
              },
              {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.CaseNotificationV2ResponseContext"
              }
            ]
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp for when the notification was created."
          },
          "firstSeenTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp for when the notification was first seen by the receiving user."
          },
          "flags": {
            "type": "array",
            "description": "Set of flags for the notification. Tells if the notification is seen or was suppressed.",
            "items": {
              "type": "string",
              "description": "Set of flags for the notification. Tells if the notification is seen or was suppressed.",
              "enum": [
                "seen",
                "suppressed"
              ]
            },
            "uniqueItems": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for this notification."
          },
          "objectCustomer": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.CustomerInfo",
            "description": "The customer for the object for which the notification transaction was generated"
          },
          "objectID": {
            "type": "string",
            "description": "The identifier for the object for which the notification transaction was generated"
          },
          "operation": {
            "type": "string",
            "description": "What operation generated the notification",
            "enum": [
              "authenticationEnrollmentActivated",
              "authenticationApiKeyExpiring",
              "authenticationApiKeyExpired",
              "authenticationApiKeyIssued",
              "authenticationApiKeyUnused",
              "authenticationSendOpenIDProviderLink",
              "authenticationSendOpenIDUnknownProviderWarning",
              "caseUpdate",
              "caseCreate",
              "caseClosed",
              "casePriorityChange",
              "caseAddAttachment",
              "caseAddComment",
              "documentAdded",
              "documentUpdated"
            ]
          },
          "service": {
            "type": "string",
            "description": "What service generated the notification",
            "enum": [
              "authenticationService",
              "caseService",
              "documentService"
            ]
          },
          "transactionID": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the parent transaction which generated this notification."
          },
          "transactionUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo",
            "description": "User info for the user which triggered the transaction generating this notificaiton"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.context.NotificationV2ResponseContext": {
        "type": "object",
        "description": "Context interface which is extended for specific services.",
        "discriminator": {
          "propertyName": "dataType"
        },
        "properties": {
          "dataType": {
            "type": "string"
          }
        },
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.authentication.AuthApiKeyNotificationV2ResponseContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.NotificationV2ResponseContext"
          },
          {
            "type": "object",
            "properties": {
              "createdByUser": {
                "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
              },
              "createdTimestamp": {
                "type": "object",
                "format": "int64",
                "description": "Timestamp for when the key was created"
              },
              "keyId": {
                "type": "object",
                "format": "int32",
                "description": "Id of the personal API-key"
              },
              "lastUsedClientIp": {
                "type": "object",
                "description": "Last client IP which used the API-key"
              },
              "lastUsedTimestamp": {
                "type": "object",
                "format": "int64",
                "description": "Timestamp of when the key was last used. 0 if the key has never been used"
              },
              "prefix": {
                "type": "object",
                "description": "Key prefix"
              },
              "user": {
                "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
              },
              "validUntil": {
                "type": "object",
                "format": "int64",
                "description": "Timestamp for when key expires/expired"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "authenticationApiKeyNotificationResponseContext"
                ]
              }
            }
          }
        ],
        "description": "Response context for API-key related notifications",
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.CaseCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The UUID of the case category."
          },
          "localizedNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Localized names for the case category."
            },
            "description": "Localized names for the case category."
          },
          "shortName": {
            "type": "string",
            "description": "The shortname of the case category."
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.CaseChangeEventResponse": {
        "type": "object",
        "description": "Allows us to specify which specific changes has happen to the case on an update notification.",
        "properties": {
          "field": {
            "type": "string",
            "description": "Which case filed has been changed.",
            "enum": [
              "attachment",
              "category",
              "comment",
              "customerReference",
              "description",
              "field",
              "priority",
              "service",
              "status",
              "subject",
              "tag",
              "type",
              "watcher",
              "assignedTech",
              "assignedUser",
              "access"
            ]
          },
          "newObject": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse",
            "description": "What is the new value. If the change is removal, this is null."
          },
          "previousObject": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse",
            "description": "What was the previous value. If added, not changed, this is null."
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.CaseNotificationV2ResponseContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.NotificationV2ResponseContext"
          },
          {
            "type": "object",
            "properties": {
              "caseID": {
                "type": "object",
                "format": "int64",
                "description": "Id of the case."
              },
              "category": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.CaseCategory"
              },
              "changes": {
                "type": "object",
                "description": "List of changes to the case being notified. Only required on case update events.",
                "items": {
                  "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.CaseChangeEventResponse"
                }
              },
              "customerReference": {
                "type": "object",
                "description": "Customer reference for the case."
              },
              "description": {
                "type": "object",
                "description": "Textual description of the case. Will be sanitized (HTML).  (@SafeHTML)",
                "x-safe-html": true
              },
              "priority": {
                "type": "object",
                "description": "Current priority of the case. Required to correctly label in the notification center.",
                "enum": [
                  "low",
                  "medium",
                  "high",
                  "critical"
                ]
              },
              "service": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.CaseService"
              },
              "status": {
                "type": "object",
                "description": "Current status of the case.",
                "enum": [
                  "pendingCustomer",
                  "pendingSoc",
                  "pendingVendor",
                  "workingSoc",
                  "workingCustomer",
                  "pendingClose",
                  "closed"
                ]
              },
              "subject": {
                "type": "object",
                "description": "Subject of the case."
              },
              "type": {
                "type": "object",
                "description": "Case type. Required to correctly label in the notification center.",
                "enum": [
                  "securityIncident",
                  "operationalIncident",
                  "informational",
                  "change"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "caseNotificationResponseContext"
                ]
              }
            }
          }
        ],
        "description": "Notification request context for case notifications. Used to generate notifications in the notification center.",
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.CaseService": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The UUID of the case service entity."
          },
          "localizedNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Localized names for the case service."
            },
            "description": "Localized names for the case service."
          },
          "shortName": {
            "type": "string",
            "description": "The shortname of the case service."
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventAttachmentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "The UUID of the attachment."
              },
              "name": {
                "type": "object",
                "description": "The file name of the attachment."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventAttachment"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventCategoryResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "category": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.CaseCategory"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventCategory"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventCommentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "comment": {
                "type": "object",
                "description": "The comment in textual form. Will be sanitized (HTML).  (@SafeHTML)",
                "x-safe-html": true
              },
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "The UUID of the comment."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventComment"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventCustomerReferenceResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "reference": {
                "type": "object",
                "description": "Customer reference"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventCustomerReference"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventDescriptionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "object",
                "description": "Textual description of the case. Will be sanitized (HTML).  (@SafeHTML)",
                "x-safe-html": true
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventDescription"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventFieldResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "fieldName": {
                "type": "object",
                "description": "The name of the field descriptor."
              },
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "The UUID of the field descriptor."
              },
              "value": {
                "type": "object",
                "description": "Value for the field."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventField"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse": {
        "type": "object",
        "description": "What is the new value. If the change is removal, this is null.",
        "discriminator": {
          "propertyName": "dataType"
        },
        "properties": {
          "dataType": {
            "type": "string"
          }
        },
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventPriorityResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "priority": {
                "type": "object",
                "description": "Priority of the case.",
                "enum": [
                  "low",
                  "medium",
                  "high",
                  "critical"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventPriority"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventServiceResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "service": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.CaseService"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventService"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventStatusResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "object",
                "description": "Status of the case.",
                "enum": [
                  "pendingCustomer",
                  "pendingSoc",
                  "pendingVendor",
                  "workingSoc",
                  "workingCustomer",
                  "pendingClose",
                  "closed"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventStatus"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventSubjectResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "subject": {
                "type": "object",
                "description": "Subject of the case."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventSubject"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventTagResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "key": {
                "type": "object",
                "description": "The key of the tag."
              },
              "value": {
                "type": "object",
                "description": "The value of the tag."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventTag"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventTypeResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "object",
                "description": "Type of the case.",
                "enum": [
                  "securityIncident",
                  "operationalIncident",
                  "informational",
                  "change"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventType"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "format": "int64",
                "description": "Id of the user."
              },
              "name": {
                "type": "object",
                "description": "Name of user."
              },
              "shortName": {
                "type": "object",
                "description": "Shortname of user."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventUser"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventWatcherEmailResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "email": {
                "type": "object",
                "description": "Email address of watcher"
              },
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "Id of the watcher object."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventWatcherEmail"
                ]
              }
            }
          }
        ],
        "description": "Model describing a watcher object connected to a email address",
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventWatcherGroupResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "group": {
                "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.GroupInfo"
              },
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "Id of the watcher object."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventWatcherGroup"
                ]
              }
            }
          }
        ],
        "description": "Model describing a watcher object connected to a group",
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventWatcherUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.cases.changeevent.ChangeEventObjectResponse"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "Id of the watcher object."
              },
              "user": {
                "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventWatcherUser"
                ]
              }
            }
          }
        ],
        "description": "Model describing a watcher object connected to a user",
        "required": [
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.context.document.DocumentInfoResponse": {
        "type": "object",
        "description": "Model to describe a document",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of document"
          },
          "name": {
            "type": "string",
            "description": "Name of document"
          },
          "type": {
            "type": "string",
            "description": "Type of document (folder or document)",
            "enum": [
              "folder",
              "document"
            ]
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.context.document.DocumentNotificationV2ResponseContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.NotificationV2ResponseContext"
          },
          {
            "type": "object",
            "properties": {
              "element": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.document.DocumentInfoResponse"
              },
              "folder": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.context.document.DocumentInfoResponse"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "documentNotificationResponseContext"
                ]
              }
            }
          }
        ],
        "description": "Response context for document-service related notifications",
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.NotificationsSeenResponse": {
        "type": "object",
        "description": "Response to marking User notifications as seen",
        "properties": {
          "seenCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of notifications marked as seen."
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.request.NotificationSeenRequest": {
        "type": "object",
        "description": "Allows current user to set Notifications to seen state",
        "properties": {
          "endTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp on the day until which to mark notifications as seen. Defaults to time of request."
          },
          "notificationIDs": {
            "type": "array",
            "description": "UUID of notifications to mark as seen. If empty or null, all are set to seen.",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of notifications to mark as seen. If empty or null, all are set to seen."
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.request.NotificationV2SearchRequest": {
        "type": "object",
        "description": "Allows current user to search for received notifications.",
        "properties": {
          "channels": {
            "type": "array",
            "description": "Restrict search to return notifications which was attempted to send in at least one off the specified channels. Defaults to no channel restrictions.",
            "items": {
              "type": "string",
              "description": "Restrict search to return notifications which was attempted to send in at least one off the specified channels. Defaults to no channel restrictions.",
              "enum": [
                "email",
                "argus",
                "app",
                "sms"
              ]
            },
            "uniqueItems": true
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Restrict search to return notifications created before the timestamp. Defaults to now."
          },
          "excludeFlags": {
            "type": "array",
            "description": "Restrict search to return notifications which have the specified flags unset.",
            "items": {
              "type": "string",
              "description": "Restrict search to return notifications which have the specified flags unset.",
              "enum": [
                "seen",
                "suppressed"
              ]
            },
            "uniqueItems": true
          },
          "includeContext": {
            "type": "boolean",
            "default": false,
            "description": "Specify if service specific notification context should be included"
          },
          "includeFlags": {
            "type": "array",
            "description": "Restrict search to return notifications which have the specified flags set.",
            "items": {
              "type": "string",
              "description": "Restrict search to return notifications which have the specified flags set.",
              "enum": [
                "seen",
                "suppressed"
              ]
            },
            "uniqueItems": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 25,
            "description": "Limit number of returning notifications."
          },
          "objectCustomer": {
            "type": "array",
            "description": "Limit to notifications generated by the specified customers. Can be a list of shortnames and/or customerIDs",
            "items": {
              "type": "string",
              "description": "Limit to notifications generated by the specified customers. Can be a list of shortnames and/or customerIDs"
            },
            "uniqueItems": true
          },
          "objectID": {
            "type": "array",
            "description": "Limit to notification generated by the specified set of Argus objects by their IDs",
            "items": {
              "type": "string",
              "description": "Limit to notification generated by the specified set of Argus objects by their IDs"
            },
            "uniqueItems": true
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "Offset notifications"
          },
          "operation": {
            "type": "array",
            "description": "Limit to notifications generated by the specified Argus operations",
            "items": {
              "type": "string",
              "description": "Limit to notifications generated by the specified Argus operations",
              "enum": [
                "authenticationEnrollmentActivated",
                "authenticationApiKeyExpired",
                "authenticationApiKeyExpiring",
                "authenticationApiKeyIssued",
                "authenticationApiKeyUnused",
                "authenticationSendOpenIDProviderLink",
                "authenticationSendOpenIDUnknownProviderWarning",
                "caseUpdate",
                "caseCreate",
                "caseClosed",
                "casePriorityChange",
                "caseAddAttachment",
                "caseAddComment",
                "caseAccessGranted",
                "documentAdded",
                "documentUpdated"
              ]
            },
            "uniqueItems": true
          },
          "service": {
            "type": "array",
            "description": "Limit to notifications generated by the specified Argus services.",
            "items": {
              "type": "string",
              "description": "Limit to notifications generated by the specified Argus services.",
              "enum": [
                "authenticationService",
                "caseService",
                "documentService"
              ]
            },
            "uniqueItems": true
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Restrict search to return notifications created after the timestamp. Defaults to no restrictions."
          },
          "user": {
            "type": "array",
            "description": "Restrict search to return notifications generated by specified users. Can be shortnames or userIds.",
            "items": {
              "type": "string",
              "description": "Restrict search to return notifications generated by specified users. Can be shortnames or userIds."
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.EmailRecipientRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.RecipientRecord"
          },
          {
            "type": "object",
            "properties": {
              "email": {
                "type": "object",
                "description": "If email type recipient, this specifies the email to notify."
              },
              "format": {
                "type": "object",
                "default": "verbose",
                "description": "The format of the notification (brief or verbose)",
                "enum": [
                  "brief",
                  "verbose"
                ]
              },
              "language": {
                "type": "object",
                "default": "english",
                "description": "If email type recipient, this specifies the language to notify in.",
                "enum": [
                  "norwegian",
                  "english"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "email"
                ]
              }
            }
          }
        ],
        "description": "Email type recipients, not connected to a user.",
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.NotificationV2Record": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "The channel description describing how this recipient was notified",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.ChannelResponse"
            },
            "uniqueItems": true
          },
          "notificationID": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the notification entity stored for this notification. May be null (for non-user notifications)"
          },
          "recipient": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.RecipientRecord",
            "description": "Describes the recipient of this notification, either a user, or an email address"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.PrepareNotificationTransactionResponse": {
        "type": "object",
        "description": "Describes the prepared notification transaction",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.NotificationV2Record"
            },
            "uniqueItems": true
          },
          "transactionID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.response.RecipientRecord": {
        "type": "object",
        "description": "Describes the recipient of this notification, either a user, or an email address",
        "discriminator": {
          "propertyName": "dataType"
        },
        "properties": {
          "dataType": {
            "type": "string"
          }
        },
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.UserRecipientRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.RecipientRecord"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "user"
                ]
              }
            }
          }
        ],
        "description": "User type recipients, connected to a single user.",
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.EmailRecipient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.Recipient"
          },
          {
            "type": "object",
            "properties": {
              "email": {
                "type": "object",
                "description": "If email type recipient, this specifies the email to notify."
              },
              "format": {
                "type": "object",
                "default": "verbose",
                "description": "If email type recipient, this specifies if the notification should be of a brief or verbose format.",
                "enum": [
                  "brief",
                  "verbose"
                ]
              },
              "language": {
                "type": "object",
                "default": "english",
                "description": "If email type recipient, this specifies the language to notify in.",
                "enum": [
                  "norwegian",
                  "english"
                ]
              }
            }
          }
        ],
        "description": "Email type recipients, not connected to a user."
      },
      "no.mnemonic.services.notification.spi.v2.request.NotificationV2Request": {
        "type": "object",
        "description": "Interface to be used by other services to generate notifications..",
        "properties": {
          "objectCustomer": {
            "type": "string",
            "description": "Id or shortname for customer of the object this notification is related to.If notification is not customer relevant, this may not be set."
          },
          "objectID": {
            "type": "string",
            "description": "Which Argus object (case, document, sensor, asset, etc.) generated the notification. Is not required, as some operations will not have a corresponding Argus object."
          },
          "operation": {
            "type": "string",
            "description": "What operation generated the notification.",
            "enum": [
              "authenticationEnrollmentActivated",
              "authenticationApiKeyExpired",
              "authenticationApiKeyExpiring",
              "authenticationApiKeyIssued",
              "authenticationApiKeyUnused",
              "authenticationSendOpenIDProviderLink",
              "authenticationSendOpenIDUnknownProviderWarning",
              "caseUpdate",
              "caseCreate",
              "caseClosed",
              "casePriorityChange",
              "caseAddAttachment",
              "caseAddComment",
              "caseAccessGranted",
              "documentAdded",
              "documentUpdated"
            ]
          },
          "recipients": {
            "type": "array",
            "description": "List of user and email recipients to notify.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.Recipient"
            },
            "maxItems": 2147483647,
            "minItems": 1,
            "uniqueItems": true
          },
          "requestContext": {
            "description": "Context interface which is extended for specific services.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.authentication.AuthOpenIDProviderNotificationV2RequestContext"
              },
              {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.authentication.AuthApiKeyNotificationV2RequestContext"
              },
              {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.document.DocumentNotificationV2RequestContext"
              },
              {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.authentication.AuthEnrollmentNotificationV2RequestContext"
              },
              {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.CaseNotificationV2RequestContext"
              }
            ]
          },
          "service": {
            "type": "string",
            "description": "What service generated the notification.",
            "enum": [
              "authenticationService",
              "caseService",
              "documentService"
            ]
          },
          "triggeringUser": {
            "type": "integer",
            "format": "int64",
            "description": "Id of user who generated this notification is related to.If null, current user will be extracted from request context."
          }
        },
        "required": [
          "operation",
          "recipients",
          "requestContext",
          "service"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.Recipient": {
        "type": "object",
        "discriminator": {
          "propertyName": "dataType"
        },
        "properties": {
          "dataType": {
            "type": "string"
          }
        },
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.UserRecipient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.Recipient"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "description": "Shortname or UserID of the user to notify. Set if User type recipient."
              }
            }
          }
        ],
        "description": "User type recipients, connected to a single user."
      },
      "no.mnemonic.services.notification.spi.v2.request.context.NotificationV2RequestContext": {
        "type": "object",
        "discriminator": {
          "propertyName": "dataType"
        },
        "properties": {
          "dataType": {
            "type": "string"
          }
        },
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.authentication.AuthApiKeyNotificationV2RequestContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.NotificationV2RequestContext"
          },
          {
            "type": "object",
            "properties": {
              "createdByUserID": {
                "type": "object",
                "format": "int64",
                "description": "Id of the user who created the key"
              },
              "createdTimestamp": {
                "type": "object",
                "format": "int64",
                "description": "Timestamp for when the key was created"
              },
              "keyId": {
                "type": "object",
                "format": "int32",
                "description": "Id of the personal API-key"
              },
              "lastUsedClientIp": {
                "type": "object",
                "description": "Last client IP which used the API-key"
              },
              "lastUsedTimestamp": {
                "type": "object",
                "format": "int64",
                "description": "Timestamp of when the key was last used. 0 if the key has never been used"
              },
              "prefix": {
                "type": "object",
                "description": "Key prefix"
              },
              "userId": {
                "type": "object",
                "format": "int64",
                "description": "Id of the user owning the key",
                "minimum": 1
              },
              "validUntil": {
                "type": "object",
                "format": "int64",
                "description": "Timestamp for when key expires/expired"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "authenticationApiKeyNotificationContext"
                ]
              }
            }
          }
        ],
        "description": "Request context for API-key related notifications",
        "required": [
          "dataType",
          "prefix"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.authentication.AuthEnrollmentNotificationV2RequestContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.NotificationV2RequestContext"
          },
          {
            "type": "object",
            "properties": {
              "enrollmentCode": {
                "type": "object",
                "description": "Enrollment code to be sent to the user"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "authenticationEnrollmentNotificationContext"
                ]
              }
            }
          }
        ],
        "description": "Request context for enrollment notifications",
        "required": [
          "dataType",
          "enrollmentCode"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.authentication.AuthOpenIDProviderNotificationV2RequestContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.NotificationV2RequestContext"
          },
          {
            "type": "object",
            "properties": {
              "providerEmail": {
                "type": "object",
                "description": "Connected OpenID provider email. "
              },
              "providerLink": {
                "type": "object",
                "description": "Link to the for the provider. Null/empty if the provider is unknown"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "authenticationOpenIDNotificationContext"
                ]
              }
            }
          }
        ],
        "description": "Request context for OpenID related notifications",
        "required": [
          "dataType",
          "providerEmail"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.CaseCategory": {
        "type": "object",
        "description": "Common model to describe a category",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The UUID of the category."
          },
          "localizedNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Localized names for the category."
            },
            "description": "Localized names for the category."
          },
          "shortName": {
            "type": "string",
            "description": "The shortname of the category."
          }
        },
        "required": [
          "id",
          "localizedNames",
          "shortName"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.CaseChangeEvent": {
        "type": "object",
        "description": "Allows us to specify which specific changes has happen to the case on an update notification.",
        "properties": {
          "field": {
            "type": "string",
            "description": "Which case filed is changed.",
            "enum": [
              "attachment",
              "category",
              "comment",
              "description",
              "field",
              "priority",
              "service",
              "status",
              "subject",
              "tag",
              "type",
              "watcher",
              "assignedTech",
              "assignedUser",
              "access"
            ]
          },
          "newObject": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject",
            "description": "What is the new value. If the change is removal, this should be null."
          },
          "previousObject": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject",
            "description": "What was the previous value. If added, not changed, this should be null."
          }
        },
        "required": [
          "field"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.CaseNotificationV2RequestContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.NotificationV2RequestContext"
          },
          {
            "type": "object",
            "properties": {
              "assignedTech": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.CaseUser"
              },
              "assignedUser": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.CaseUser"
              },
              "caseID": {
                "type": "object",
                "format": "int64",
                "description": "Id of the case.",
                "minimum": 1
              },
              "category": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.CaseCategory"
              },
              "changes": {
                "type": "object",
                "description": "List of changes to the case being notified. Only required on case update events.",
                "items": {
                  "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.CaseChangeEvent"
                }
              },
              "customerReference": {
                "type": "object",
                "description": "Customer reference for the case."
              },
              "description": {
                "type": "object",
                "description": "Textual description of the case. Will be sanitized (HTML). Only expected on created case notifications."
              },
              "priority": {
                "type": "object",
                "description": "Current priority of the case. Required to correctly label in the notification center.",
                "enum": [
                  "low",
                  "medium",
                  "high",
                  "critical"
                ]
              },
              "service": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.CaseService"
              },
              "status": {
                "type": "object",
                "description": "Current status of the case.",
                "enum": [
                  "pendingCustomer",
                  "pendingSoc",
                  "pendingVendor",
                  "workingSoc",
                  "workingCustomer",
                  "pendingClose",
                  "closed"
                ]
              },
              "subject": {
                "type": "object",
                "description": "Subject of the case."
              },
              "type": {
                "type": "object",
                "description": "Case type. Required to correctly label in the notification center.",
                "enum": [
                  "securityIncident",
                  "operationalIncident",
                  "informational",
                  "change"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "caseNotificationContext"
                ]
              }
            }
          }
        ],
        "description": "Notification request context for case notifications. This object will be used to generate messages, based on templates that expect certain fields to be present.",
        "required": [
          "dataType",
          "priority",
          "service",
          "status",
          "subject",
          "type"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.CaseService": {
        "type": "object",
        "description": "Common model to describe a service",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the service."
          },
          "localizedNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Localized names for the service."
            },
            "description": "Localized names for the service."
          },
          "shortName": {
            "type": "string",
            "description": "The shortname of the service."
          }
        },
        "required": [
          "id",
          "localizedNames",
          "shortName"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.CaseUser": {
        "type": "object",
        "description": "Common model to describe a user",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the user."
          },
          "name": {
            "type": "string",
            "description": "The users name."
          },
          "shortName": {
            "type": "string",
            "description": "The shortname of the user."
          }
        },
        "required": [
          "name"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "The UUID of the attachment."
              },
              "name": {
                "type": "object",
                "description": "The file name of the attachment."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventAttachment"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "id",
          "name"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "category": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.CaseCategory"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventCategory"
                ]
              }
            }
          }
        ],
        "required": [
          "category",
          "dataType",
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventComment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "comment": {
                "type": "object",
                "description": "The comment in textual form. Will be sanitized (HTML)."
              },
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "The UUID of the comment."
              },
              "internal": {
                "type": "object",
                "default": false,
                "description": "If the comment is an internal comment. Defaults to false."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventComment"
                ]
              }
            }
          }
        ],
        "required": [
          "comment",
          "dataType",
          "dataType",
          "id"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventCustomerReference": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "reference": {
                "type": "object",
                "description": "Customer reference"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventCustomerReference"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "reference"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "object",
                "description": "Textual description of the case. Will be sanitized (HTML)."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventDescription"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "description"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "fieldName": {
                "type": "object",
                "description": "The name of the field descriptor."
              },
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "The UUID of the field entity."
              },
              "value": {
                "type": "object",
                "description": "Value for the field."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventField"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "fieldName",
          "id",
          "value"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject": {
        "type": "object",
        "description": "What is the new value. If the change is removal, this should be null.",
        "discriminator": {
          "propertyName": "dataType"
        },
        "properties": {
          "dataType": {
            "type": "string"
          }
        },
        "required": [
          "dataType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventPriority": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "priority": {
                "type": "object",
                "description": "Priority of the case.",
                "enum": [
                  "low",
                  "medium",
                  "high",
                  "critical"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventPriority"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "priority"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "service": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.CaseService"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventService"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "service"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "object",
                "description": "Status of the case.",
                "enum": [
                  "pendingCustomer",
                  "pendingSoc",
                  "pendingVendor",
                  "workingSoc",
                  "workingCustomer",
                  "pendingClose",
                  "closed"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventStatus"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "status"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventSubject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "subject": {
                "type": "object",
                "description": "Subject of the case."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventSubject"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "subject"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventTag": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "key": {
                "type": "object",
                "description": "The key of the tag."
              },
              "value": {
                "type": "object",
                "description": "The value of the tag."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventTag"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "key",
          "value"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "object",
                "description": "Type of the case.",
                "enum": [
                  "securityIncident",
                  "operationalIncident",
                  "informational",
                  "change"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventType"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "type"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "format": "int64",
                "description": "Id of the user."
              },
              "name": {
                "type": "object",
                "description": "Name of user."
              },
              "shortName": {
                "type": "object",
                "description": "Shortname of user."
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventUser"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "name",
          "shortName"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventWatcher": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.cases.changeevent.ChangeEventObject"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "format": "uuid",
                "description": "Id of the watcher object."
              },
              "watcher": {
                "type": "object",
                "description": "User id, group id or destination (email) affected"
              },
              "watcherType": {
                "type": "object",
                "description": "Type of watcher. Informs if watcher is group, user or email.",
                "enum": [
                  "user",
                  "group",
                  "email"
                ]
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "changeEventWatcher"
                ]
              }
            }
          }
        ],
        "required": [
          "dataType",
          "dataType",
          "id",
          "watcher",
          "watcherType"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.document.DocumentInfoRequest": {
        "type": "object",
        "description": "Model to describe a document",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of document",
            "minimum": 1
          },
          "name": {
            "type": "string",
            "description": "Name of document"
          },
          "type": {
            "type": "string",
            "description": "Type of document (folder or document)",
            "enum": [
              "folder",
              "document"
            ]
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.request.context.document.DocumentNotificationV2RequestContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.NotificationV2RequestContext"
          },
          {
            "type": "object",
            "properties": {
              "element": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.document.DocumentInfoRequest"
              },
              "folder": {
                "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.context.document.DocumentInfoRequest"
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "documentNotificationContext"
                ]
              }
            }
          }
        ],
        "description": "Request context for document-service related notifications",
        "required": [
          "dataType",
          "element"
        ]
      },
      "no.mnemonic.services.notification.spi.v2.response.SendPreparedTransactionResponse": {
        "type": "object",
        "description": "Describes the sent notification transaction",
        "properties": {
          "transactionID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "no.mnemonic.services.notification.spi.v2.request.settings.cases.UpdateUserCaseNotificationRuleRequest": {
        "type": "object",
        "properties": {
          "caseTypes": {
            "type": "array",
            "description": "If set, update which case types should match this rule. Use empty set to reset to empty (match all)",
            "items": {
              "type": "string",
              "description": "If set, update which case types should match this rule. Use empty set to reset to empty (match all)",
              "enum": [
                "securityIncident",
                "operationalIncident",
                "informational",
                "change"
              ]
            },
            "uniqueItems": true
          },
          "categories": {
            "type": "array",
            "description": "If set, update which categories (ID or shortname) should match this rule. Use empty set to reset to empty (match all)",
            "items": {
              "type": "string",
              "description": "If set, update which categories (ID or shortname) should match this rule. Use empty set to reset to empty (match all)"
            },
            "uniqueItems": true
          },
          "channels": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.request.settings.cases.UserCaseNotificationRuleChannelsRequest",
            "description": "Update actions to apply when this rule matches. If not set, no actions are changed."
          },
          "customers": {
            "type": "array",
            "description": "If set, update which customers (ID or shortname) should match this rule. Use empty set to reset to empty (match all)",
            "items": {
              "type": "string",
              "description": "If set, update which customers (ID or shortname) should match this rule. Use empty set to reset to empty (match all)"
            },
            "uniqueItems": true
          },
          "disabled": {
            "type": "boolean",
            "description": "If set, enable/disable the rule."
          },
          "index": {
            "type": "integer",
            "format": "int32",
            "description": "If set, change the rule evaluation index for this rule (0-based). This will reorder all other rules."
          },
          "name": {
            "type": "string",
            "description": "If set, update the rule name"
          },
          "operations": {
            "type": "array",
            "description": "If set, update which operations should match this rule. Use empty set to reset to empty (match all)",
            "items": {
              "type": "string",
              "description": "If set, update which operations should match this rule. Use empty set to reset to empty (match all)",
              "enum": [
                "caseUpdate",
                "caseCreate",
                "caseClosed",
                "caseAddAttachment",
                "caseAccessGranted"
              ]
            },
            "uniqueItems": true
          },
          "priorities": {
            "type": "array",
            "description": "If set, update which case priorities should match this rule. Use empty set to reset to empty (match all)",
            "items": {
              "type": "string",
              "description": "If set, update which case priorities should match this rule. Use empty set to reset to empty (match all)",
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ]
            },
            "uniqueItems": true
          },
          "services": {
            "type": "array",
            "description": "If set, update which services (ID or shortname) should match this rule. Use empty set to reset to empty (match all)",
            "items": {
              "type": "string",
              "description": "If set, update which services (ID or shortname) should match this rule. Use empty set to reset to empty (match all)"
            },
            "uniqueItems": true
          },
          "userRoles": {
            "type": "array",
            "description": "If set, update which user roles should match this rule. Use empty set to reset to empty (match all)",
            "items": {
              "type": "string",
              "description": "If set, update which user roles should match this rule. Use empty set to reset to empty (match all)",
              "enum": [
                "customer",
                "tech"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.services.argus.common.rest.model.ResultMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message text"
          },
          "messageTemplate": {
            "type": "string",
            "description": "Message template"
          },
          "type": {
            "type": "string",
            "description": "Message type",
            "enum": [
              "FIELD_ERROR",
              "ACTION_ERROR",
              "WARNING",
              "NOTIFICATION",
              "INFO"
            ]
          },
          "field": {
            "type": "string",
            "description": "Field which this message applies to"
          },
          "parameter": {
            "type": "string",
            "description": "The affected parameter"
          }
        }
      },
      "no.mnemonic.services.argus.common.rest.model.ResultStash": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "object",
            "description": "Returned results (might be an array or a single object)"
          }
        }
      },
      "ResultStash-no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.response.UserCaseNotificationSettings"
          }
        }
      },
      "ResultStash-no.mnemonic.services.notification.spi.response.NotificationResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.response.NotificationResponse"
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.notification.spi.response.NotificationDevice": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.response.NotificationDevice"
            }
          }
        }
      },
      "ResultStash-no.mnemonic.services.notification.spi.response.NotificationDevice": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.response.NotificationDevice"
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
            }
          }
        }
      },
      "ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.cases.UserCaseNotificationRuleResponse"
          }
        }
      },
      "ResultStash-no.mnemonic.services.notification.spi.v2.response.settings.UserNotificationV2SettingsResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.settings.UserNotificationV2SettingsResponse"
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.notification.spi.v2.response.NotificationV2Response": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.NotificationV2Response"
            }
          }
        }
      },
      "ResultStash-no.mnemonic.services.notification.spi.v2.response.NotificationsSeenResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.NotificationsSeenResponse",
            "description": "Response to marking User notifications as seen"
          }
        }
      },
      "ResultStash-no.mnemonic.services.notification.spi.v2.response.PrepareNotificationTransactionResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.PrepareNotificationTransactionResponse",
            "description": "Describes the prepared notification transaction"
          }
        }
      },
      "ResultStash-no.mnemonic.services.notification.spi.v2.response.SendPreparedTransactionResponse": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.notification.spi.v2.response.SendPreparedTransactionResponse",
            "description": "Describes the sent notification transaction"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyScheme": {
        "type": "apiKey",
        "name": "Argus-API-Key",
        "in": "header"
      }
    }
  },
  "x-ResultStash-converted": true
}