"""Autogenerated API schema"""
from argus_api import session


get_host_by_agent_user = {'tags': ['configurationadmin/v1/host'], 'summary': 'Fetch configuration host by agent user (INTERNAL)', 'description': '', 'operationId': 'getHostByAgentUser', 'parameters': [{'name': 'user', 'in': 'path', 'description': 'Username or ID of agent user to fetch host for', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'ID or name of domain to lookup user in. Defaults to current users domain', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch configuration host by agent user', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfigurationForAgent'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_instances_by_agent_user = {'tags': ['configurationadmin/v1/host'], 'summary': 'List configuration instances by agent user (fetching instances bound to the host associated with the agent) (INTERNAL)', 'description': '', 'operationId': 'listInstancesByAgentUser', 'parameters': [{'name': 'user', 'in': 'path', 'description': 'Agent user ID or username', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'includeProperties', 'in': 'query', 'description': 'Include properties', 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'responses': {'default': {'description': 'List configuration instances by agent user (fetching instances bound to the host associated with the agent)', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfigurationForAgent'], 'x-Argus-ApiStatus': 'INTERNAL'}