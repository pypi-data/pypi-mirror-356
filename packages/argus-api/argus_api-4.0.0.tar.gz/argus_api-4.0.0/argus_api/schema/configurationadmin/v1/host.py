"""Autogenerated API schema"""
from argus_api import session


add_host_comment = {'tags': ['configurationadmin/v1/host'], 'summary': 'Add a comment to configuration host (INTERNAL)', 'description': '', 'operationId': 'addHostComment', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to comment', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'text/plain': {'schema': {'type': 'string'}}}}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add a comment to configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
configure_host_monitoring = {'tags': ['configurationadmin/v1/host'], 'summary': 'Configure monitoring of configuration host. This operation does not add a new revision. (INTERNAL)', 'description': '', 'operationId': 'configureHostMonitoring', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or hostname of host to configure monitoring for', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to specify monitoring settings on a host', 'properties': {'comment': {'type': 'str', 'description': 'Add a comment to the host object.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'daytimeOnly': {'type': 'bool', 'description': 'If set, enable or disable the DAYTIME monitoring flag for this host. If monitoring is disabled, this flag has no effect.'}, 'enabled': {'type': 'bool', 'description': 'If set, enable or disable monitoring on this host.'}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'Configure monitoring of configuration host. This operation does not add a new revision.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
create_host = {'tags': ['configurationadmin/v1/host'], 'summary': 'Create new configuration host (INTERNAL)', 'description': '', 'operationId': 'createHost', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'agentUser': {'type': 'str', 'description': 'Name or ID of the agent user to associate to this host.'}, 'customer': {'type': 'str', 'description': 'ID or shortname of customer to bind this host to. If not set, this host will not be bound to a customer.'}, 'daytimeMonitored': {'type': 'bool', 'default': False, 'description': 'If true, mark this host as a DAYTIME_MONITORED host.'}, 'information': {'type': 'str', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'labels': {'type': 'list', 'description': 'Labels to add to this host', 'items': {'type': 'str', 'description': 'Labels to add to this host'}, 'uniqueItems': True}, 'name': {'type': 'str', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'preprod': {'type': 'bool', 'default': False, 'description': 'If true, mark this host as a PREPROD host.'}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'string'}}}, 'required': ['name']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create new configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_host = {'tags': ['configurationadmin/v1/host'], 'summary': 'Delete configuration host (INTERNAL)', 'description': '', 'operationId': 'deleteHost', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to delete', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'deleteInstances', 'in': 'query', 'description': 'If true, force deletion of instances for this host first', 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'responses': {'default': {'description': 'Delete configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
disable_host_monitoring = {'tags': ['configurationadmin/v1/host'], 'summary': 'Disable monitoring of configuration host. This endpoint is deprecated, use PUT /host/{id}/monitoring instead. (INTERNAL)', 'description': '', 'operationId': 'disableHostMonitoring', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to disable monitoring on', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string'}}, 'required': ['comment']}}}}, 'responses': {'default': {'description': 'Disable monitoring of configuration host. This endpoint is deprecated, use PUT /host/{id}/monitoring instead.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'deprecated': True, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
disable_host_monitoring_request = {'tags': ['configurationadmin/v1/host'], 'summary': 'Disable monitoring of configuration host. (INTERNAL)', 'description': '', 'operationId': 'disableHostMonitoringRequest', 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID or hostName of host to disable monitoring on', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to disable monitoring on a host', 'properties': {'comment': {'type': 'str', 'description': 'Add a comment to the host object.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'Disable monitoring of configuration host.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
duplicate_host = {'tags': ['configurationadmin/v1/host'], 'summary': 'Duplicate a configuration host (INTERNAL)', 'description': '', 'operationId': 'duplicateHost', 'parameters': [{'name': 'sourceID', 'in': 'path', 'description': 'ID of host to duplicate', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'newHostName': {'type': 'string'}}, 'required': ['newHostName']}}}}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Duplicate a configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
duplicate_host_request = {'tags': ['configurationadmin/v1/host'], 'summary': 'Duplicate a configuration host (INTERNAL)', 'description': '', 'operationId': 'duplicateHostRequest', 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID or host name of host to duplicate', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to duplicate a host', 'properties': {'newHostName': {'type': 'str', 'description': 'New name of duplicate host', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}}, 'required': ['newHostName']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Duplicate a configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
enable_host_monitoring = {'tags': ['configurationadmin/v1/host'], 'summary': 'Enable monitoring of configuration host. This endpoint is deprecated, use PUT /host/{id}/monitoring instead. (INTERNAL)', 'description': '', 'operationId': 'enableHostMonitoring', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to enable monitoring on', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Enable monitoring of configuration host. This endpoint is deprecated, use PUT /host/{id}/monitoring instead.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'deprecated': True, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_hosts = {'tags': ['configurationadmin/v1/host'], 'summary': 'List configuration hosts (INTERNAL)', 'description': '', 'operationId': 'listHosts', 'parameters': [{'name': 'search', 'in': 'query', 'description': 'Limit results to hosts matching this searchstring', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'includeComments', 'in': 'query', 'description': 'Include comments in output', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted hosts in results', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'orderBy', 'in': 'query', 'description': 'Sort results', 'schema': {'type': 'str', 'default': 'name', 'enum': ['id', 'name']}, 'type': 'str', 'default': 'name', 'enum': ['id', 'name']}, {'name': 'orderDesc', 'in': 'query', 'description': 'Sort results descending', 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'responses': {'default': {'description': 'List configuration hosts', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
move_configration_host = {'tags': ['configurationadmin/v1/host'], 'summary': 'Move a configuration host to another customer. Requires move permission for both source and target customer. Domain to lookup host is an optional query parameter. If the agent does not have permission for the target customer, the move will be aborted and a 412 error code returned. (INTERNAL)', 'description': '', 'operationId': 'moveConfigrationHost', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or hostname of host to move', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Domain to lookup host', 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to move configuration host.', 'properties': {'agentUser': {'type': 'str', 'description': 'Shortname or id of agent to use. If empty the current agent of the host will be used'}, 'customer': {'type': 'str', 'description': 'Shortname or id of customer to move to.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['customer']}}}, 'required': True}, 'responses': {'default': {'description': 'Move a configuration host to another customer. Requires move permission for both source and target customer.\nDomain to lookup host is an optional query parameter.\nIf the agent does not have permission for the target customer, the move will be aborted and a 412 error code returned.\n', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
schedule_host_monitoring = {'tags': ['configurationadmin/v1/host'], 'summary': 'Schedule downtime for configuration host (INTERNAL)', 'description': '', 'operationId': 'scheduleHostMonitoring', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to schedule downtime for', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'from': {'type': 'integer', 'format': 'int64'}, 'to': {'type': 'integer', 'format': 'int64'}, 'comment': {'type': 'string'}}, 'required': ['comment']}}}}, 'responses': {'default': {'description': 'Schedule downtime for configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
schedule_host_monitoring_request = {'tags': ['configurationadmin/v1/host'], 'summary': 'Schedule downtime for configuration host (INTERNAL)', 'description': '', 'operationId': 'scheduleHostMonitoringRequest', 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID of host to schedule downtime for', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to schedule downtime for configuration host', 'properties': {'comment': {'type': 'str', 'description': 'Reason for scheduling downtime', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'from': {'type': 'int', 'description': 'Timestamp to schedule downtime from', 'minimum': 0}, 'to': {'type': 'int', 'description': 'Timestamp to schedule downtime to', 'minimum': 0}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'Schedule downtime for configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_hosts = {'tags': ['configurationadmin/v1/host'], 'summary': 'Search configuration hosts (INTERNAL)', 'description': '', 'operationId': 'searchHosts', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'keywords': {'type': 'list', 'description': 'If set, filter hosts matching these keywords.', 'items': {'type': 'str', 'description': 'If set, filter hosts matching these keywords.'}, 'uniqueItems': True}, 'searchString': [], 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, include comments on returned host configuration objects'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, include properties on returned host configuration objects'}, 'agentUser': {'type': 'list', 'description': 'If set, limit the search result to hosts which are bound to these agents (id or username)', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts which are bound to these agents (id or username)'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'If set, limit the search result to hosts which are bound to these customers (id or username)', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts which are bound to these customers (id or username)'}, 'uniqueItems': True}, 'labels': {'type': 'list', 'description': 'If set, limit the search result to hosts having any of these labels', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts having any of these labels'}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, filter hosts by ID or hostname.', 'items': {'type': 'str', 'description': 'If set, filter hosts by ID or hostname.'}, 'uniqueItems': True}, 'inDowntime': {'type': 'bool', 'description': 'If true, only return hosts which are in scheduled downtime. If false, exclude. If not set, do not filter.'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'name', '-id', '-name']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'keywords': {'type': 'list', 'description': 'If set, filter hosts matching these keywords.', 'items': {'type': 'str', 'description': 'If set, filter hosts matching these keywords.'}, 'uniqueItems': True}, 'searchString': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'keywords': {'type': 'list', 'description': 'If set, filter hosts matching these keywords.', 'items': {'type': 'str', 'description': 'If set, filter hosts matching these keywords.'}, 'uniqueItems': True}, 'searchString': [], 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, include comments on returned host configuration objects'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, include properties on returned host configuration objects'}, 'agentUser': {'type': 'list', 'description': 'If set, limit the search result to hosts which are bound to these agents (id or username)', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts which are bound to these agents (id or username)'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'If set, limit the search result to hosts which are bound to these customers (id or username)', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts which are bound to these customers (id or username)'}, 'uniqueItems': True}, 'labels': {'type': 'list', 'description': 'If set, limit the search result to hosts having any of these labels', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts having any of these labels'}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, filter hosts by ID or hostname.', 'items': {'type': 'str', 'description': 'If set, filter hosts by ID or hostname.'}, 'uniqueItems': True}, 'inDowntime': {'type': 'bool', 'description': 'If true, only return hosts which are in scheduled downtime. If false, exclude. If not set, do not filter.'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'name', '-id', '-name']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}}}, 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, include comments on returned host configuration objects'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, include properties on returned host configuration objects'}, 'agentUser': {'type': 'list', 'description': 'If set, limit the search result to hosts which are bound to these agents (id or username)', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts which are bound to these agents (id or username)'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'If set, limit the search result to hosts which are bound to these customers (id or username)', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts which are bound to these customers (id or username)'}, 'uniqueItems': True}, 'labels': {'type': 'list', 'description': 'If set, limit the search result to hosts having any of these labels', 'items': {'type': 'str', 'description': 'If set, limit the search result to hosts having any of these labels'}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, filter hosts by ID or hostname.', 'items': {'type': 'str', 'description': 'If set, filter hosts by ID or hostname.'}, 'uniqueItems': True}, 'inDowntime': {'type': 'bool', 'description': 'If true, only return hosts which are in scheduled downtime. If false, exclude. If not set, do not filter.'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'name', '-id', '-name']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search configuration hosts', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
setup_default_configuration = {'tags': ['configurationadmin/v1/host'], 'summary': 'Create default instances on configuration host (INTERNAL)', 'description': '', 'operationId': 'setupDefaultConfiguration', 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to add instances to', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'packagename': {'type': 'string', 'default': ''}}}}}}, 'responses': {'default': {'description': 'Create default instances on configuration host', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
setup_default_configuration_request = {'tags': ['configurationadmin/v1/host'], 'summary': 'Create default instances on configuration host (INTERNAL)', 'description': '', 'operationId': 'setupDefaultConfigurationRequest', 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID or host name of host to add instances to', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to create default instances on configuration host', 'properties': {'packageName': {'type': 'str', 'description': 'Instance package names', 'pattern': 'processingStack'}}, 'required': ['packageName']}}}, 'required': True}, 'responses': {'default': {'description': 'Create default instances on configuration host', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_host = {'tags': ['configurationadmin/v1/host'], 'summary': 'Update configuration host (INTERNAL)', 'description': '', 'operationId': 'updateHost', 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to update', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'addLabels': {'type': 'list', 'description': 'Labels to add to this host (in addition to existing, will ignore existing labels)', 'items': {'type': 'str', 'description': 'Labels to add to this host (in addition to existing, will ignore existing labels)'}, 'uniqueItems': True}, 'agentUser': {'type': 'str', 'description': 'Name or ID of the agent user to associate to this host. If not set, do not change.'}, 'daytimeMonitored': {'type': 'bool', 'description': 'If set, change the DAYTIME_MONITORED flag on this host'}, 'id': {'type': 'int'}, 'information': {'type': 'str', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'name': {'type': 'str', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'preprod': {'type': 'bool', 'description': 'If set, change the PREPROD flag on this host'}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'string'}}, 'removeLabels': {'type': 'list', 'description': 'Labels to remove from this host (will ignore labels not set)', 'items': {'type': 'str', 'description': 'Labels to remove from this host (will ignore labels not set)'}, 'uniqueItems': True}, 'setLabels': {'type': 'list', 'description': 'Labels to set on this host (overwrite existing)', 'items': {'type': 'str', 'description': 'Labels to set on this host (overwrite existing)'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_host_properties = {'tags': ['configurationadmin/v1/host'], 'summary': 'Update configuration host properties (INTERNAL)', 'description': '', 'operationId': 'updateHostProperties', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of the host to update properties on', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update properties on a specified host', 'properties': {'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'The host properties to update to, null value will clear the property'}, 'description': 'The host properties to update to, null value will clear the property'}}, 'required': ['properties']}}}, 'required': True}, 'responses': {'default': {'description': 'Update configuration host properties', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'defaultValue': {'type': 'string', 'description': 'Default value of this property'}, 'name': {'type': 'string', 'description': 'Name of this property'}, 'source': {'type': 'string', 'description': 'The origin of this property (the source of the current value)', 'enum': ['config', 'template', 'host', 'instance']}, 'value': {'type': 'string', 'description': 'Set value of this property'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
view_host = {'tags': ['configurationadmin/v1/host'], 'summary': 'Fetch configuration host (INTERNAL)', 'description': '', 'operationId': 'viewHost', 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID of host to fetch', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch configuration host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a distributed host', 'properties': {'agentUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this host', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was created.'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Information text (plain text, default sanitation).'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this host was last updated.'}, 'name': {'type': 'string', 'description': 'The host name'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties set on this host'}, 'description': 'Properties set on this host'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}