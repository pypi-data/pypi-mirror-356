"""Autogenerated API schema"""
from argus_api import session


add_open_id_provider = {'tags': ['authentication/v1'], 'summary': 'Define new OpenID provider (DEV)', 'description': '', 'operationId': 'addOpenIDProvider', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Request with provider specifications', 'required': False, 'schema': {'type': 'object', 'required': ['certificate', 'claimsMapping', 'clientID', 'customer', 'name', 'providerURI', 'responseType', 'shortName'], 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'Set a shortname for this provider  => [a-zA-Z0-9_\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'str', 'position': 0, 'description': 'The id or shortname of the customer this provider is bound to '}, 'certificate': {'type': 'str', 'position': 0, 'description': 'A valid X509 certificate which can be used to verify OpenID tokens ', 'minLength': 1, 'maxLength': 2147483647}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow  => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'claimsMapping': {'type': 'dict', 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'If set, specify which claim contains the username to map to the external Argus username '}}}, 'responseType': {'type': 'str', 'position': 0, 'description': 'Define response type to request from provider (default idToken)', 'enum': ['token', 'idToken', 'idTokenAndToken']}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Invalid argument'}}}
delete_open_id_provider = {'tags': ['authentication/v1'], 'summary': 'Delete OpenID provider (DEV)', 'description': '', 'operationId': 'deleteOpenIDProvider', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to delete', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}}}
get_open_id_provider = {'tags': ['authentication/v1'], 'summary': 'Fetch OpenID provider (DEV)', 'description': '', 'operationId': 'getOpenIDProvider', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}}}
list_open_id_providers = {'tags': ['authentication/v1'], 'summary': 'List OpenID providers (DEV)', 'description': '', 'operationId': 'listOpenIDProviders', 'produces': ['application/json'], 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'Limit results to providers for this customer (or subcustomers)', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywords', 'in': 'query', 'description': 'Limit results to providers matching these keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Specify sort order', 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'shortName'}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Invalid arguments'}}}
open_id_authentication = {'tags': ['authentication/v1'], 'summary': 'Submit OpenID token for validation to create a new user session (DEV)', 'description': "The submitted authentication request must contain a valid OpenID token signed by the specified provider, which must contain a 'nonce' claim matching the nonce returned from the pre-authentication endpoint.", 'operationId': 'openIDAuthentication', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'provider', 'in': 'path', 'description': 'ID or shortname of OpenID provider', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'The authentication request', 'required': False, 'schema': {'type': 'object', 'required': ['idToken'], 'properties': {'idToken': {'type': 'str', 'position': 0, 'description': 'ID token from provider '}, 'requestedAuthorizations': {'type': 'list', 'position': 0, 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['enrollPublicKey', 'setPassword']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['credentials', 'sessionKey'], 'properties': {'credentials': {'type': 'dict', 'properties': {'forwardedIP': {'type': 'string'}, 'clientIP': {'type': 'string'}, 'uri': {'type': 'string'}, 'requestCredentialsType': {'type': 'str', 'enum': ['sessionToken', 'signature', 'apikey']}, 'requestCredentialsData': {'type': 'string'}}}, 'sessionKey': {'type': 'str', 'position': 0, 'description': 'The symmetric key created for this session '}, 'authorizations': {'type': 'list', 'position': 0, 'description': 'Any gratuitous authorization tokens generated during authentication, if requested by the client ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'operation': {'type': 'str', 'position': 0, 'description': 'Operation which is authorized by this token '}, 'authorization': {'type': 'str', 'position': 0, 'description': 'Authorization JWS string '}, 'nextURI': {'type': 'str', 'position': 0, 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter '}, 'expires': {'type': 'int', 'position': 0, 'description': 'The timestamp when this authorization expires '}}}}}}}}}, '221': {'description': 'Session created, password change required', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': {'type': 'string', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'integer', 'format': 'int64'}}}}, 'data': {'type': 'object', 'properties': {'username': {'type': 'string'}, 'cookie': {'type': 'string'}, 'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'uri': {'type': 'string'}, 'userID': {'type': 'integer', 'format': 'int64'}, 'domainID': {'type': 'integer', 'format': 'int32'}, 'impersonatingUserID': {'type': 'integer', 'format': 'int64'}, 'scope': {'type': 'string', 'enum': ['SESSION', 'REQUEST']}, 'created': {'type': 'integer', 'format': 'int64'}, 'validUntilTimestamp': {'type': 'integer', 'format': 'int64'}, 'securityLevel': {'type': 'string', 'enum': ['ADMINISTRATIVE', 'DEFAULT', 'EXTERNAL']}, 'authenticationMethod': {'type': 'string', 'enum': ['PASSWORD', 'SIGNATURE', 'SMS', 'RADIUS', 'TOTP', 'OTP', 'APIKEY', 'LDAP', 'IMPERSONATED', 'OPENID']}, 'constrained': {'type': 'boolean'}, 'customerConstraints': {'type': 'array', 'uniqueItems': True, 'items': {'type': 'integer', 'format': 'int64'}}, 'functionConstraints': {'type': 'array', 'uniqueItems': True, 'items': {'type': 'integer', 'format': 'int64'}}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'timestamp': {'type': 'integer', 'format': 'int64'}, 'lastRefreshTimestamp': {'type': 'integer', 'format': 'int64'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64'}, 'sessionKey': {'type': 'string', 'readOnly': True}}}}}}, '401': {'description': 'Authentication failed'}, '412': {'description': 'Validation error'}}}
open_id_pre_authentication = {'tags': ['authentication/v1'], 'summary': 'Request redirect URI to OpenID provider (DEV)', 'description': '', 'operationId': 'openIDPreAuthentication', 'produces': ['application/json'], 'parameters': [{'name': 'provider', 'in': 'path', 'description': 'ID or shortname of OpenID provider', 'required': True, 'type': 'str'}, {'name': 'state', 'in': 'query', 'description': 'State to retain', 'required': False, 'type': 'str'}, {'name': 'Origin', 'in': 'header', 'description': 'Origin header', 'required': False, 'type': 'string'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI that the client should redirect to for authentication '}, 'nonce': {'type': 'str', 'position': 0, 'description': 'The random nonce which is also a part of the providerURI '}}}}}}, '412': {'description': 'Invalid argument'}}}
search_open_id_providers = {'tags': ['authentication/v1'], 'summary': 'Search OpenID providers (DEV)', 'description': '', 'operationId': 'searchOpenIDProviders', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request', 'required': False, 'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'Limit result by customer ID or shortname ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Match providers by keywords ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the number of results (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first results, in sort order (default 0)', 'minimum': 0, 'default': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Specify sort order (default shortName)', 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'createdTimestamp', 'lastUpdatedTimestamp']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Invalid arguments'}}}
update_open_id_provider = {'tags': ['authentication/v1'], 'summary': 'Update OpenID provider (DEV)', 'description': '', 'operationId': 'updateOpenIDProvider', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to update', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Update request', 'required': False, 'schema': {'type': 'object', 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'If set, update the shortname for this provider  => [a-zA-Z0-9_\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'If set, update the name for this provider  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'clientID': {'type': 'str', 'position': 0, 'description': 'If set, update the OAuth ClientID for this provider '}, 'certificate': {'type': 'str', 'position': 0, 'description': 'If set, update the X509 certificate for this provider ', 'minLength': 1, 'maxLength': 2147483647}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'If set, update the URI for this provider  => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'responseType': {'type': 'str', 'position': 0, 'description': 'If set, update the response type to request from provider ', 'enum': ['token', 'idToken', 'idTokenAndToken']}, 'claimsMapping': {'type': 'dict', 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'If set, specify which claim contains the username to map to the external Argus username '}}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Invalid arguments'}}}