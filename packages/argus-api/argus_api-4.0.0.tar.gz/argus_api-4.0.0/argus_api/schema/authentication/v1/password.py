"""Autogenerated API schema"""
from argus_api import session


change_current_user_password = {'tags': ['authentication/v1/password'], 'summary': 'Change current users Argus password. Note that this will only change the password used for SMS, PASSWORD and TOTP, not external authentications like LDAP or SSO via OpenID.The operation must be verified using an authorization code, or the existing password (legacy). (PUBLIC)', 'description': '', 'operationId': 'changeCurrentUserPassword', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to change current users password. The request must EITHER include the old password, or an authorization token to set a new password.', 'properties': {'authorization': {'type': 'str', 'description': "The authorization token to permit setting a new password. Token must be valid for operation 'password.set'."}, 'newPassword': {'type': 'str', 'description': 'New password to change to.'}, 'oldPassword': {'type': 'str', 'description': 'Existing password, to validate password change.'}}, 'required': ['newPassword']}}}, 'required': True}, 'responses': {'default': {'description': 'Change current users Argus password. Note that this will only change the password used for SMS, PASSWORD and TOTP, not external authentications like LDAP or SSO via OpenID.The operation must be verified using an authorization code, or the existing password (legacy).', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response object when changing current user password.'}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid password', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'breachCount': {'type': 'integer', 'format': 'int32'}, 'message': {'type': 'string'}, 'reason': {'type': 'string', 'enum': ['tooShort', 'tooSimple', 'pwnedPassword', 'historicPassword', 'wrongPassword']}}}}}}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
legacy_password_authentication = {'tags': ['authentication/v1/password'], 'summary': 'Initiate a new user session using Password authentication (PUBLIC)', 'description': 'Requires password authentication to be enabled on the server, and for the user. Use /methods to check which authentication methods are available on the server.This endpoint is deprecated, use /password/authentication instead.', 'operationId': 'legacyPasswordAuthentication', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'domain': {'type': 'str', 'description': 'User domain'}, 'password': {'type': 'str', 'description': 'Static Argus-password for user'}, 'requestedAuthorizations': {'type': 'list', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'items': {'type': 'str', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'enum': ['enrollPublicKey', 'setPassword']}, 'uniqueItems': True}, 'userName': {'type': 'str', 'description': 'Username to authenticate'}}, 'required': ['password', 'userName']}}}, 'required': True}, 'responses': {'default': {'description': 'Initiate a new user session using Password authentication', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The request credentials to use for this session', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'uri': {'type': 'string'}}}}}}}}, '221': {'description': 'Session created, password change required', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'string', 'enum': ['PASSWORD', 'SIGNATURE', 'SMS', 'TOTP', 'APIKEY', 'LDAP', 'IMPERSONATED', 'OPENID', 'ENROLLMENT']}, 'clientIP': {'type': 'string'}, 'constrained': {'type': 'boolean'}, 'cookie': {'type': 'string'}, 'created': {'type': 'integer', 'format': 'int64'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64'}, 'customerConstraints': {'type': 'array', 'items': {'type': 'integer', 'format': 'int64'}, 'uniqueItems': True}, 'domainID': {'type': 'integer', 'format': 'int32'}, 'forwardedIP': {'type': 'string'}, 'functionConstraints': {'type': 'array', 'items': {'type': 'integer', 'format': 'int64'}, 'uniqueItems': True}, 'impersonatingUserID': {'type': 'integer', 'format': 'int64'}, 'iplockMask': {'type': 'integer', 'format': 'int32'}, 'lastRefreshTimestamp': {'type': 'integer', 'format': 'int64'}, 'readOnly': {'type': 'boolean'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'scope': {'type': 'string', 'enum': ['SESSION', 'REQUEST']}, 'securityLevel': {'type': 'string', 'enum': ['ADMINISTRATIVE', 'DEFAULT', 'EXTERNAL']}, 'sessionKey': {'type': 'string'}, 'timestamp': {'type': 'integer', 'format': 'int64'}, 'uri': {'type': 'string'}, 'userID': {'type': 'integer', 'format': 'int64'}, 'username': {'type': 'string'}, 'validUntilTimestamp': {'type': 'integer', 'format': 'int64'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'deprecated': True, 'x-Argus-ApiStatus': 'PUBLIC'}
password_authentication = {'tags': ['authentication/v1/password'], 'summary': 'Initiate a new user session using Password authentication (PUBLIC)', 'description': 'Requires password authentication to be enabled on the server, and for the user. Use /methods to check which authentication methods are available on the server.', 'operationId': 'passwordAuthentication', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'domain': {'type': 'str', 'description': 'User domain'}, 'password': {'type': 'str', 'description': 'Static Argus-password for user'}, 'requestedAuthorizations': {'type': 'list', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'items': {'type': 'str', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'enum': ['enrollPublicKey', 'setPassword']}, 'uniqueItems': True}, 'userName': {'type': 'str', 'description': 'Username to authenticate'}}, 'required': ['password', 'userName']}}}, 'required': True}, 'responses': {'default': {'description': 'Initiate a new user session using Password authentication', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizations': {'type': 'array', 'description': 'Any gratuitous authorization tokens generated during authentication, if requested by the client', 'items': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}, 'uniqueItems': True}, 'credentials': {'type': 'object', 'description': 'The request credentials to use for this session', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'uri': {'type': 'string'}}}, 'sessionKey': {'type': 'string'}}}}}}}}, '221': {'description': 'Session created, password change required', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'string', 'enum': ['PASSWORD', 'SIGNATURE', 'SMS', 'TOTP', 'APIKEY', 'LDAP', 'IMPERSONATED', 'OPENID', 'ENROLLMENT']}, 'clientIP': {'type': 'string'}, 'constrained': {'type': 'boolean'}, 'cookie': {'type': 'string'}, 'created': {'type': 'integer', 'format': 'int64'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64'}, 'customerConstraints': {'type': 'array', 'items': {'type': 'integer', 'format': 'int64'}, 'uniqueItems': True}, 'domainID': {'type': 'integer', 'format': 'int32'}, 'forwardedIP': {'type': 'string'}, 'functionConstraints': {'type': 'array', 'items': {'type': 'integer', 'format': 'int64'}, 'uniqueItems': True}, 'impersonatingUserID': {'type': 'integer', 'format': 'int64'}, 'iplockMask': {'type': 'integer', 'format': 'int32'}, 'lastRefreshTimestamp': {'type': 'integer', 'format': 'int64'}, 'readOnly': {'type': 'boolean'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'scope': {'type': 'string', 'enum': ['SESSION', 'REQUEST']}, 'securityLevel': {'type': 'string', 'enum': ['ADMINISTRATIVE', 'DEFAULT', 'EXTERNAL']}, 'sessionKey': {'type': 'string'}, 'timestamp': {'type': 'integer', 'format': 'int64'}, 'uri': {'type': 'string'}, 'userID': {'type': 'integer', 'format': 'int64'}, 'username': {'type': 'string'}, 'validUntilTimestamp': {'type': 'integer', 'format': 'int64'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
password_user_authorization = {'tags': ['authentication/v1/password'], 'summary': 'Request an authorization token using password credentials (INTERNAL)', 'description': 'This endpoint requires that the current user is logged in using password authentication. Even if the user has password authentication enabled, it will not work if the current session was creating using a different authentication method.', 'operationId': 'passwordUserAuthorization', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'context': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Context variables to scope this authorization. All context variables required by the executing service must be present and equal to those provided here.'}, 'description': 'Context variables to scope this authorization. All context variables required by the executing service must be present and equal to those provided here.'}, 'nextURI': {'type': 'str', 'description': 'The URI to redirect/route to after successful authorization. The URI will be validated according to policy. The authorization token returned from successful authorization should be appended as a query parameter to this URI.'}, 'operation': {'type': 'str', 'description': 'The name of the operation to authorize'}, 'password': {'type': 'str', 'description': 'The current users ARGUS password'}}, 'required': ['nextURI', 'operation', 'password']}}}, 'required': True}, 'responses': {'default': {'description': 'Request an authorization token using password credentials', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
test_user_password = {'tags': ['authentication/v1/password'], 'summary': 'Test a new password before changing it, to verify its strength (PUBLIC)', 'description': '', 'operationId': 'testUserPassword', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'password': {'type': 'string'}}, 'required': ['password']}}}, 'required': True}, 'responses': {'default': {'description': 'Test a new password before changing it, to verify its strength', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'breachCount': {'type': 'integer', 'format': 'int32'}, 'state': {'type': 'string', 'enum': ['ok', 'breached']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}