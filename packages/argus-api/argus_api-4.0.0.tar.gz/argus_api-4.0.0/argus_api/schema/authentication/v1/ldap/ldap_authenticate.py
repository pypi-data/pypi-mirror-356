"""Autogenerated API schema"""
from argus_api import session


ldap_authentication = {'tags': ['authentication/v1/ldap'], 'summary': 'Initiate a new user session using LDAP authentication (PUBLIC)', 'description': 'Requires ldap authentication to be enabled on the server, and for the user. Use /methods to check which authentication methods are available on the server.', 'operationId': 'ldapAuthentication', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'domain': {'type': 'str', 'description': 'User domain'}, 'password': {'type': 'str', 'description': 'LDAP password for user'}, 'requestedAuthorizations': {'type': 'list', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'items': {'type': 'str', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'enum': ['enrollPublicKey', 'setPassword']}, 'uniqueItems': True}, 'userName': {'type': 'str', 'description': 'Username to authenticate'}}, 'required': ['password', 'userName']}}}, 'required': True}, 'responses': {'default': {'description': 'Initiate a new user session using LDAP authentication', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizations': {'type': 'array', 'description': 'Any gratuitous authorization tokens generated during authentication, if requested by the client', 'items': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}, 'uniqueItems': True}, 'credentials': {'type': 'object', 'description': 'The request credentials to use for this session', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'uri': {'type': 'string'}}}, 'sessionKey': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
ldap_user_authorization = {'tags': ['authentication/v1/ldap'], 'summary': 'Request an authorization token using LDAP credentials (INTERNAL)', 'description': 'This endpoint requires that the current user is logged in using LDAP authentication. Even if the user has LDAP authentication enabled, it will not work if the current session was creating using a different authentication method.', 'operationId': 'ldapUserAuthorization', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'context': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Context variables to scope this authorization. All context variables required by the executing service must be present and equal to those provided here.'}, 'description': 'Context variables to scope this authorization. All context variables required by the executing service must be present and equal to those provided here.'}, 'nextURI': {'type': 'str', 'description': 'The URI to redirect/route to after successful authorization. The URI will be validated according to policy. The authorization token returned from successful authorization should be appended as a query parameter to this URI.'}, 'operation': {'type': 'str', 'description': 'The name of the operation to authorize'}, 'password': {'type': 'str', 'description': 'The current users LDAP password'}}, 'required': ['nextURI', 'operation', 'password']}}}, 'required': True}, 'responses': {'default': {'description': 'Request an authorization token using LDAP credentials', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
legacy_ldap_authentication = {'tags': ['authentication/v1/ldap'], 'summary': 'Initiate a new user session using LDAP authentication (PUBLIC)', 'description': 'Requires ldap authentication to be enabled on the server, and for the user. Use /methods to check which authentication methods are available on the server.This endpoint is deprecated, use /ldap/authentication instead.', 'operationId': 'legacyLDAPAuthentication', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'domain': {'type': 'str', 'description': 'User domain'}, 'password': {'type': 'str', 'description': 'LDAP password for user'}, 'requestedAuthorizations': {'type': 'list', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'items': {'type': 'str', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'enum': ['enrollPublicKey', 'setPassword']}, 'uniqueItems': True}, 'userName': {'type': 'str', 'description': 'Username to authenticate'}}, 'required': ['password', 'userName']}}}, 'required': True}, 'responses': {'default': {'description': 'Initiate a new user session using LDAP authentication', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The request credentials to use for this session', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'uri': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'deprecated': True, 'x-Argus-ApiStatus': 'PUBLIC'}