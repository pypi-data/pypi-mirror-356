"""Autogenerated API schema"""
from argus_api import session


acknowledge_sensor = {'tags': ['sensors/v1/sensor'], 'summary': 'Acknowledge a sensor by its ID (INTERNAL)', 'description': '', 'operationId': 'acknowledgeSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to acknowledge', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to acknowledge a single Sensor', 'properties': {'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Acknowledge a sensor by its ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
acknowledge_sensors = {'tags': ['sensors/v1/sensor'], 'summary': 'Acknowledge Sensors by their ID Any comment will be applied to ALL specified sensors. (INTERNAL)', 'description': '', 'operationId': 'acknowledgeSensors', 'parameters': [{'name': 'sensorID', 'in': 'query', 'description': 'ID of sensors to acknowledge', 'required': True, 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to bulk acknowledge Sensors', 'properties': {'comment': {'type': 'str', 'description': 'Any comments to append to the request. NB: Each Sensor specified in the request will receive the same comment. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Acknowledge Sensors by their ID Any comment will be applied to ALL specified sensors.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
add_comment = {'tags': ['sensors/v1/comment'], 'summary': 'Add comment to a sensor (INTERNAL)', 'description': '', 'operationId': 'addComment', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'SensorID', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to add a comment to a single Sensor', 'properties': {'comment': {'type': 'str', 'description': 'Any comments to append to the request'}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add comment to a sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'comment': {'type': 'string', 'description': "The comment's text."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addSensorComments'], 'x-Argus-ApiStatus': 'INTERNAL'}
bulk_cancel_sensor_downtime = {'tags': ['sensors/v1/downtime'], 'summary': 'Cancels downtime for supplied sensorIDs (INTERNAL)', 'description': '', 'operationId': 'bulkCancelSensorDowntime', 'parameters': [{'name': 'sensorID', 'in': 'query', 'description': 'Cancel downtime for these Sensor IDs', 'required': True, 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}], 'responses': {'default': {'description': 'Cancels downtime for supplied sensorIDs', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['cancelSensorDowntime'], 'x-Argus-ApiStatus': 'INTERNAL'}
bulk_schedule_sensor_downtime = {'tags': ['sensors/v1/downtime'], 'summary': 'Schedules downtime for provided sensorIDs (INTERNAL)', 'description': '', 'operationId': 'bulkScheduleSensorDowntime', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to schedule downtime for several Sensors', 'properties': {'fromTime': {'type': 'int', 'description': 'Timestamp in epoch ms from which the requested change takes effect.', 'minimum': 0}, 'toTime': {'type': 'int', 'description': 'Timestamp in epoch ms until which the requested change takes effect.', 'minimum': 0}, 'keepDowntimeOnUpdate': {'type': 'bool', 'description': 'Flag to maintain existing downtime configurations. \nIf set, downtime will not automatically end when the Sensor registers a new event.'}, 'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'sensorIDs': {'type': 'list', 'description': 'IDs of the Sensors for which we want to schedule downtime.', 'items': {'type': 'int', 'description': 'IDs of the Sensors for which we want to schedule downtime.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'sensorID': {'type': 'dict', 'description': 'Request to schedule downtime for several Sensors', 'properties': {'fromTime': {'type': 'int', 'description': 'Timestamp in epoch ms from which the requested change takes effect.', 'minimum': 0}, 'toTime': {'type': 'int', 'description': 'Timestamp in epoch ms until which the requested change takes effect.', 'minimum': 0}, 'keepDowntimeOnUpdate': {'type': 'bool', 'description': 'Flag to maintain existing downtime configurations. \nIf set, downtime will not automatically end when the Sensor registers a new event.'}, 'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'sensorIDs': {'type': 'list', 'description': 'IDs of the Sensors for which we want to schedule downtime.', 'items': {'type': 'int', 'description': 'IDs of the Sensors for which we want to schedule downtime.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'sensorID': []}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Schedules downtime for provided sensorIDs', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['scheduleSensorDowntime'], 'x-Argus-ApiStatus': 'INTERNAL'}
bulk_update_contractual_status = {'tags': ['sensors/v1/sensor'], 'summary': "Update Sensors' contractual statusAny comment will be applied to ALL specified sensors.The operation will only return Sensors that were actually updated. (INTERNAL)", 'description': '', 'operationId': 'bulkUpdateContractualStatus', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': "Request to update multiple Sensors' contractual status", 'properties': {'sensorIDs': {'type': 'list', 'description': 'IDs of Sensors to remove acknowledgement.', 'items': {'type': 'int', 'description': 'IDs of Sensors to remove acknowledgement.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'contractual': {'type': 'bool', 'description': "Whether to set or unset the Sensors' contractual status"}, 'comment': {'type': 'str', 'description': 'Any comments to append to the request. NB: Each Sensor specified in the request will receive the same comment. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['contractual', 'sensorIDs']}}}, 'required': True}, 'responses': {'default': {'description': "Update Sensors' contractual statusAny comment will be applied to ALL specified sensors.The operation will only return Sensors that were actually updated.", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
bulk_update_expected_update_interval = {'tags': ['sensors/v1/sensor'], 'summary': "Update Sensors' expected update time intervals Any comment will be applied to ALL specified sensors. The operation will only return Sensors that were actually updated. (INTERNAL)", 'description': '', 'operationId': 'bulkUpdateExpectedUpdateInterval', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': "Request to update multiple Sensors' expected update interval", 'properties': {'sensorIDs': {'type': 'list', 'description': 'IDs of Sensors whose expected update time interval we want to update.', 'items': {'type': 'int', 'description': 'IDs of Sensors whose expected update time interval we want to update.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'expectedUpdateTimeIntervalMillis': {'type': 'int', 'description': 'The new expected update time interval in milliseconds', 'minimum': 1}, 'overrideUpdateTimeFlag': {'type': 'bool', 'description': 'Whether to set the override update time flag on sensors lacking it in the request'}, 'comment': {'type': 'str', 'description': 'Any comments to append to the request\nNB: Each Sensor specified in the request will receive the same comment.\nIf not specified the service will generate a generic one.\n', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['sensorIDs']}}}, 'required': True}, 'responses': {'default': {'description': "Update Sensors' expected update time intervals\nAny comment will be applied to ALL specified sensors.\n The operation will only return Sensors that were actually updated.\n", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
bulk_update_initial_tuning = {'tags': ['sensors/v1/sensor'], 'summary': 'Bulk updating initial tuning property for Sensors by their IDs. If provided any comment will be applied to ALL updated sensors. (INTERNAL)', 'description': '', 'operationId': 'bulkUpdateInitialTuning', 'parameters': [{'name': 'sensorID', 'in': 'query', 'description': 'ID of sensors to remove acknowledgement', 'required': True, 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'initialTuning', 'in': 'query', 'description': 'Desired new Sensor initial tuning status', 'required': True, 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'description': 'Any comments to append to the request. NB: Each Sensor specified in the request will receive the same comment. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Bulk updating initial tuning property for Sensors by their IDs. If provided any comment will be applied to ALL updated sensors.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
cancel_sensor_downtime = {'tags': ['sensors/v1/downtime'], 'summary': 'Cancels downtime for supplied sensorID (INTERNAL)', 'description': '', 'operationId': 'cancelSensorDowntime', 'parameters': [{'name': 'sensorID', 'in': 'path', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Cancels downtime for supplied sensorID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['cancelSensorDowntime'], 'x-Argus-ApiStatus': 'INTERNAL'}
cluster_sensor = {'tags': ['sensors/v1/cluster'], 'summary': 'Cluster sensor (INTERNAL)', 'description': '', 'operationId': 'clusterSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to cluster', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to cluster an existing Sensor with another one', 'properties': {'clusterSensorID': {'type': 'int', 'description': 'Sensor with which we want to cluster', 'minimum': 1}}}}}, 'required': True}, 'responses': {'default': {'description': 'Cluster sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
create_sensor = {'tags': ['sensors/v1/sensor'], 'summary': 'Creates a Sensor (INTERNAL)', 'description': '', 'operationId': 'createSensor', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to create a new Sensor', 'properties': {'location': {'type': 'str', 'description': 'Sensor Location ID or short name. The Location must be Global or belong to the same Customer as this Sensor.'}, 'customer': {'type': 'str', 'description': 'Sensor Customer ID or short name'}, 'application': {'type': 'str', 'description': 'Sensor type ID or short name'}, 'clusterSensorID': {'type': 'int', 'default': 0, 'description': 'ID of the Sensor this new Sensor will be clustered with. 0 if unclustered.', 'minimum': 0}, 'expectedUpdateTime': {'type': 'int', 'default': 0, 'description': 'When the Sensor is expected to be updated, 0 if not known/never', 'minimum': 0}, 'scheduledDowntimeFromTime': {'type': 'int', 'default': 0, 'description': 'Time from which the Sensor will be offline, 0 if not scheduled', 'minimum': 0}, 'scheduledDowntimeUntilTime': {'type': 'int', 'default': 0, 'description': 'Time until which the Sensor will be offline, 0 if not scheduled', 'minimum': 0}, 'information': {'type': 'str', 'description': 'Sensor information'}, 'hostname': {'type': 'str', 'description': "Sensor hostname. One of hostname or ipAddresss must be defined.\nAttempts to create a Sensor with a duplicate hostname for the same customer will be rejected.\nIf you need to make a Sensor with a duplicate hostname ensure the additional data field's contents are unique.\nSensor hostname allows letters, numbers and special characters (._:;-).\n", 'pattern': '([\\p{Alnum}\\._:;-]+)'}, 'ipAddress': {'type': 'str', 'description': "Sensor's IP address, one of hostname or ipAddress must be assigned\nAttempts to create a Sensor with a duplicate IP address for the same customer will be rejected.\nIf you need to make a Sensor with a duplicate IP address ensure the additional data field's contents are unique.\n [format:ip]", 'x-Argus-Format': 'ip'}, 'additionalData': {'type': 'str', 'description': 'Any additional data'}, 'active': {'type': 'bool', 'default': False, 'description': 'Sensor active flag'}, 'monitored': {'type': 'bool', 'default': False, 'description': 'Sensor monitored flag'}, 'monitoredOnlyDaytime': {'type': 'bool', 'default': False, 'description': 'Sensor is monitored only daytime flag'}, 'initialTuning': {'type': 'bool', 'default': False, 'description': "Sensor's initial tuning status"}, 'overrideDefaultUpdateTime': {'type': 'bool', 'default': False, 'description': 'Override default update time'}, 'sharedCustomerData': {'type': 'bool', 'default': False, 'description': "Sensor's shared customer data flag"}, 'reportingSeverity': {'type': 'str', 'description': "If specified overwrite the ReportingSeverity level for this Sensor's Application", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'contractual': {'type': 'bool', 'default': False, 'description': "Whether the Sensor contributes to the customer's contractual Sensor limit"}, 'otEnvironment': {'type': 'bool', 'default': False, 'description': 'Whether the Sensor is in an OT environment'}, 'restrictedITEnvironment': {'type': 'bool', 'default': False, 'description': 'Whether the Sensor is in a restricted IT environment'}, 'sslTerminating': {'type': 'boolean'}}, 'required': ['application', 'customer', 'location']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Creates a Sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
create_sensor_interface = {'tags': ['sensors/v1/interface'], 'summary': 'Adds an interface to a sensor (INTERNAL)', 'description': '', 'operationId': 'createSensorInterface', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to which we want to add the interface', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to create a new Interface on an existing Sensor', 'properties': {'interfaceName': {'type': 'str', 'description': 'Name of the Sensor Interface. Must be unique per Sensor.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'location': {'type': 'str', 'description': "Location ID or short name of the Sensor's Interface."}, 'active': {'type': 'bool', 'default': False, 'description': 'Status of the Sensor Interface'}, 'customer': {'type': 'str', 'default': 'null', 'description': "Customer id or shortname of the Interface.If neither the Interface nor Sensor's Location is Global, the Interface and Sensor Customer must be the sameunless the shared data flag is set on the Sensor"}, 'comment': {'type': 'str', 'description': 'Comment describing why the Interface was added'}, 'sslTerminating': {'type': 'bool', 'default': False, 'description': "Interface's SSL terminating flag"}, 'otEnvironment': {'type': 'bool', 'default': False, 'description': "Interface's OT environment flag"}, 'restrictedITEnvironment': {'type': 'bool', 'default': False, 'description': "Interface's restricted IT environment flag"}}, 'required': ['interfaceName', 'location']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Adds an interface to a sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addSensorInterface'], 'x-Argus-ApiStatus': 'INTERNAL'}
decluster_sensor = {'tags': ['sensors/v1/cluster'], 'summary': 'Decluster sensor (INTERNAL)', 'description': '', 'operationId': 'declusterSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to decluster', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Decluster sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_interface = {'tags': ['sensors/v1/interface'], 'summary': "Deletes one of a Sensor's interfaces by its ID or name (INTERNAL)", 'description': '', 'operationId': 'deleteInterface', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to which the interface belongs', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'interface', 'in': 'path', 'description': 'ID of the interface', 'required': True, 'schema': {'type': 'str', 'minLength': 1}, 'type': 'str', 'minLength': 1}], 'responses': {'default': {'description': "Deletes one of a Sensor's interfaces by its ID or name", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Sensor, Interface, or Location not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['removeSensorInterface'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_sensor = {'tags': ['sensors/v1/sensor'], 'summary': 'Delete sensor by ID (INTERNAL)', 'description': '', 'operationId': 'deleteSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to delete', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Delete sensor by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deleteSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_sensor_comment = {'tags': ['sensors/v1/comment'], 'summary': 'Deletes a comment (INTERNAL)', 'description': '', 'operationId': 'deleteSensorComment', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'Delete comment from this sensor', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'timestamp', 'in': 'path', 'description': 'Delete comment made at this timestamp', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Deletes a comment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['removeSensorComments'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_sensors = {'tags': ['sensors/v1/sensor'], 'summary': 'Delete sensors by ID (INTERNAL)', 'description': '', 'operationId': 'deleteSensors', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'sensorIDs': {'type': 'list', 'description': 'IDs of Sensors we want to update.', 'items': {'type': 'int', 'description': 'IDs of Sensors we want to update.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['sensorIDs']}}}, 'required': True}, 'responses': {'default': {'description': 'Delete sensors by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deleteSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
disable_monitoring = {'tags': ['sensors/v1/monitoring'], 'summary': 'Disable sensor monitoring (INTERNAL)', 'description': '', 'operationId': 'disableMonitoring', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID for sensor to disable monitoring', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Disable sensor monitoring', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['disableSensorMonitoring'], 'x-Argus-ApiStatus': 'INTERNAL'}
disable_monitoring_bulk = {'tags': ['sensors/v1/monitoring'], 'summary': 'Bulk disable sensor monitoring (INTERNAL)', 'description': '', 'operationId': 'disableMonitoringBulk', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to disable monitoring for several Sensors', 'properties': {'sensorIDs': {'type': 'list', 'description': 'IDs of Sensors whose monitoring we want to update.', 'items': {'type': 'int', 'description': 'IDs of Sensors whose monitoring we want to update.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['sensorIDs']}}}, 'required': True}, 'responses': {'default': {'description': 'Bulk disable sensor monitoring', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['disableSensorMonitoring'], 'x-Argus-ApiStatus': 'INTERNAL'}
disable_sensor = {'tags': ['sensors/v1/activation'], 'summary': 'Deactivates a sensor (INTERNAL)', 'description': '', 'operationId': 'disableSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Deactivates a sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['disableSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
disable_sensors = {'tags': ['sensors/v1/activation'], 'summary': 'Bulk deactivation of Sensors (INTERNAL)', 'description': '', 'operationId': 'disableSensors', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to bulk disable Sensors', 'properties': {'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'sensorIDs': {'type': 'list', 'description': 'IDs of Sensors to deactivate.', 'items': {'type': 'int', 'description': 'IDs of Sensors to deactivate.'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Bulk deactivation of Sensors', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['disableSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
enable_monitoring = {'tags': ['sensors/v1/monitoring'], 'summary': "Enable sensor monitoring. To set daytime only monitoring use the 'daytime' queryParm. (INTERNAL)", 'description': '', 'operationId': 'enableMonitoring', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID for sensor to enable monitoring', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'daytime', 'in': 'query', 'description': 'Daytime only monitoring flag', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'responses': {'default': {'description': "Enable sensor monitoring. To set daytime only monitoring use the 'daytime' queryParm.", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['enableSensorMonitoring'], 'x-Argus-ApiStatus': 'INTERNAL'}
enable_monitoring_bulk = {'tags': ['sensors/v1/monitoring'], 'summary': "Bulk enable sensor monitoring. To set daytime only monitoring use the 'daytime' queryParm. (INTERNAL)", 'description': '', 'operationId': 'enableMonitoringBulk', 'parameters': [{'name': 'daytime', 'in': 'query', 'description': 'Daytime only monitoring flag', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to enable monitoring for several Sensors', 'properties': {'sensorIDs': {'type': 'list', 'description': 'IDs of Sensors whose monitoring we want to update.', 'items': {'type': 'int', 'description': 'IDs of Sensors whose monitoring we want to update.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['sensorIDs']}}}, 'required': True}, 'responses': {'default': {'description': "Bulk enable sensor monitoring. To set daytime only monitoring use the 'daytime' queryParm.", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['enableSensorMonitoring'], 'x-Argus-ApiStatus': 'INTERNAL'}
enable_sensor = {'tags': ['sensors/v1/activation'], 'summary': 'Activates a sensor (INTERNAL)', 'description': '', 'operationId': 'enableSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Activates a sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['enableSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
enable_sensors = {'tags': ['sensors/v1/activation'], 'summary': 'Bulk activation of sensors (INTERNAL)', 'description': '', 'operationId': 'enableSensors', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to bulk enable Sensors', 'properties': {'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'sensorIDs': {'type': 'list', 'description': 'IDs of Sensors to activate.', 'items': {'type': 'int', 'description': 'IDs of Sensors to activate.'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Bulk activation of sensors', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['enableSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_interface = {'tags': ['sensors/v1/interface'], 'summary': "Gets one of a Sensor's interfaces (INTERNAL)", 'description': '', 'operationId': 'getInterface', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to which the interface belongs', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'interfaceNameOrID', 'in': 'path', 'description': 'ID or name of the Interface', 'required': True, 'schema': {'type': 'str', 'minLength': 1}, 'type': 'str', 'minLength': 1}], 'responses': {'default': {'description': "Gets one of a Sensor's interfaces", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Sensor or Interface not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSensorInterface'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_sensor = {'tags': ['sensors/v1/sensor'], 'summary': 'Fetch sensor by ID (INTERNAL)', 'description': '', 'operationId': 'getSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to fetch', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Fetch sensor by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSensors'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_sensor_comment = {'tags': ['sensors/v1/comment'], 'summary': 'Fetch comment by timestamp for sensor (INTERNAL)', 'description': '', 'operationId': 'getSensorComment', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'SensorID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'timestamp', 'in': 'path', 'description': 'Timestamp', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Fetch comment by timestamp for sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'comment': {'type': 'string', 'description': "The comment's text."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSensorComments'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_sensor_comments = {'tags': ['sensors/v1/sensor'], 'summary': 'Fetch sensor comments by sensor ID (INTERNAL)', 'description': '', 'operationId': 'getSensorComments', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to fetch comments for', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'Fetch sensor comments by sensor ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'comment': {'type': 'string', 'description': "The comment's text."}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'deprecated': True, 'x-Argus-Required-Permissions': ['viewSensors'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_sensor_status_by_sensor = {'tags': ['sensors/v1/status'], 'summary': 'Gets status for a sensor (INTERNAL)', 'description': '', 'operationId': 'getSensorStatusBySensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor whose status we want to fetch', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Gets status for a sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': "Sensor Status SPI model class for a Sensor's Status", 'properties': {'lastEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for the last event registered by the sensor.'}, 'lastUpdateTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Latest timestamp when the sensor status was updated.'}, 'lastAnalyzedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Latest timestamp when the analyzer encountered an event for the sensor.'}, 'messageRate': {'type': 'number', 'format': 'double', 'description': 'Count per second of events throughput for the sensor (since last report).'}, 'lastAgentHost': {'type': 'string', 'description': 'Host name/Container name of reporting sensor.'}, 'sensor': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'CLOCK_OUT_OF_SYNC']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSensorStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_sensors = {'tags': ['sensors/v1/sensor'], 'summary': 'List sensors (INTERNAL)', 'description': '', 'operationId': 'listSensors', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}, {'name': 'customerID', 'in': 'query', 'description': 'Limit search to these customer IDs', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'customer', 'in': 'query', 'description': 'Limit search to these customer ids or shortname', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'applicationID', 'in': 'query', 'description': '', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'applicationName', 'in': 'query', 'description': 'Limit search to these applications by name', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Limit search by sensor hostname or IP address', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'minExpectedUpdateTime', 'in': 'query', 'description': 'Filter by sensors with expectedUpdateTime at least this value in millis', 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'maxExpectedUpdateTime', 'in': 'query', 'description': 'Filter by sensors with expectedUpdateTime at most this value in millis', 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'lastUpdatedTimestamp', 'in': 'query', 'description': '', 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'List sensors', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}}, 'x-Argus-Required-Permissions': ['viewSensors'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_sensor_comments = {'tags': ['sensors/v1/comment'], 'summary': 'Fetch comments for sensor (INTERNAL)', 'description': '', 'operationId': 'listSensorComments', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'SensorID', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'Fetch comments for sensor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'comment': {'type': 'string', 'description': "The comment's text."}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSensorComments'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_sensor_interfaces = {'tags': ['sensors/v1/interface'], 'summary': "Gets a Sensor's interfaces (INTERNAL)", 'description': '', 'operationId': 'listSensorInterfaces', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to which the interface belongs', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': "Gets a Sensor's interfaces", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Sensor not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSensorInterface'], 'x-Argus-ApiStatus': 'INTERNAL'}
remove_acknowledgement_sensor = {'tags': ['sensors/v1/sensor'], 'summary': 'Remove acknowledgement for a sensor by its ID.  (INTERNAL)', 'description': '', 'operationId': 'removeAcknowledgementSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to remove acknowledgment', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to un-acknowledge a single Sensor', 'properties': {'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Remove acknowledgement for a sensor by its ID. ', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
remove_acknowledgement_sensors = {'tags': ['sensors/v1/sensor'], 'summary': 'Bulk remove acknowledgement for Sensors by their IDs. Any comment will be applied to ALL specified sensors. (INTERNAL)', 'description': '', 'operationId': 'removeAcknowledgementSensors', 'parameters': [{'name': 'sensorID', 'in': 'query', 'description': 'ID of sensors to remove acknowledgement', 'required': True, 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to bulk un-acknowledge Sensors', 'properties': {'comment': {'type': 'str', 'description': 'Any comments to append to the request. NB: Each Sensor specified in the request will receive the same comment. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Bulk remove acknowledgement for Sensors by their IDs. Any comment will be applied to ALL specified sensors.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
restore_sensor = {'tags': ['sensors/v1/sensor'], 'summary': 'Restore sensor by ID (INTERNAL)', 'description': '', 'operationId': 'restoreSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to restore', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'*/*': {'schema': {'type': 'object', 'description': 'Request to restore an existing deleted Sensor', 'properties': {'enable': {'type': 'bool', 'default': False, 'description': 'Whether to enable the Sensor at the same time as restoring it.'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Restore sensor by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deleteSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
restore_sensors = {'tags': ['sensors/v1/sensor'], 'summary': 'Restore sensors by ID (INTERNAL)', 'description': '', 'operationId': 'restoreSensors', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to bulk restore Sensors. Duplicates will be skipped and not restored.', 'properties': {'sensorIDs': {'type': 'list', 'description': 'IDs of Sensors we want to update.', 'items': {'type': 'int', 'description': 'IDs of Sensors we want to update.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'enable': {'type': 'bool', 'default': False, 'description': 'Whether to enable the Sensors at the same time as restoring them.'}}, 'required': ['sensorIDs']}}}, 'required': True}, 'responses': {'default': {'description': 'Restore sensors by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deleteSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
schedule_sensor_downtime = {'tags': ['sensors/v1/downtime'], 'summary': 'Schedules downtime for supplied sensorID (INTERNAL)', 'description': '', 'operationId': 'scheduleSensorDowntime', 'parameters': [{'name': 'sensorID', 'in': 'path', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to schedule downtime for a single Sensor', 'properties': {'fromTime': {'type': 'int', 'description': 'Timestamp in epoch ms from which the requested change takes effect.', 'minimum': 0}, 'toTime': {'type': 'int', 'description': 'Timestamp in epoch ms until which the requested change takes effect.', 'minimum': 0}, 'keepDowntimeOnUpdate': {'type': 'bool', 'description': 'Flag to maintain existing downtime configurations. \nIf set, downtime will not automatically end when the Sensor registers a new event.'}, 'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Schedules downtime for supplied sensorID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['scheduleSensorDowntime'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_sensors = {'tags': ['sensors/v1/sensor'], 'summary': 'Search sensors (INTERNAL)', 'description': '', 'operationId': 'searchSensors', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Search criteria for Sensors', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'Limit result to objects belonging to these customers', 'items': {'type': 'int', 'description': 'Limit result to objects belonging to these customers', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'keywords': {'type': 'list', 'description': 'Search for sensors matching these hostnames or IP-addresses', 'items': {'type': 'str', 'description': 'Search for sensors matching these hostnames or IP-addresses'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strictly different keywords should be matched (default match any keywords)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'enum': ['all', 'ipAddress', 'hostname', 'additionalData', 'id']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for sensors belonging to customers identified by their ID or shortname', 'items': {'type': 'str', 'description': 'Search for sensors belonging to customers identified by their ID or shortname'}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['scheduledDowntimeFromTime', 'scheduledDowntimeUntilTime', 'lastAcknowledgedTimestamp', 'lastUpdatedTimestamp', 'createdTimestamp', 'deletedTimestamp', 'all']}, 'uniqueItems': True}, 'minExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by min expected update time interval in millis'}, 'maxExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by max expected update time interval in millis'}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': {'type': 'dict', 'description': 'Search criteria for Sensors', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'Limit result to objects belonging to these customers', 'items': {'type': 'int', 'description': 'Limit result to objects belonging to these customers', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'keywords': {'type': 'list', 'description': 'Search for sensors matching these hostnames or IP-addresses', 'items': {'type': 'str', 'description': 'Search for sensors matching these hostnames or IP-addresses'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strictly different keywords should be matched (default match any keywords)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'enum': ['all', 'ipAddress', 'hostname', 'additionalData', 'id']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for sensors belonging to customers identified by their ID or shortname', 'items': {'type': 'str', 'description': 'Search for sensors belonging to customers identified by their ID or shortname'}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['scheduledDowntimeFromTime', 'scheduledDowntimeUntilTime', 'lastAcknowledgedTimestamp', 'lastUpdatedTimestamp', 'createdTimestamp', 'deletedTimestamp', 'all']}, 'uniqueItems': True}, 'minExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by min expected update time interval in millis'}, 'maxExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by max expected update time interval in millis'}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': [], 'includeFlag': [], 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'sensorID': {'type': 'list', 'description': 'Search for specific sensors by ID', 'items': {'type': 'int', 'description': 'Search for specific sensors by ID'}, 'uniqueItems': True}, 'locationName': {'type': 'list', 'deprecated': True, 'description': 'Use location instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'Use location instead.'}, 'uniqueItems': True}, 'applicationName': {'type': 'list', 'description': 'Search for sensors by application type', 'items': {'type': 'str', 'description': 'Search for sensors by application type'}, 'uniqueItems': True}}}, 'includeFlag': {'type': 'dict', 'description': 'Search criteria for Sensors', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'Limit result to objects belonging to these customers', 'items': {'type': 'int', 'description': 'Limit result to objects belonging to these customers', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'keywords': {'type': 'list', 'description': 'Search for sensors matching these hostnames or IP-addresses', 'items': {'type': 'str', 'description': 'Search for sensors matching these hostnames or IP-addresses'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strictly different keywords should be matched (default match any keywords)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'enum': ['all', 'ipAddress', 'hostname', 'additionalData', 'id']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for sensors belonging to customers identified by their ID or shortname', 'items': {'type': 'str', 'description': 'Search for sensors belonging to customers identified by their ID or shortname'}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['scheduledDowntimeFromTime', 'scheduledDowntimeUntilTime', 'lastAcknowledgedTimestamp', 'lastUpdatedTimestamp', 'createdTimestamp', 'deletedTimestamp', 'all']}, 'uniqueItems': True}, 'minExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by min expected update time interval in millis'}, 'maxExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by max expected update time interval in millis'}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': [], 'includeFlag': [], 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'sensorID': {'type': 'list', 'description': 'Search for specific sensors by ID', 'items': {'type': 'int', 'description': 'Search for specific sensors by ID'}, 'uniqueItems': True}, 'locationName': {'type': 'list', 'deprecated': True, 'description': 'Use location instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'Use location instead.'}, 'uniqueItems': True}, 'applicationName': {'type': 'list', 'description': 'Search for sensors by application type', 'items': {'type': 'str', 'description': 'Search for sensors by application type'}, 'uniqueItems': True}}}, 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'sensorID': {'type': 'list', 'description': 'Search for specific sensors by ID', 'items': {'type': 'int', 'description': 'Search for specific sensors by ID'}, 'uniqueItems': True}, 'locationName': {'type': 'list', 'deprecated': True, 'description': 'Use location instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'Use location instead.'}, 'uniqueItems': True}, 'applicationName': {'type': 'list', 'description': 'Search for sensors by application type', 'items': {'type': 'str', 'description': 'Search for sensors by application type'}, 'uniqueItems': True}}}}}}, 'responses': {'default': {'description': 'Search sensors', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}}, 'x-Argus-Required-Permissions': ['viewSensors'], 'x-Argus-ApiStatus': 'INTERNAL'}
submit_sensor_status_bulk = {'tags': ['sensors/v1/status'], 'summary': 'Submit sensor status records in a bulk operation (INTERNAL)', 'description': '', 'operationId': 'submitSensorStatusBulk', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'records': {'type': 'list', 'description': 'Sensor status records for submission', 'items': {'type': 'dict', 'properties': {'sensorID': {'type': 'int', 'description': 'Sensor which the status belongs to.', 'minimum': 1}, 'sensorCustomer': {'type': 'str', 'description': 'Customer of reporting sensor. Can be customer ID or shortName.'}, 'lastAgentHost': {'type': 'str', 'description': 'Host name/Container name of reporting sensor.'}, 'lastEventTimestamp': {'type': 'int', 'description': 'Latest event timestamp encountered by agents for the sensor.', 'minimum': 0}, 'lastUpdateTimestamp': {'type': 'int', 'description': 'Latest timestamp when the sensor status was updated.', 'minimum': 0}, 'lastAnalyzedTimestamp': {'type': 'int', 'description': 'Latest timestamp when the analyzer encountered an event for the sensor.', 'minimum': 0}, 'messageRate': {'type': 'float', 'description': 'Count per second of events throughput for the sensor (since last report).', 'minimum': 0}, 'clockOutOfSync': {'type': 'bool', 'default': False, 'description': 'Determines whether the event timestamp was in future when registered for the sensor status.'}}, 'required': ['sensorCustomer']}, 'maxItems': 2147483647, 'minItems': 1}, 'ignoreOnFailed': {'type': 'bool', 'default': False, 'description': 'If set to true submitted records with errors will be discarded and all remaining records will be processed. If set to false errors will fail the whole request.'}}, 'required': ['records']}}}, 'required': True}, 'responses': {'default': {'description': 'Submit sensor status records in a bulk operation', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accepted': {'type': 'integer', 'format': 'int32', 'description': 'Number of successfully submitted records.'}, 'rejected': {'type': 'integer', 'format': 'int32', 'description': 'Number of records that failed validation.'}, 'errorInformationList': {'type': 'array', 'description': 'Information regarding any records that were rejected during validation.', 'items': {'type': 'object', 'description': 'Information regarding any records that were rejected during validation.', 'properties': {'submissionIndex': {'type': 'integer', 'format': 'int32', 'description': 'Index of the submission as it appears in the submission request.'}, 'errorMessages': {'type': 'array', 'description': 'String message of error cause.', 'items': {'type': 'string', 'description': 'String message of error cause.'}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['submitSensorStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_initial_tuning = {'tags': ['sensors/v1/sensor'], 'summary': 'Update initial tuning property for a Sensor. (INTERNAL)', 'description': '', 'operationId': 'updateInitialTuning', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to change initial tuning status', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'initialTuning', 'in': 'query', 'description': 'Desired new Sensor initial tuning status', 'required': True, 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'description': 'Any comment to append to the request. If not specified the service will generate a generic one.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update initial tuning property for a Sensor.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_interface = {'tags': ['sensors/v1/interface'], 'summary': 'Update Interface by ID (INTERNAL)', 'description': '', 'operationId': 'updateInterface', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the Sensor to which the Interface belongs', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'interface', 'in': 'path', 'description': 'ID of the Interface we want to update', 'required': True, 'schema': {'type': 'str', 'minLength': 1}, 'type': 'str', 'minLength': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an existing Interface on an existing Sensor', 'properties': {'newInterfaceName': {'type': 'str', 'description': 'If specified, set new name of the Sensor Interface. Must be unique per Sensor.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'location': {'type': 'str', 'description': 'New Location ID or short name of the Sensor Interface.'}, 'active': {'type': 'bool', 'description': 'New Status of the Sensor interface'}, 'sslTerminating': {'type': 'bool', 'default': False, 'description': "Sensor interface's new SSL terminating status"}, 'otEnvironment': {'type': 'bool', 'default': False, 'description': "Sensor interface's new OT environment flag"}, 'restrictedITEnvironment': {'type': 'bool', 'default': False, 'description': "Sensor interface's new restricted IT environment flag"}, 'otenvironment': {'type': 'boolean'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update Interface by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}}}}}, '220': {'description': 'No update performed', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensorInterface'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_sensor = {'tags': ['sensors/v1/sensor'], 'summary': 'Update sensor by ID (INTERNAL)', 'description': '', 'operationId': 'updateSensor', 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to update', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an existing Sensor', 'properties': {'location': {'type': 'str', 'description': "ID or shortname of the Sensor's location"}, 'clusterSensorID': {'type': 'int', 'deprecated': True, 'description': 'Deprecated. Please use the dedicated clustering endpoint(s) instead.', 'minimum': 0}, 'information': {'type': 'str', 'description': 'Sensor information'}, 'hostname': {'type': 'str', 'description': "Sensor hostname.\nUnless the Sensor's additional data is unique the hostname must also be unique for its owning customer.\nIf removing the hostname the Sensor must have a valid IP address.\nSensor hostname allows letters, numbers and special characters (._:;-).\n", 'pattern': '([\\p{Alnum}\\._:;-]+)'}, 'ipAddress': {'type': 'str', 'description': "Sensor's IP address.\nUnless the Sensor's additional data is unique the IP address must also be unique for its owning customer.\nIf removing the IP address the Sensor must have a valid IP address.\n [format:ip]", 'x-Argus-Format': 'ip'}, 'additionalData': {'type': 'str', 'description': 'Additional identifier'}, 'application': {'type': 'str', 'description': 'ID or shortname of Sensor type'}, 'expectedUpdateTime': {'type': 'int', 'description': 'Expected updated time, only set if overrideDefaultUpdateTime is true', 'minimum': 1}, 'initialTuning': {'type': 'bool', 'default': False, 'description': 'If specified un/set the flag indicating the Sensor is in initial tuning'}, 'overrideDefaultUpdateTime': {'type': 'bool', 'default': False, 'description': "Sensor's override default update time flag"}, 'sharedCustomerData': {'type': 'bool', 'default': False, 'description': 'If specified un/set the flag indicating the Sensor shares data between customers'}, 'sslTerminating': {'type': 'bool', 'default': False, 'description': 'If specified un/set the flag indicating the Sensor is SSL terminating'}, 'reportingSeverity': {'type': 'str', 'description': "If specified overwrite the ReportingSeverity level for this Sensor's Application", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'contractual': {'type': 'bool', 'default': False, 'description': "If specified un/set the flag indicating the Sensor contributes to the customer's contractual Sensor limit"}, 'otEnvironment': {'type': 'bool', 'default': False, 'description': 'If specified un/set the flag indicating the Sensor is in an OT environment'}, 'restrictedITEnvironment': {'type': 'bool', 'default': False, 'description': 'If specified un/set the flag indicating the Sensor is in a restricted IT environment'}, 'sslterminating': {'type': 'boolean'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update sensor by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}}}}}}, '220': {'description': 'No update performed', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateSensor'], 'x-Argus-ApiStatus': 'INTERNAL'}