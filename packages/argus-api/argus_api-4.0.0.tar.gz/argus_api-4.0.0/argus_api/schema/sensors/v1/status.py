"""Autogenerated API schema"""
from argus_api import session


get_sensor_status_by_status = {'tags': ['sensors/v1/status'], 'summary': 'Fetch sensor status by ID (INTERNAL)', 'description': '', 'operationId': 'getSensorStatusByStatus', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of sensor to fetch status for', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Fetch sensor status by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': "Sensor Status SPI model class for a Sensor's Status", 'properties': {'lastEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for the last event registered by the sensor.'}, 'lastUpdateTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Latest timestamp when the sensor status was updated.'}, 'lastAnalyzedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Latest timestamp when the analyzer encountered an event for the sensor.'}, 'messageRate': {'type': 'number', 'format': 'double', 'description': 'Count per second of events throughput for the sensor (since last report).'}, 'lastAgentHost': {'type': 'string', 'description': 'Host name/Container name of reporting sensor.'}, 'sensor': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'CLOCK_OUT_OF_SYNC']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'deprecated': True, 'x-Argus-Required-Permissions': ['viewSensorStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_sensor_status = {'tags': ['sensors/v1/status'], 'summary': 'List sensor status (INTERNAL)', 'description': '', 'operationId': 'listSensorStatus', 'parameters': [{'name': 'customerID', 'in': 'query', 'description': 'Limit search to these customer IDs', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'applicationID', 'in': 'query', 'description': '', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'applicationName', 'in': 'query', 'description': 'Limit search to these applications by name', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Limit search by sensor hostname or IP address', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'List sensor status', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': "Sensor Status SPI model class for a Sensor's Status", 'properties': {'lastEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for the last event registered by the sensor.'}, 'lastUpdateTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Latest timestamp when the sensor status was updated.'}, 'lastAnalyzedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Latest timestamp when the analyzer encountered an event for the sensor.'}, 'messageRate': {'type': 'number', 'format': 'double', 'description': 'Count per second of events throughput for the sensor (since last report).'}, 'lastAgentHost': {'type': 'string', 'description': 'Host name/Container name of reporting sensor.'}, 'sensor': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'CLOCK_OUT_OF_SYNC']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSensorStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_sensor_status = {'tags': ['sensors/v1/status'], 'summary': 'Search sensor status (INTERNAL)', 'description': '', 'operationId': 'searchSensorStatus', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Search criteria for Sensor Statuses', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'Limit result to objects belonging to these customers', 'items': {'type': 'int', 'description': 'Limit result to objects belonging to these customers', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'keywords': {'type': 'list', 'description': 'Search for sensors matching these hostnames or IP-addresses', 'items': {'type': 'str', 'description': 'Search for sensors matching these hostnames or IP-addresses'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strictly different keywords should be matched (default match any keywords)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'enum': ['all', 'ipAddress', 'hostname', 'additionalData', 'id']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for sensors belonging to customers identified by their ID or shortname', 'items': {'type': 'str', 'description': 'Search for sensors belonging to customers identified by their ID or shortname'}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'minExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by min expected update time interval in millis'}, 'maxExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by max expected update time interval in millis'}, 'excludeReportingSensors': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'excludeSensorsInScheduledDowntime': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'excludeSensorsInReportingCluster': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'lastAgentHost': {'type': 'str', 'description': 'Include sensors where lastAgentHost matches this string (entire/partial)'}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': {'type': 'dict', 'description': 'Search criteria for Sensor Statuses', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'Limit result to objects belonging to these customers', 'items': {'type': 'int', 'description': 'Limit result to objects belonging to these customers', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'keywords': {'type': 'list', 'description': 'Search for sensors matching these hostnames or IP-addresses', 'items': {'type': 'str', 'description': 'Search for sensors matching these hostnames or IP-addresses'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strictly different keywords should be matched (default match any keywords)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'enum': ['all', 'ipAddress', 'hostname', 'additionalData', 'id']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for sensors belonging to customers identified by their ID or shortname', 'items': {'type': 'str', 'description': 'Search for sensors belonging to customers identified by their ID or shortname'}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'minExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by min expected update time interval in millis'}, 'maxExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by max expected update time interval in millis'}, 'excludeReportingSensors': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'excludeSensorsInScheduledDowntime': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'excludeSensorsInReportingCluster': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'lastAgentHost': {'type': 'str', 'description': 'Include sensors where lastAgentHost matches this string (entire/partial)'}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': [], 'includeFlag': [], 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'SSL_TERMINATING']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'SSL_TERMINATING']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'sensorID': {'type': 'list', 'description': 'Search for specific sensors by ID', 'items': {'type': 'int', 'description': 'Search for specific sensors by ID'}, 'uniqueItems': True}, 'locationName': {'type': 'list', 'deprecated': True, 'description': 'Use location instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'Use location instead.'}, 'uniqueItems': True}, 'applicationName': {'type': 'list', 'description': 'Search for sensors by application type', 'items': {'type': 'str', 'description': 'Search for sensors by application type'}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['scheduledDowntimeFromTime', 'scheduledDowntimeUntilTime', 'lastAcknowledgedTimestamp', 'lastUpdatedTimestamp', 'createdTimestamp', 'deletedTimestamp', 'lastEventTimestamp', 'lastUpdateTimestamp', 'lastAnalyzedTimestamp', 'all']}, 'uniqueItems': True}}}, 'includeFlag': {'type': 'dict', 'description': 'Search criteria for Sensor Statuses', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'Limit result to objects belonging to these customers', 'items': {'type': 'int', 'description': 'Limit result to objects belonging to these customers', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'keywords': {'type': 'list', 'description': 'Search for sensors matching these hostnames or IP-addresses', 'items': {'type': 'str', 'description': 'Search for sensors matching these hostnames or IP-addresses'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strictly different keywords should be matched (default match any keywords)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'enum': ['all', 'ipAddress', 'hostname', 'additionalData', 'id']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for sensors belonging to customers identified by their ID or shortname', 'items': {'type': 'str', 'description': 'Search for sensors belonging to customers identified by their ID or shortname'}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'minExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by min expected update time interval in millis'}, 'maxExpectedUpdateTimeInterval': {'type': 'int', 'description': 'Filter sensors by max expected update time interval in millis'}, 'excludeReportingSensors': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'excludeSensorsInScheduledDowntime': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'excludeSensorsInReportingCluster': {'type': 'bool', 'deprecated': True, 'description': 'Use exclude flags'}, 'lastAgentHost': {'type': 'str', 'description': 'Include sensors where lastAgentHost matches this string (entire/partial)'}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': [], 'includeFlag': [], 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'SSL_TERMINATING']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'SSL_TERMINATING']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'sensorID': {'type': 'list', 'description': 'Search for specific sensors by ID', 'items': {'type': 'int', 'description': 'Search for specific sensors by ID'}, 'uniqueItems': True}, 'locationName': {'type': 'list', 'deprecated': True, 'description': 'Use location instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'Use location instead.'}, 'uniqueItems': True}, 'applicationName': {'type': 'list', 'description': 'Search for sensors by application type', 'items': {'type': 'str', 'description': 'Search for sensors by application type'}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['scheduledDowntimeFromTime', 'scheduledDowntimeUntilTime', 'lastAcknowledgedTimestamp', 'lastUpdatedTimestamp', 'createdTimestamp', 'deletedTimestamp', 'lastEventTimestamp', 'lastUpdateTimestamp', 'lastAnalyzedTimestamp', 'all']}, 'uniqueItems': True}}}, 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'SSL_TERMINATING']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'SSL_TERMINATING']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'sensorID': {'type': 'list', 'description': 'Search for specific sensors by ID', 'items': {'type': 'int', 'description': 'Search for specific sensors by ID'}, 'uniqueItems': True}, 'locationName': {'type': 'list', 'deprecated': True, 'description': 'Use location instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'Use location instead.'}, 'uniqueItems': True}, 'applicationName': {'type': 'list', 'description': 'Search for sensors by application type', 'items': {'type': 'str', 'description': 'Search for sensors by application type'}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['scheduledDowntimeFromTime', 'scheduledDowntimeUntilTime', 'lastAcknowledgedTimestamp', 'lastUpdatedTimestamp', 'createdTimestamp', 'deletedTimestamp', 'lastEventTimestamp', 'lastUpdateTimestamp', 'lastAnalyzedTimestamp', 'all']}, 'uniqueItems': True}}}}}}, 'responses': {'default': {'description': 'Search sensor status', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': "Sensor Status SPI model class for a Sensor's Status", 'properties': {'lastEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for the last event registered by the sensor.'}, 'lastUpdateTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Latest timestamp when the sensor status was updated.'}, 'lastAnalyzedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Latest timestamp when the analyzer encountered an event for the sensor.'}, 'messageRate': {'type': 'number', 'format': 'double', 'description': 'Count per second of events throughput for the sensor (since last report).'}, 'lastAgentHost': {'type': 'string', 'description': 'Host name/Container name of reporting sensor.'}, 'sensor': {'type': 'object', 'description': 'Sensor SPI model class', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'clusterSensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'expectedUpdateTime': {'type': 'integer', 'format': 'int64', 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'integer', 'format': 'int64', 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'integer', 'format': 'int64', 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'string', 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'string', 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'string', 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL', 'OT_ENVIRONMENT', 'RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'array', 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'object', 'description': 'Interface SPI model class for a Sensor Interface', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': "The Interface's ID"}, 'interfaceName': {'type': 'string', 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'integer', 'format': 'int64', 'deprecated': True, 'description': 'Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}}}, 'active': {'type': 'boolean', 'description': 'Whether the Interface is active'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Flags of the Interface'}, 'sensor': {'type': 'object', 'description': 'A simplified representation of a Sensor containing some basic information', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'hostname': {'type': 'string', 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['deleted', 'sslTerminating', 'otEnvironment', 'restrictedITEnvironment']}, 'uniqueItems': True}}}}, 'reportingSeverity': {'type': 'string', 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'object', 'properties': {'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'CLOCK_OUT_OF_SYNC']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewSensorStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}