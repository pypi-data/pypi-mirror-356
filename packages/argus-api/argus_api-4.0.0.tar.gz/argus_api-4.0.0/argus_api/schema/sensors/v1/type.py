"""Autogenerated API schema"""
from argus_api import session


add_sensor_type = {'tags': ['sensors/v1/type'], 'summary': 'Create a new sensor type (INTERNAL)', 'description': '', 'operationId': 'addSensorType', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to create a new Sensor Type', 'properties': {'shortName': {'type': 'str', 'description': 'Short name of Sensor Type, needs to be unique', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'description': 'Name of sensor type', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'url': {'type': 'str', 'description': 'URL of sensor type', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'expectedSensorUpdateTime': {'type': 'int', 'default': 0, 'description': 'Expected maximum update time duration in millis of sensor which belong to the type', 'minimum': 0}, 'department': {'type': 'str', 'default': 'none', 'description': 'Department that the sensor type belongs to', 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'monitorCollectionOnly': {'type': 'bool', 'default': False, 'description': 'Flag to determine whether sensors of this type are monitored by analysis or only by collection'}, 'reportingSeverity': {'type': 'str', 'default': 'medium', 'description': 'Flag to determine escalation workflow for Sensors of this type', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'required': ['name', 'shortName']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create a new sensor type', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['registerApplication'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_sensor_type = {'tags': ['sensors/v1/type'], 'summary': 'Delete a sensor type and update existing Sensors of that type to a new sensor type (INTERNAL)', 'description': '', 'operationId': 'deleteSensorType', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Sensor type ID or short name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'newType', 'in': 'query', 'description': 'Sensor type delete request', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete a sensor type and update existing Sensors of that type to a new sensor type', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}}}}}}, '220': {'description': 'No update performed', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['removeApplication'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_sensor_type = {'tags': ['sensors/v1/type'], 'summary': 'Get sensor type by ID or short name (INTERNAL)', 'description': '', 'operationId': 'getSensorType', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Sensor type ID or short name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get sensor type by ID or short name', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewApplications'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_sensor_types = {'tags': ['sensors/v1/type'], 'summary': 'Get all sensor types (INTERNAL)', 'description': '', 'operationId': 'getSensorTypes', 'parameters': [{'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted sensor types in the response', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}], 'responses': {'default': {'description': 'Get all sensor types', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewApplications'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_sensor_type = {'tags': ['sensors/v1/type'], 'summary': 'Update a sensor type (INTERNAL)', 'description': '', 'operationId': 'updateSensorType', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Sensor type ID or short name', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an existing new Sensor Type', 'properties': {'shortName': {'type': 'str', 'description': 'New unique short name of the Sensor Type.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'description': 'New name of the Sensor Type', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'url': {'type': 'str', 'description': 'New URL of the Sensor Type', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'expectedSensorUpdateTime': {'type': 'int', 'description': 'Update expected Sensor update time for the Sensor Type', 'minimum': 0}, 'department': {'type': 'str', 'description': 'Update department of the Sensor Type', 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'monitorCollectionOnly': {'type': 'bool', 'description': 'Flag to determine whether Sensors of this Type are monitored by analysis or only by collection'}, 'reportingSeverity': {'type': 'str', 'description': 'Flag to determine escalation workflow for Sensors of this type', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update a sensor type', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': "Application SPI model class for a Sensor's Application", 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the Application'}, 'name': {'type': 'string', 'description': "The Application's display name"}, 'shortName': {'type': 'string', 'description': "The Application's unique short name"}, 'url': {'type': 'string', 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'integer', 'format': 'int64', 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'string', 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'string', 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}, 'uniqueItems': True}, 'flag': {'type': 'integer', 'format': 'int64', 'writeOnly': True}}}}}}}}, '220': {'description': 'No update performed', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateApplication'], 'x-Argus-ApiStatus': 'INTERNAL'}