"""Autogenerated API schema"""
from argus_api import session


add_customer_network = {'tags': ['customernetworks/v1'], 'summary': 'Add new customer network (PUBLIC)', 'description': '', 'operationId': 'addCustomerNetwork', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request model for adding a single customer network', 'properties': {'customer': {'type': 'str', 'description': 'Customer ID or short name of the customer that the network belongs to'}, 'location': {'type': 'str', 'default': '0', 'deprecated': True, 'description': 'DEPRECATED. Location ID or short name of the location where the network is located'}, 'flagsToSet': {'type': 'list', 'description': 'Flags to set for the network', 'items': {'type': 'str', 'description': 'Flags to set for the network', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS']}, 'uniqueItems': True}, 'zone': {'type': 'str', 'description': 'Zone of the network', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'description': {'type': 'str', 'description': 'Description of the customer network. Maximum number of characters is 2048.'}, 'networkAddress': {'type': 'str', 'description': 'IP address of the customer network [format:ip]', 'x-Argus-Format': 'ip'}, 'verified': {'type': 'bool', 'default': True, 'description': 'DEPRECATED. Whether to create the network already Verified.'}}, 'required': ['customer', 'description', 'networkAddress', 'zone']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add new customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_customer_network_comment = {'tags': ['customernetworks/v1'], 'summary': 'Add comment for customer network (PUBLIC)', 'description': '', 'operationId': 'addCustomerNetworkComment', 'parameters': [{'name': 'networkID', 'in': 'path', 'description': 'ID of network to update', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request model for adding a network comment', 'properties': {'comment': {'type': 'str', 'description': 'Comment to add to the network', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add comment for customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information on a customer network comment', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'comment': {'type': 'string', 'description': "The comment's text."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addCustomerNetworkComment'], 'x-Argus-ApiStatus': 'PUBLIC'}
bulk_add_customer_networks = {'tags': ['customernetworks/v1'], 'summary': 'Bulk add/update customer networks (PUBLIC)', 'description': '', 'operationId': 'bulkAddCustomerNetworks', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request for bulk adding customer networks', 'properties': {'customer': {'type': 'str', 'description': 'Customer ID or short name of the customer that the networks belong to'}, 'overwrite': {'type': 'bool', 'default': True, 'description': 'Overwrite existing networks configuration'}, 'verified': {'type': 'bool', 'default': True, 'description': 'DEPRECATED. Whether to create the networks already Verified.'}, 'networks': {'type': 'list', 'items': {'type': 'dict', 'description': 'Request model for adding a network as part of a bulk add operation', 'properties': {'location': {'type': 'str', 'default': '0', 'deprecated': True, 'description': 'DEPRECATED. Location ID or short name of the location where the network is located'}, 'flagsToSet': {'type': 'list', 'description': 'Flags to set for the network', 'items': {'type': 'str', 'description': 'Flags to set for the network', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS']}, 'uniqueItems': True}, 'zone': {'type': 'str', 'description': 'Zone of the network', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'description': {'type': 'str', 'description': 'Description of the customer network. Maximum number of characters is 255.'}, 'networkAddress': {'type': 'str', 'description': 'IP address of the customer network [format:ip]', 'x-Argus-Format': 'ip'}}, 'required': ['description', 'networkAddress', 'zone']}, 'maxItems': 2147483647, 'minItems': 1}}, 'required': ['customer', 'networks']}}}, 'required': True}, 'responses': {'default': {'description': 'Bulk add/update customer networks', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addCustomerNetwork', 'updateCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_customer_network = {'tags': ['customernetworks/v1'], 'summary': 'Delete customer network (PUBLIC)', 'description': '', 'operationId': 'deleteCustomerNetwork', 'parameters': [{'name': 'networkID', 'in': 'path', 'description': 'ID of network to delete', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Delete customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deleteCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_customer_network_comment = {'tags': ['customernetworks/v1'], 'summary': 'Delete comment from customer network (PUBLIC)', 'description': '', 'operationId': 'deleteCustomerNetworkComment', 'parameters': [{'name': 'networkID', 'in': 'path', 'description': 'ID of parent network', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'commentID', 'in': 'path', 'description': 'ID of comment to delete', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete comment from customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information on a customer network comment', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'comment': {'type': 'string', 'description': "The comment's text."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['removeCustomerNetworkComment'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_customer_network = {'tags': ['customernetworks/v1'], 'summary': 'Get customer network (PUBLIC)', 'description': '', 'operationId': 'getCustomerNetwork', 'parameters': [{'name': 'networkID', 'in': 'path', 'description': 'ID of network to get', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Get customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_customer_network_comments = {'tags': ['customernetworks/v1'], 'summary': "Get network's comments (PUBLIC)", 'description': '', 'operationId': 'getCustomerNetworkComments', 'parameters': [{'name': 'networkID', 'in': 'path', 'description': 'ID of network', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of comments', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned comments', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': "Get network's comments", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing information on a customer network comment', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'comment': {'type': 'string', 'description': "The comment's text."}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_customer_networks = {'tags': ['customernetworks/v1'], 'summary': 'Get networks belonging to customer(s) (PUBLIC)', 'description': '', 'operationId': 'getCustomerNetworks', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}, {'name': 'customerID', 'in': 'query', 'description': 'ID of customer(s)', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of networks', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned networks', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'Get networks belonging to customer(s)', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
lenient_bulk_add_customer_networks = {'tags': ['customernetworks/v1'], 'summary': 'Bulk add/update customer networks with the option of ignoring failures (PUBLIC)', 'description': '', 'operationId': 'lenientBulkAddCustomerNetworks', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request model for leniently bulk adding networks', 'properties': {'customer': {'type': 'str', 'description': 'Customer ID or short name of the customer that the networks belong to'}, 'domain': {'type': 'str', 'description': "The domain of the customer. Defaults to the current user's domain"}, 'overwrite': {'type': 'bool', 'default': True, 'description': 'Overwrite existing networks configuration'}, 'networks': {'type': 'list', 'items': {'type': 'dict', 'description': 'Request model for adding a network as part of a lenient bulk add operation', 'properties': {'flags': {'type': 'list', 'description': 'Flags to set for the network', 'items': {'type': 'str', 'description': 'Flags to set for the network', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS']}, 'uniqueItems': True}, 'zone': {'type': 'str', 'description': 'Zone of the network', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'description': {'type': 'str', 'description': 'Description of the customer network. Maximum number of characters is 255.'}, 'networkAddress': {'type': 'str', 'description': 'IP address of the customer network [format:ip]', 'x-Argus-Format': 'ip'}}, 'required': ['description', 'networkAddress', 'zone']}, 'maxItems': 2147483647, 'minItems': 1}, 'ignoreOnFailed': {'type': 'bool', 'default': False, 'description': 'Whether to ignore networks that fails to be added. If true, all networks that can be added, will be added'}}, 'required': ['customer', 'networks']}}}, 'required': True}, 'responses': {'default': {'description': 'Bulk add/update customer networks with the option of ignoring failures', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information about the result of the bulk add operation', 'properties': {'accepted': {'type': 'integer', 'format': 'int32', 'description': 'The number of networks that were accepted and added'}, 'rejected': {'type': 'integer', 'format': 'int32', 'description': 'The number of networks that were rejected and not added'}, 'errors': {'type': 'array', 'description': 'Information about networks that were rejected', 'items': {'type': 'object', 'description': 'Response containing detailed error information about a failed add operation', 'properties': {'index': {'type': 'integer', 'format': 'int32', 'description': 'The index of the add request as it appears in the request'}, 'errorMessages': {'type': 'array', 'description': 'Messages for causes of errors', 'items': {'type': 'string', 'description': 'Messages for causes of errors'}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addCustomerNetwork', 'updateCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
search_customer_network = {'tags': ['customernetworks/v1'], 'summary': 'Search customer network (PUBLIC)', 'description': '', 'operationId': 'searchCustomerNetwork', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to search for customer networks', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'description': 'Request to search for customer networks', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'addresses': {'type': 'list', 'description': 'A set of IP addresses matched against networks', 'items': {'type': 'dict', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}}}}, 'uniqueItems': True}, 'includeSupernet': {'type': 'bool', 'default': True, 'description': 'Network in search criteria will be searched for matching supernets'}, 'includeSubnet': {'type': 'bool', 'default': True, 'description': 'Network in search criteria will be searched for matching subnets'}, 'includeSubCustomers': {'type': 'bool', 'default': False, 'description': 'If true, customer criteria will be expanded to include their sub customers when searching for customer networks.'}, 'keywords': {'type': 'list', 'description': "A set of keywords matched against network's description", 'items': {'type': 'str', 'description': "A set of keywords matched against network's description"}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'KeywordMatchStrategy to define how keywords are queried for logically i.e. equivalent of AND/OR', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords', 'enum': ['description', 'all']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Start of time search period'}, 'endTimestamp': {'type': 'int', 'description': 'End of time search period'}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'TimeMatchStrategy to define how to match startTimestamp and endTimestamp with provided timeFieldStrategies', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'createdTimestamp', 'description': 'TimeFieldStrategy to define which timestamp field(s) to match.', 'items': {'type': 'str', 'default': 'createdTimestamp', 'description': 'TimeFieldStrategy to define which timestamp field(s) to match.', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}, 'uniqueItems': True}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'networkAddress', 'maskBits', 'createdTimestamp', 'lastUpdatedTimestamp', '-id', '-networkAddress', '-maskBits', '-createdTimestamp', '-lastUpdatedTimestamp']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS', 'RFC1918', 'PRIVATE_ADDRESS']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS', 'RFC1918', 'PRIVATE_ADDRESS']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'addresses': {'type': 'list', 'description': 'A set of IP addresses matched against networks', 'items': {'type': 'dict', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}}}}, 'uniqueItems': True}, 'includeSupernet': {'type': 'bool', 'default': True, 'description': 'Network in search criteria will be searched for matching supernets'}, 'includeSubnet': {'type': 'bool', 'default': True, 'description': 'Network in search criteria will be searched for matching subnets'}, 'includeSubCustomers': {'type': 'bool', 'default': False, 'description': 'If true, customer criteria will be expanded to include their sub customers when searching for customer networks.'}, 'keywords': {'type': 'list', 'description': "A set of keywords matched against network's description", 'items': {'type': 'str', 'description': "A set of keywords matched against network's description"}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'KeywordMatchStrategy to define how keywords are queried for logically i.e. equivalent of AND/OR', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords', 'enum': ['description', 'all']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Start of time search period'}, 'endTimestamp': {'type': 'int', 'description': 'End of time search period'}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'TimeMatchStrategy to define how to match startTimestamp and endTimestamp with provided timeFieldStrategies', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'createdTimestamp', 'description': 'TimeFieldStrategy to define which timestamp field(s) to match.', 'items': {'type': 'str', 'default': 'createdTimestamp', 'description': 'TimeFieldStrategy to define which timestamp field(s) to match.', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}, 'uniqueItems': True}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'networkAddress', 'maskBits', 'createdTimestamp', 'lastUpdatedTimestamp', '-id', '-networkAddress', '-maskBits', '-createdTimestamp', '-lastUpdatedTimestamp']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS', 'RFC1918', 'PRIVATE_ADDRESS']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS', 'RFC1918', 'PRIVATE_ADDRESS']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
unverify_customer_network = {'tags': ['customernetworks/v1'], 'summary': 'Unverifies a verified customer network (PUBLIC)', 'description': '', 'operationId': 'unverifyCustomerNetwork', 'parameters': [{'name': 'networkID', 'in': 'path', 'description': 'ID of network to unverify', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Unverifies a verified customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['verifyCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_customer_network = {'tags': ['customernetworks/v1'], 'summary': 'Update customer network (PUBLIC)', 'description': '', 'operationId': 'updateCustomerNetwork', 'parameters': [{'name': 'networkID', 'in': 'path', 'description': 'ID of network to update', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request model for updating a network', 'properties': {'location': {'type': 'str', 'description': 'DEPRECATED. Location ID or short name of the location where the network is located'}, 'description': {'type': 'str', 'description': 'Description of the customer network. Maximum number of characters is 2048.'}, 'flagsToSet': {'type': 'list', 'description': 'Flags to set for the network. This property takes precedence over the content of flagsToEnable and flagsToDisable properties. A permission check if performed to verify that the user is allowed to set the flags, and disable any flags already present on the network.', 'items': {'type': 'str', 'description': 'Flags to set for the network. This property takes precedence over the content of flagsToEnable and flagsToDisable properties. A permission check if performed to verify that the user is allowed to set the flags, and disable any flags already present on the network.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS']}, 'uniqueItems': True}, 'flagsToEnable': {'type': 'list', 'description': 'Flags to enable for the network. A permission check if performed to verify that the user is allowed to set the flags', 'items': {'type': 'str', 'description': 'Flags to enable for the network. A permission check if performed to verify that the user is allowed to set the flags', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS']}, 'uniqueItems': True}, 'flagsToDisable': {'type': 'list', 'description': 'Flags to disable for the network. A permission check if performed to verify that the user is allowed to disable the flags', 'items': {'type': 'str', 'description': 'Flags to disable for the network. A permission check if performed to verify that the user is allowed to disable the flags', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC', 'APPLIANCE', 'ADCS']}, 'uniqueItems': True}, 'zone': {'type': 'str', 'description': 'Zone of the network', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}
verify_customer_network = {'tags': ['customernetworks/v1'], 'summary': 'Verifies an unverified customer network (PUBLIC)', 'description': '', 'operationId': 'verifyCustomerNetwork', 'parameters': [{'name': 'networkID', 'in': 'path', 'description': 'ID of network to verify', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Verifies an unverified customer network', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response containing information on a customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'location': {'type': 'object', 'description': 'DEPRECATED. Location where the network is', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'description': {'type': 'string', 'description': 'Description of the customer network'}, 'networkAddress': {'type': 'object', 'description': 'IP address of the customer network', 'properties': {'public': {'type': 'boolean'}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'string', 'xml': {'attribute': True}}}}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of last update of the customer network'}, 'createdByUser': {'type': 'object', 'description': 'User which created the customer network', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of creation of the customer network'}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['AUTO', 'NAT', 'PROXY', 'SCANNER', 'CLIENT', 'SERVER', 'DNS', 'GUEST', 'UNASSIGNED', 'DELETED', 'DOMAIN_CONTROLLER', 'SHARED_HOST', 'UNVERIFIED', 'HOME_NET', 'EXCLUDE_HOME_NET', 'MANAGED_BY_SOC']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['verifyCustomerNetwork'], 'x-Argus-ApiStatus': 'PUBLIC'}