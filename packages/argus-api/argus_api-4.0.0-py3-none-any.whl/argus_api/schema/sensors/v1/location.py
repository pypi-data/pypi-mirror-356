"""Autogenerated API schema"""
from argus_api import session


create_location = {'tags': ['sensors/v1/location'], 'summary': 'Creates a location (INTERNAL)', 'description': '', 'operationId': 'createLocation', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to create a Location', 'properties': {'name': {'type': 'str', 'description': 'Name of some physical Location', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'shortName': {'type': 'str', 'description': 'Short name of some physical Location', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'networkZone': {'type': 'str', 'description': 'Network zone for some physical Location', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'customerID': {'type': 'int', 'description': 'CustomerID for some physical Location', 'minimum': 0}, 'timeZoneDescription': {'type': 'str', 'default': 'Europe/Oslo', 'description': 'TimeZone description for some physical Location'}}, 'required': ['name', 'shortName', 'timeZoneDescription']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Creates a location', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Location SPI model class for a physical location', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The name of the Location'}, 'shortName': {'type': 'string', 'description': 'The unique shortname of the Location'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}, 'customerInfo': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'timeZone': {'type': 'object', 'description': 'The TimeZone in which the Location is located', 'properties': {'description': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was created'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was last updated'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the location was deleted, 0 if active'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'external': {'type': 'boolean'}, 'internal': {'type': 'boolean'}, 'globalCustomer': {'type': 'boolean'}, 'dmz': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addLocation', 'addGlobalLocation'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_location = {'tags': ['sensors/v1/location'], 'summary': 'Deletes location (INTERNAL)', 'description': '', 'operationId': 'deleteLocation', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or short name of location to delete', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Deletes location', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Location SPI model class for a physical location', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The name of the Location'}, 'shortName': {'type': 'string', 'description': 'The unique shortname of the Location'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}, 'customerInfo': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'timeZone': {'type': 'object', 'description': 'The TimeZone in which the Location is located', 'properties': {'description': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was created'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was last updated'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the location was deleted, 0 if active'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'external': {'type': 'boolean'}, 'internal': {'type': 'boolean'}, 'globalCustomer': {'type': 'boolean'}, 'dmz': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Location not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['removeLocation', 'removeGlobalLocation'], 'x-Argus-ApiStatus': 'INTERNAL'}
find_locations = {'tags': ['sensors/v1/location'], 'summary': 'Search locations (INTERNAL)', 'description': '', 'operationId': 'findLocations', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Search criteria for Sensor Locations', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'description': 'Search criteria for Sensor Locations', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'searchString': {'type': 'str', 'deprecated': True, 'description': 'Deprecated. Use keywords.'}, 'keywords': {'type': 'list', 'description': 'Search for Locations by exact match on these keywords', 'items': {'type': 'str', 'description': 'Search for Locations by exact match on these keywords'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strictly different keywords should be matched (default match any keywords)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'enum': ['all', 'id', 'name', 'shortName']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'endTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['all', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}, 'uniqueItems': True}, 'user': {'type': 'list', 'description': 'Search for Locations by associated user IDs or short names defined by the UserFieldStrategy', 'items': {'type': 'str', 'description': 'Search for Locations by associated user IDs or short names defined by the UserFieldStrategy'}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which user fields to filter with the submitted user value(s)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which user fields to filter with the submitted user value(s)', 'enum': ['all', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for Locations belonging to customers identified by their ID or shortname', 'items': {'type': 'str', 'description': 'Search for Locations belonging to customers identified by their ID or shortname'}, 'uniqueItems': True}, 'includeGlobal': {'type': 'bool', 'default': True, 'description': 'Include global locations with results regardless of other criteria'}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'searchString': {'type': 'str', 'deprecated': True, 'description': 'Deprecated. Use keywords.'}, 'keywords': {'type': 'list', 'description': 'Search for Locations by exact match on these keywords', 'items': {'type': 'str', 'description': 'Search for Locations by exact match on these keywords'}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strictly different keywords should be matched (default match any keywords)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields)', 'enum': ['all', 'id', 'name', 'shortName']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'endTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['all', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}, 'uniqueItems': True}, 'user': {'type': 'list', 'description': 'Search for Locations by associated user IDs or short names defined by the UserFieldStrategy', 'items': {'type': 'str', 'description': 'Search for Locations by associated user IDs or short names defined by the UserFieldStrategy'}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which user fields to filter with the submitted user value(s)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which user fields to filter with the submitted user value(s)', 'enum': ['all', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for Locations belonging to customers identified by their ID or shortname', 'items': {'type': 'str', 'description': 'Search for Locations belonging to customers identified by their ID or shortname'}, 'uniqueItems': True}, 'includeGlobal': {'type': 'bool', 'default': True, 'description': 'Include global locations with results regardless of other criteria'}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}}}}}}, 'responses': {'default': {'description': 'Search locations', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Location SPI model class for a physical location', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The name of the Location'}, 'shortName': {'type': 'string', 'description': 'The unique shortname of the Location'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}, 'customerInfo': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'timeZone': {'type': 'object', 'description': 'The TimeZone in which the Location is located', 'properties': {'description': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was created'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was last updated'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the location was deleted, 0 if active'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'external': {'type': 'boolean'}, 'internal': {'type': 'boolean'}, 'globalCustomer': {'type': 'boolean'}, 'dmz': {'type': 'boolean'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewLocations'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_location = {'tags': ['sensors/v1/location'], 'summary': 'Fetch Location by ID or short name (INTERNAL)', 'description': '', 'operationId': 'getLocation', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or short name of location to fetch', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch Location by ID or short name', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Location SPI model class for a physical location', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The name of the Location'}, 'shortName': {'type': 'string', 'description': 'The unique shortname of the Location'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}, 'customerInfo': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'timeZone': {'type': 'object', 'description': 'The TimeZone in which the Location is located', 'properties': {'description': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was created'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was last updated'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the location was deleted, 0 if active'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'external': {'type': 'boolean'}, 'internal': {'type': 'boolean'}, 'globalCustomer': {'type': 'boolean'}, 'dmz': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewLocations'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_locations = {'tags': ['sensors/v1/location'], 'summary': 'List locations (INTERNAL)', 'description': '', 'operationId': 'listLocations', 'parameters': [{'name': 'customerID', 'in': 'query', 'description': 'Limit search to these customer IDs', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'includeGlobal', 'in': 'query', 'description': 'Include global locations', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted locations', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'responses': {'default': {'description': 'List locations', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Location SPI model class for a physical location', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The name of the Location'}, 'shortName': {'type': 'string', 'description': 'The unique shortname of the Location'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}, 'customerInfo': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'timeZone': {'type': 'object', 'description': 'The TimeZone in which the Location is located', 'properties': {'description': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was created'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was last updated'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the location was deleted, 0 if active'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'external': {'type': 'boolean'}, 'internal': {'type': 'boolean'}, 'globalCustomer': {'type': 'boolean'}, 'dmz': {'type': 'boolean'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewLocations'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_location = {'tags': ['sensors/v1/location'], 'summary': 'Updates location (INTERNAL)', 'description': '', 'operationId': 'updateLocation', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or short name of location to update', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an existing Location', 'properties': {'name': {'type': 'str', 'description': 'New name for the Location', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'shortName': {'type': 'str', 'description': 'New short name for the Location', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'networkZone': {'type': 'str', 'description': 'New network zone for the location', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'timeZoneIdOrName': {'type': 'str', 'description': 'New TimeZone for the Location'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Updates location', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Location SPI model class for a physical location', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'The name of the Location'}, 'shortName': {'type': 'string', 'description': 'The unique shortname of the Location'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL', 'DELETED']}, 'uniqueItems': True}, 'customerInfo': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'timeZone': {'type': 'object', 'description': 'The TimeZone in which the Location is located', 'properties': {'description': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was created'}, 'createdByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the Location was last updated'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the location was deleted, 0 if active'}, 'deletedByUser': {'type': 'object', 'description': 'The user who deleted the Sensor', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'zone': {'type': 'string', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'external': {'type': 'boolean'}, 'internal': {'type': 'boolean'}, 'globalCustomer': {'type': 'boolean'}, 'dmz': {'type': 'boolean'}}}}}}}}, '220': {'description': 'No update performed', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateLocation', 'updateGlobalLocation'], 'x-Argus-ApiStatus': 'INTERNAL'}