"""Autogenerated API schema"""
from argus_api import session


add_property_descriptor = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Create a new property descriptor (PUBLIC)', 'description': '', 'operationId': 'addPropertyDescriptor', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to add new property descriptor.', 'properties': {'defaultValue': {'type': 'object'}, 'externallyManaged': {'type': 'bool', 'description': 'If true, mark this property as externally managed.'}, 'hidden': {'type': 'bool', 'description': 'If true, this property will be hidden in the UI.'}, 'key': {'type': 'str', 'description': 'Key of the new property descriptor', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'localizedDescriptions': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Property descriptor descriptions mapped by language. Supported languages are: english, norwegian. Description in English is required.'}, 'description': 'Property descriptor descriptions mapped by language. Supported languages are: english, norwegian. Description in English is required.'}, 'localizedNames': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Property descriptor names mapped by language. Supported languages are: english, norwegian. If no name is set, this defaults to the property key'}, 'description': 'Property descriptor names mapped by language. Supported languages are: english, norwegian. If no name is set, this defaults to the property key'}, 'overwriteIfExists': {'type': 'bool', 'description': 'If true, overwrite existing property if already defined. Default is to fail with a 412 error.'}, 'readFunction': {'type': 'str', 'description': 'The function required to read this property for a customer (default is viewCustomers).'}, 'schema': {'type': 'object'}, 'section': {'type': 'str', 'description': 'Section of the property.', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'int', 'default': 0, 'description': 'Section index for the property. If set this is used to force a sort order. Default is 0, resulting in alphabetical sorting.'}, 'type': {'type': 'str', 'description': 'Type of the property.', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uiSchema': {'type': 'object'}, 'writeFunction': {'type': 'str', 'description': 'The function required to write this property for a customer (default is updateCustomer).'}}, 'required': ['key', 'localizedDescriptions', 'section', 'type']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create a new property descriptor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Property Descriptor with key, default value, type, and other data', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was created'}, 'defaultJsonValue': {'type': 'object'}, 'defaultValue': {'type': 'string', 'description': 'Default value of the property descriptor (in string format)'}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was deleted'}, 'description': {'type': 'string', 'description': 'Property descriptor description in English'}, 'flags': {'type': 'array', 'description': 'Flags', 'items': {'type': 'string', 'description': 'Flags', 'enum': ['deleted', 'deprecated', 'externallyManaged', 'hidden', 'hasUISchema']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor id'}, 'jsonSchema': {'type': 'object'}, 'key': {'type': 'string', 'description': 'Property descriptor key'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was last updated'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description based on the current user's language settings"}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor descriptions'}, 'description': 'All available property descriptor descriptions'}, 'localizedName': {'type': 'string', 'description': "Property name based on the current user's language settings"}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor names'}, 'description': 'All available property descriptor names'}, 'readFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'section': {'type': 'string', 'description': 'Section of the property descriptor', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'soar', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'integer', 'format': 'int32', 'description': "Property descriptor's index in the relevant section"}, 'type': {'type': 'string', 'description': 'Type of the property descriptor', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uiSchema': {'type': 'object'}, 'writeFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addCustomerPropertyDescriptor'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_property_descriptor_enum_entry = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Create a new property descriptor enum entry (PUBLIC)', 'description': '', 'operationId': 'addPropertyDescriptorEnumEntry', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Id or key of the descriptor', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to add new property descriptor enum entry.', 'properties': {'localizedDescriptions': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Property descriptor enum value descriptions mapped by language. Supported languages are: english, norwegian. Description in English is required.'}, 'description': 'Property descriptor enum value descriptions mapped by language. Supported languages are: english, norwegian. Description in English is required.'}, 'localizedValues': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Property descriptor enum values mapped by language. Supported languages are: english, norwegian. Value in English is required.'}, 'description': 'Property descriptor enum values mapped by language. Supported languages are: english, norwegian. Value in English is required.'}, 'value': {'type': 'str', 'description': 'Value of the new enum entry', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}}, 'required': ['localizedDescriptions', 'localizedValues', 'value']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create a new property descriptor enum entry', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Property Descriptor enum entry.', 'properties': {'description': {'type': 'string', 'description': 'Property descriptor enum value description in English.'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description enum value based on the current user's language settings."}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor enum value descriptions'}, 'description': 'All available property descriptor enum value descriptions'}, 'localizedValue': {'type': 'string', 'description': "Property descriptor description enum value based on the current user's language settings."}, 'localizedValues': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor enum value names'}, 'description': 'All available property descriptor enum value names'}, 'propertyDescriptorId': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor UUID.'}, 'value': {'type': 'string', 'description': 'Property descriptor enum value name in English.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCustomerPropertyDescriptor'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_property_descriptor = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Delete a property descriptor (PUBLIC)', 'description': '', 'operationId': 'deletePropertyDescriptor', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Property descriptor UUID or key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete a property descriptor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Property Descriptor with key, default value, type, and other data', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was created'}, 'defaultJsonValue': {'type': 'object'}, 'defaultValue': {'type': 'string', 'description': 'Default value of the property descriptor (in string format)'}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was deleted'}, 'description': {'type': 'string', 'description': 'Property descriptor description in English'}, 'flags': {'type': 'array', 'description': 'Flags', 'items': {'type': 'string', 'description': 'Flags', 'enum': ['deleted', 'deprecated', 'externallyManaged', 'hidden', 'hasUISchema']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor id'}, 'jsonSchema': {'type': 'object'}, 'key': {'type': 'string', 'description': 'Property descriptor key'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was last updated'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description based on the current user's language settings"}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor descriptions'}, 'description': 'All available property descriptor descriptions'}, 'localizedName': {'type': 'string', 'description': "Property name based on the current user's language settings"}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor names'}, 'description': 'All available property descriptor names'}, 'readFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'section': {'type': 'string', 'description': 'Section of the property descriptor', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'soar', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'integer', 'format': 'int32', 'description': "Property descriptor's index in the relevant section"}, 'type': {'type': 'string', 'description': 'Type of the property descriptor', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uiSchema': {'type': 'object'}, 'writeFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deleteCustomerPropertyDescriptor'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_property_descriptor_enum_entry = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Delete a property descriptor enum entry (PUBLIC)', 'description': '', 'operationId': 'deletePropertyDescriptorEnumEntry', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Property descriptor UUID or key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'idOrValue', 'in': 'path', 'description': 'Property descriptor enum entry UUID or value', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete a property descriptor enum entry', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Property Descriptor with key, default value, type, and other data', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was created'}, 'defaultJsonValue': {'type': 'object'}, 'defaultValue': {'type': 'string', 'description': 'Default value of the property descriptor (in string format)'}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was deleted'}, 'description': {'type': 'string', 'description': 'Property descriptor description in English'}, 'flags': {'type': 'array', 'description': 'Flags', 'items': {'type': 'string', 'description': 'Flags', 'enum': ['deleted', 'deprecated', 'externallyManaged', 'hidden', 'hasUISchema']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor id'}, 'jsonSchema': {'type': 'object'}, 'key': {'type': 'string', 'description': 'Property descriptor key'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was last updated'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description based on the current user's language settings"}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor descriptions'}, 'description': 'All available property descriptor descriptions'}, 'localizedName': {'type': 'string', 'description': "Property name based on the current user's language settings"}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor names'}, 'description': 'All available property descriptor names'}, 'readFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'section': {'type': 'string', 'description': 'Section of the property descriptor', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'soar', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'integer', 'format': 'int32', 'description': "Property descriptor's index in the relevant section"}, 'type': {'type': 'string', 'description': 'Type of the property descriptor', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uiSchema': {'type': 'object'}, 'writeFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCustomerPropertyDescriptor'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_property_descriptor = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Returns a property descriptor identified by its UUID or key (PUBLIC)', 'description': '', 'operationId': 'getPropertyDescriptor', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Property descriptor UUID or key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'includeSchema', 'in': 'query', 'description': 'Include JSONSchema, defaults to false', 'schema': {'type': 'boolean'}, 'type': 'bool'}, {'name': 'includeUISchema', 'in': 'query', 'description': 'Include UISchema, defaults to false', 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'responses': {'default': {'description': 'Returns a property descriptor identified by its UUID or key', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Property Descriptor with key, default value, type, and other data', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was created'}, 'defaultJsonValue': {'type': 'object'}, 'defaultValue': {'type': 'string', 'description': 'Default value of the property descriptor (in string format)'}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was deleted'}, 'description': {'type': 'string', 'description': 'Property descriptor description in English'}, 'flags': {'type': 'array', 'description': 'Flags', 'items': {'type': 'string', 'description': 'Flags', 'enum': ['deleted', 'deprecated', 'externallyManaged', 'hidden', 'hasUISchema']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor id'}, 'jsonSchema': {'type': 'object'}, 'key': {'type': 'string', 'description': 'Property descriptor key'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was last updated'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description based on the current user's language settings"}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor descriptions'}, 'description': 'All available property descriptor descriptions'}, 'localizedName': {'type': 'string', 'description': "Property name based on the current user's language settings"}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor names'}, 'description': 'All available property descriptor names'}, 'readFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'section': {'type': 'string', 'description': 'Section of the property descriptor', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'soar', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'integer', 'format': 'int32', 'description': "Property descriptor's index in the relevant section"}, 'type': {'type': 'string', 'description': 'Type of the property descriptor', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uiSchema': {'type': 'object'}, 'writeFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerPropertyDescriptors'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_property_descriptor_json_schema = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Returns JSON Schema for a property descriptor identified by its UUID or key. (PUBLIC)', 'description': '', 'operationId': 'getPropertyDescriptorJsonSchema', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Property descriptor UUID or key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Returns JSON Schema for a property descriptor identified by its UUID or key.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object'}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerPropertyDescriptors'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_property_descriptor_enum_entries = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Returns property descriptor enum entries defined by query parameters (PUBLIC)', 'description': '', 'operationId': 'listPropertyDescriptorEnumEntries', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Property descriptor UUID or key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'offset', 'in': 'query', 'description': 'By how many records to offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keyword', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort search result', 'schema': {'type': 'list', 'enum': ['value', '-value'], 'items': {'type': 'string'}}, 'type': 'list', 'enum': ['value', '-value'], 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Returns property descriptor enum entries defined by query parameters', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Property Descriptor enum entry.', 'properties': {'description': {'type': 'string', 'description': 'Property descriptor enum value description in English.'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description enum value based on the current user's language settings."}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor enum value descriptions'}, 'description': 'All available property descriptor enum value descriptions'}, 'localizedValue': {'type': 'string', 'description': "Property descriptor description enum value based on the current user's language settings."}, 'localizedValues': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor enum value names'}, 'description': 'All available property descriptor enum value names'}, 'propertyDescriptorId': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor UUID.'}, 'value': {'type': 'string', 'description': 'Property descriptor enum value name in English.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerPropertyDescriptors'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_property_descriptors = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Returns property descriptors defined by query parameters (PUBLIC)', 'description': '', 'operationId': 'listPropertyDescriptors', 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'By how many records to offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keyword', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'section', 'in': 'query', 'description': 'Search by section', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'uniqueItems': True}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort search result', 'schema': {'type': 'list', 'enum': ['key', 'section', 'type', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-key', '-section', '-type', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp'], 'items': {'type': 'string'}}, 'type': 'list', 'enum': ['key', 'section', 'type', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-key', '-section', '-type', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp'], 'items': {'type': 'string'}}, {'name': 'includeSchema', 'in': 'query', 'description': 'Set to true to include schema in response.', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'includeUISchema', 'in': 'query', 'description': 'Set to true to include UISchema', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'responses': {'default': {'description': 'Returns property descriptors defined by query parameters', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Property Descriptor with key, default value, type, and other data', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was created'}, 'defaultJsonValue': {'type': 'object'}, 'defaultValue': {'type': 'string', 'description': 'Default value of the property descriptor (in string format)'}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was deleted'}, 'description': {'type': 'string', 'description': 'Property descriptor description in English'}, 'flags': {'type': 'array', 'description': 'Flags', 'items': {'type': 'string', 'description': 'Flags', 'enum': ['deleted', 'deprecated', 'externallyManaged', 'hidden', 'hasUISchema']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor id'}, 'jsonSchema': {'type': 'object'}, 'key': {'type': 'string', 'description': 'Property descriptor key'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was last updated'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description based on the current user's language settings"}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor descriptions'}, 'description': 'All available property descriptor descriptions'}, 'localizedName': {'type': 'string', 'description': "Property name based on the current user's language settings"}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor names'}, 'description': 'All available property descriptor names'}, 'readFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'section': {'type': 'string', 'description': 'Section of the property descriptor', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'soar', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'integer', 'format': 'int32', 'description': "Property descriptor's index in the relevant section"}, 'type': {'type': 'string', 'description': 'Type of the property descriptor', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uiSchema': {'type': 'object'}, 'writeFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerPropertyDescriptors'], 'x-Argus-ApiStatus': 'PUBLIC'}
search_property_descriptor = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Returns property descriptors defined by SearchPropertyDescriptorRequest (PUBLIC)', 'description': '', 'operationId': 'searchPropertyDescriptor', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Property Descriptor search by criteria request.', 'properties': {'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['deprecated']}, 'uniqueItems': True}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['deprecated']}, 'uniqueItems': True}, 'includeSchema': {'type': 'bool', 'default': False, 'description': 'If true, include schema of descriptors in response'}, 'includeUISchema': {'type': 'bool', 'default': False, 'description': 'If true, include UI schema of descriptors in response'}, 'keywords': {'type': 'list', 'description': 'Search for property descriptor by keywords. Searches through keys and default values.', 'items': {'type': 'str', 'description': 'Search for property descriptor by keywords. Searches through keys and default values.'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'description': 'Max number of results.', 'minimum': 0}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.', 'minimum': 0}, 'section': {'type': 'list', 'description': 'Restrict search to a section.', 'items': {'type': 'str', 'description': 'Restrict search to a section.', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'uniqueItems': True}, 'sortBy': {'type': 'list', 'default': 'key', 'description': 'Field to sort result by, use - to sort in desc order.', 'items': {'type': 'str', 'default': 'key', 'description': 'Field to sort result by, use - to sort in desc order.', 'enum': ['key', 'section', 'type', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-key', '-section', '-type', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}}, 'subCriteria': {'type': 'list', 'description': 'Set additional criteria', 'items': {'type': 'dict', 'description': 'Property Descriptor search by criteria subcriteria request.', 'properties': {'exclude': {'type': 'bool', 'default': False, 'description': 'Is this subcriteria required? If true the search is NOT-ed'}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['deprecated']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['deprecated']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'Search for property descriptor by keywords. Searches through keys and default values.', 'items': {'type': 'str', 'description': 'Search for property descriptor by keywords. Searches through keys and default values.'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'Is this subcriteria required? If true the search is AND-ed'}, 'section': {'type': 'list', 'description': 'Restrict search to a section.', 'items': {'type': 'str', 'description': 'Restrict search to a section.', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'uniqueItems': True}, 'type': 'list'}}, 'uniqueItems': True}, 'type': {'type': 'list', 'description': 'Restrict search to a type.', 'items': {'type': 'str', 'description': 'Restrict search to a type.', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Returns property descriptors defined by SearchPropertyDescriptorRequest', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Property Descriptor with key, default value, type, and other data', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was created'}, 'defaultJsonValue': {'type': 'object'}, 'defaultValue': {'type': 'string', 'description': 'Default value of the property descriptor (in string format)'}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was deleted'}, 'description': {'type': 'string', 'description': 'Property descriptor description in English'}, 'flags': {'type': 'array', 'description': 'Flags', 'items': {'type': 'string', 'description': 'Flags', 'enum': ['deleted', 'deprecated', 'externallyManaged', 'hidden', 'hasUISchema']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor id'}, 'jsonSchema': {'type': 'object'}, 'key': {'type': 'string', 'description': 'Property descriptor key'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was last updated'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description based on the current user's language settings"}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor descriptions'}, 'description': 'All available property descriptor descriptions'}, 'localizedName': {'type': 'string', 'description': "Property name based on the current user's language settings"}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor names'}, 'description': 'All available property descriptor names'}, 'readFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'section': {'type': 'string', 'description': 'Section of the property descriptor', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'soar', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'integer', 'format': 'int32', 'description': "Property descriptor's index in the relevant section"}, 'type': {'type': 'string', 'description': 'Type of the property descriptor', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uiSchema': {'type': 'object'}, 'writeFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerPropertyDescriptors'], 'x-Argus-ApiStatus': 'PUBLIC'}
search_property_descriptor_enum_entries = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Returns property descriptors defined by SearchPropertyDescriptorEnumEntryRequest (PUBLIC)', 'description': '', 'operationId': 'searchPropertyDescriptorEnumEntries', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Property descriptor UUID or key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Property Descriptor enum entry search by criteria request.', 'properties': {'keywordFieldStrategy': {'type': 'list', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'items': {'type': 'str', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'enum': ['value', 'name', 'description', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Search for property descriptor by keywords. Searches through keys and default values.', 'items': {'type': 'str', 'description': 'Search for property descriptor by keywords. Searches through keys and default values.'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'description': 'Max number of results.', 'minimum': 0}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.', 'minimum': 0}, 'sortBy': {'type': 'list', 'default': 'key', 'description': 'Field to sort result by, use - to sort in desc order.', 'items': {'type': 'str', 'default': 'key', 'description': 'Field to sort result by, use - to sort in desc order.', 'enum': ['value', '-value']}}, 'subCriteria': {'type': 'list', 'description': 'Set additional criteria', 'items': {'type': 'dict', 'description': 'Property Descriptor enum entry search by criteria subcriteria request.', 'properties': {'exclude': {'type': 'bool', 'default': False, 'description': 'Is this subcriteria required? If true the search is NOT-ed'}, 'keywordFieldStrategy': {'type': 'list', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'items': {'type': 'str', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'enum': ['value', 'name', 'description', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Search for property descriptor by keywords. Searches through keys and default values.', 'items': {'type': 'str', 'description': 'Search for property descriptor by keywords. Searches through keys and default values.'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'Is this subcriteria required? If true the search is AND-ed'}}}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Returns property descriptors defined by SearchPropertyDescriptorEnumEntryRequest', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Property Descriptor enum entry.', 'properties': {'description': {'type': 'string', 'description': 'Property descriptor enum value description in English.'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description enum value based on the current user's language settings."}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor enum value descriptions'}, 'description': 'All available property descriptor enum value descriptions'}, 'localizedValue': {'type': 'string', 'description': "Property descriptor description enum value based on the current user's language settings."}, 'localizedValues': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor enum value names'}, 'description': 'All available property descriptor enum value names'}, 'propertyDescriptorId': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor UUID.'}, 'value': {'type': 'string', 'description': 'Property descriptor enum value name in English.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCustomerPropertyDescriptors'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_property_descriptor = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Update a property descriptor object. (PUBLIC)', 'description': '', 'operationId': 'updatePropertyDescriptor', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Property descriptor UUID or key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update a property descriptor identified by key or uuid.', 'properties': {'defaultValue': {'type': 'object'}, 'deprecated': {'type': 'bool', 'default': False, 'description': 'If set, change the deprecated flag.'}, 'externallyManaged': {'type': 'bool', 'description': 'If set, change the externally managed flag.'}, 'hidden': {'type': 'bool', 'description': 'If set, change the hidden flag.'}, 'localizedDescriptions': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'If set, update the localized descriptions of the property.'}, 'description': 'If set, update the localized descriptions of the property.'}, 'localizedNames': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'If set, update the localized names of the property.'}, 'description': 'If set, update the localized names of the property.'}, 'readFunction': {'type': 'str', 'description': 'If set, change the function required to read this property for a customer.'}, 'schema': {'type': 'object'}, 'section': {'type': 'str', 'description': 'If set, change the section of the property.', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'int', 'description': 'If set, change the section index of the property.'}, 'type': {'type': 'str', 'description': 'If set, update the type of the property.', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uischema': {'type': 'object'}, 'writeFunction': {'type': 'str', 'description': 'If set, change the function required to write this property for a customer.'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update a property descriptor object.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Property Descriptor with key, default value, type, and other data', 'properties': {'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was created'}, 'defaultJsonValue': {'type': 'object'}, 'defaultValue': {'type': 'string', 'description': 'Default value of the property descriptor (in string format)'}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was deleted'}, 'description': {'type': 'string', 'description': 'Property descriptor description in English'}, 'flags': {'type': 'array', 'description': 'Flags', 'items': {'type': 'string', 'description': 'Flags', 'enum': ['deleted', 'deprecated', 'externallyManaged', 'hidden', 'hasUISchema']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor id'}, 'jsonSchema': {'type': 'object'}, 'key': {'type': 'string', 'description': 'Property descriptor key'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the property descriptor was last updated'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description based on the current user's language settings"}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor descriptions'}, 'description': 'All available property descriptor descriptions'}, 'localizedName': {'type': 'string', 'description': "Property name based on the current user's language settings"}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor names'}, 'description': 'All available property descriptor names'}, 'readFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'section': {'type': 'string', 'description': 'Section of the property descriptor', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'soar', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'sectionIndex': {'type': 'integer', 'format': 'int32', 'description': "Property descriptor's index in the relevant section"}, 'type': {'type': 'string', 'description': 'Type of the property descriptor', 'enum': ['stringType', 'floatType', 'integerType', 'jsonType', 'booleanType', 'enumType']}, 'uiSchema': {'type': 'object'}, 'writeFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}}}}}}}}, '220': {'description': 'No update performed', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCustomerPropertyDescriptor'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_property_descriptor_enum_entry = {'tags': ['customeradmin/v2/propertydescriptor'], 'summary': 'Update a property descriptor enum entry object. (PUBLIC)', 'description': '', 'operationId': 'updatePropertyDescriptorEnumEntry', 'parameters': [{'name': 'idOrKey', 'in': 'path', 'description': 'Property descriptor UUID or key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'idOrValue', 'in': 'path', 'description': 'Enum entry UUID or value', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': "Request to update a property descriptor enum entry identified by the descriptor id or key and entry's value or id", 'properties': {'localizedDescriptions': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Descriptions. Mapped by language.'}, 'description': 'Descriptions. Mapped by language.'}, 'localizedValues': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Values. Mapped by language. Note: English value updates only translation and not the value used for fetching the entry.'}, 'description': 'Values. Mapped by language. Note: English value updates only translation and not the value used for fetching the entry.'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update a property descriptor enum entry object.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Property Descriptor enum entry.', 'properties': {'description': {'type': 'string', 'description': 'Property descriptor enum value description in English.'}, 'localizedDescription': {'type': 'string', 'description': "Property descriptor description enum value based on the current user's language settings."}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor enum value descriptions'}, 'description': 'All available property descriptor enum value descriptions'}, 'localizedValue': {'type': 'string', 'description': "Property descriptor description enum value based on the current user's language settings."}, 'localizedValues': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'All available property descriptor enum value names'}, 'description': 'All available property descriptor enum value names'}, 'propertyDescriptorId': {'type': 'string', 'format': 'uuid', 'description': 'Property descriptor UUID.'}, 'value': {'type': 'string', 'description': 'Property descriptor enum value name in English.'}}}}}}}}, '220': {'description': 'No update performed', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCustomerPropertyDescriptor'], 'x-Argus-ApiStatus': 'PUBLIC'}