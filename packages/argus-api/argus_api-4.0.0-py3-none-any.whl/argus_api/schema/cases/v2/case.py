"""Autogenerated API schema"""
from argus_api import session


abort_fragmented_upload = {'tags': ['cases/v2/case'], 'summary': 'Abort fragmented upload of an attachment (PUBLIC)', 'description': '', 'operationId': 'abortFragmentedUpload', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'attachmentID', 'in': 'path', 'description': 'Attachment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Abort fragmented upload of an attachment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
abort_prepared_case = {'tags': ['cases/v2/case'], 'summary': 'Abort a prepared case. This removes the prepared (non-created) case entry from the database. (PUBLIC)', 'description': '', 'operationId': 'abortPreparedCase', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'ID of prepared case', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Abort a prepared case. This removes the prepared (non-created) case entry from the database.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'caseID': {'type': 'integer', 'format': 'int64'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['createCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
acknowledge_workflow = {'tags': ['cases/v2/case'], 'summary': 'Acknowledge workflow on case (PUBLIC)', 'description': '', 'operationId': 'acknowledgeWorkflow', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'workflow', 'in': 'path', 'description': 'Workflow to acknowledge', 'required': True, 'schema': {'type': 'str', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}, 'type': 'str', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'description': 'Optional acknowledgement comment to add. Html is allowed, will be sanitized.'}, 'publicComment': {'type': 'bool', 'description': 'If true, the comment is marked as public, and is made visible to customer.'}}}}}}, 'responses': {'default': {'description': 'Acknowledge workflow on case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'acknowledgedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'acknowledgedComment': {'type': 'string', 'description': 'Comment set for acknowledging this workflow. May contain sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'acknowledgedTime': {'type': 'string', 'description': 'Time when this workflow was acknowledged (in ISO-8601 time format)'}, 'acknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time when this workflow was acknowledged, or 0 if not acknowledged.'}, 'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'externalReference': {'type': 'string', 'description': 'An external reference for this workflow.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'PUBLIC_REQUEST_COMMENT', 'PUBLIC_ACKNOWLEDGED_COMMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'requestComment': {'type': 'string', 'description': 'Comment set when requesting this workflow. May contain sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'Name of workflow.', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_attachment = {'tags': ['cases/v2/case'], 'summary': 'Add new attachment (PUBLIC)', 'description': 'Upload new attachment as JSON object with base64-encoded data', 'operationId': 'addAttachment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'data': {'type': 'str', 'maxLength': 2147483647, 'minLength': 1}, 'encryptedZip': {'type': 'bool', 'deprecated': True, 'description': 'This option is deprecated, use encryptedZipMode instead'}, 'encryptedZipMode': {'type': 'str', 'default': 'none', 'description': "If set to 'server', the server will zip-encrypt the file using encryptedZipPassword, and set the outer mimetype to application/zip. If set to 'client', the server will mark this attachment as already encrypted zip (document the password using property encryptedZipPassword).", 'enum': ['none', 'client', 'server']}, 'encryptedZipPassword': {'type': 'str', 'default': 'argus', 'description': 'If encryptedZipMode is set, use this property to encrypt/document the password set on the zipfile.'}, 'internal': {'type': 'bool', 'description': 'If set, the attachment will be marked as internal. This is only allowed by tech users. Internal attachments are only readable by tech users.'}, 'mimeType': {'type': 'str', 'description': 'MimeType for attachment to add.', 'pattern': '[^ /]+/[^ /]+'}, 'name': {'type': 'str', 'description': 'Name of attachment to add.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'originEmailAddress': {'type': 'str', 'description': 'If update is made from an email, specify origin email address here [format:email]', 'x-Argus-Format': 'email'}, 'prepared': {'type': 'bool', 'default': False, 'description': 'If set the attachment will be uploaded in a "prepared" state, in which they are not visible to other users until the connected comment is published.'}}, 'required': ['data', 'mimeType', 'name']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add new attachment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_case_link = {'tags': ['cases/v2/case'], 'summary': 'Add link to case (PUBLIC)', 'description': '', 'operationId': 'addCaseLink', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'ID of case to link from', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'linkToCaseID', 'in': 'path', 'description': 'ID of case to link to', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'type': {'type': 'str', 'description': 'Type of link to add', 'enum': ['subcase', 'related', 'dependency', 'duplicate']}}, 'required': ['type']}}}, 'required': True}, 'responses': {'default': {'description': 'Add link to case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'direction': {'type': 'string', 'description': 'The direction of this link (incoming if this is a link TO the requested case, outgoing if this is a link FROM the requested case)', 'enum': ['incoming', 'outgoing']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'linkedCase': {'type': 'object', 'description': 'The case which this link links from', 'properties': {'customerID': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int64'}, 'priority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'service': {'type': 'string'}, 'status': {'type': 'string', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string'}}}, 'parentCase': {'type': 'object', 'description': 'The case which this link links from', 'properties': {'customerID': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int64'}, 'priority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'service': {'type': 'string'}, 'status': {'type': 'string', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string'}}}, 'type': {'type': 'string', 'description': 'The link type', 'enum': ['merged', 'subcase', 'related', 'duplicate', 'dependency']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_case_tag = {'tags': ['cases/v2/case'], 'summary': 'Add tag to case (PUBLIC)', 'description': '', 'operationId': 'addCaseTag', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'tags': {'type': 'list', 'description': 'Add multiple tags as key/value strings or JSON objects', 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'description': 'Tag key', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'value': {'type': 'str', 'description': 'Tag value', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['key']}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Add tag to case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a tag on a Case', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'key': {'type': 'string', 'description': 'The tag key'}, 'value': {'type': 'string', 'description': 'The tag value'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_case_watcher = {'tags': ['cases/v2/case'], 'summary': 'Add watcher to case (PUBLIC)', 'description': '', 'operationId': 'addCaseWatcher', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'destination': {'type': 'str', 'description': 'Contact information to add as watcher (email address or phone number). If subject is specified, this is ignored.'}, 'subjectID': {'type': 'int'}, 'type': {'type': 'str', 'default': 'email', 'description': 'Type of watcher to add', 'enum': ['sms', 'email']}, 'userOrGroup': {'type': 'str', 'description': 'User or group to add watcher for, by ID or shortname. Shortname will be resolved in current users domain.'}, 'verbose': {'type': 'bool', 'description': 'If set, explicitly set verbosity for watcher (will override default settings on subject)'}}, 'required': ['type']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add watcher to case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'contactID': {'type': 'integer', 'format': 'int64'}, 'destination': {'type': 'string'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'NEGATIVE_ENTRY', 'VERBOSE', 'DISABLED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'minimumPriority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'role': {'type': 'string', 'enum': ['contact', 'watcher']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'type': {'type': 'string', 'enum': ['sms', 'email']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
add_comment = {'tags': ['cases/v2/case'], 'summary': 'Submit new comment to case (PUBLIC)', 'description': '', 'operationId': 'addComment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'asReplyTo': {'type': 'str', 'description': 'Optional ID of comment to reply to.'}, 'associatedAttachmentID': {'type': 'list', 'description': 'If set, associate this comment with the listed attachments.', 'items': {'type': 'str', 'description': 'If set, associate this comment with the listed attachments.'}, 'uniqueItems': True}, 'comment': {'type': 'str', 'description': 'Comment to add. Html is allowed, will be sanitized.'}, 'internal': {'type': 'bool', 'description': 'If true, mark comment as internal, only visible to service techs. Default is false.'}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'originEmailAddress': {'type': 'str', 'description': 'If comment is added from an email, specify origin email address here. [format:email]', 'x-Argus-Format': 'email'}, 'status': {'type': 'str', 'description': 'If set, change the status of the case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose']}, 'textFormat': {'type': 'str', 'default': 'html', 'description': 'Specify the text format of this comment. Setting plainText gives other consumers a hint that contents does not require a HTML renderer.', 'enum': ['plainText', 'html']}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'Submit new comment to case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'associatedAttachments': {'type': 'array', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'items': {'type': 'object', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'properties': {'caseID': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}}}, 'uniqueItems': True}, 'comment': {'type': 'string', 'description': 'Comment text. May be HTML. Sanitized on input.  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'REPLACED', 'UPDATED', 'INTERNAL', 'MERGED', 'MAIL_UPDATE', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last update time for this comment (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp for this comment.'}, 'originEmailAddress': {'type': 'string', 'description': 'Comment origin email address. Only present if comment is marked as a mail update.'}, 'priority': {'type': 'string', 'description': 'The priority of the case when this comment was added.', 'enum': ['low', 'medium', 'high', 'critical']}, 'references': {'type': 'array', 'description': 'References to other comments.', 'items': {'type': 'object', 'description': 'References to other comments.', 'properties': {'commentID': {'type': 'string', 'format': 'uuid'}, 'type': {'type': 'string', 'enum': ['original', 'replacedBy', 'replacing', 'replyTo', 'repliedBy', 'latest']}}}, 'uniqueItems': True}, 'status': {'type': 'string', 'description': 'The status of the case when this comment was added.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'textFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
advanced_case_search = {'tags': ['cases/v2/case'], 'summary': 'Returns cases matching the defined CaseSearchCriteria (PUBLIC)', 'description': '', 'operationId': 'advancedCaseSearch', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'caseID': {'type': 'list', 'description': 'Restrict search to specific cases (by ID).', 'items': {'type': 'int', 'description': 'Restrict search to specific cases (by ID).'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Restrict search to specific customers (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to specific customers (by ID or shortname).'}, 'uniqueItems': True}, 'type': 'list', 'service': {'type': 'list', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.'}, 'uniqueItems': True}, 'serviceCriteria': {'type': 'dict', 'properties': {'excludeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'service': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}}}, 'category': {'type': 'list', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).'}, 'uniqueItems': True}, 'status': {'type': 'list', 'description': 'Restrict search to entries of one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'initialStatus': {'type': 'list', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'list', 'description': 'Restrict search to entries with given priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries with given priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'initialPriority': {'type': 'list', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'assetID': {'type': 'list', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)'}, 'uniqueItems': True}, 'tag': {'type': 'list', 'description': 'Restrict search to entries matching the given tag criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this tag.'}, 'key': {'type': 'str', 'description': 'Key of tag to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.'}, 'uniqueItems': True}}, 'required': ['key']}, 'uniqueItems': True}, 'workflow': {'type': 'list', 'description': 'Restrict search to entries matching the given workflow criteria.', 'items': {'type': 'dict', 'properties': {'acknowledged': {'type': 'bool', 'description': 'If true/false, limit to acknowledged/unacknowledged flows, respectively. If not set, filter on all flows of this type.'}, 'exclude': {'type': 'bool', 'description': 'If false (default), limit to cases matching this flow criteria. If true, exclude cases matching this flow criteria.'}, 'flow': {'type': 'str', 'description': 'Name of flow to search for', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}, 'required': ['flow']}, 'uniqueItems': True}, 'field': {'type': 'list', 'description': 'Restrict search to entries matching the given field criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this field.'}, 'field': {'type': 'str', 'description': 'Name of field to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.'}, 'uniqueItems': True}}, 'required': ['field']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'items': {'type': 'str', 'description': 'Search for keywords.'}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search (default all).', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search (default all).', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'closedTimestamp', 'publishedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'all']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'items': {'type': 'str', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'enum': ['subject', 'description', 'comments', 'customerReference', 'id', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'user': {'type': 'list', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).'}, 'uniqueItems': True}, 'userID': {'type': 'list', 'description': "This field is deprecated. Use field 'user' instead.", 'items': {'type': 'int', 'description': "This field is deprecated. Use field 'user' instead."}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'description': 'Defines which user fields will be searched (default match all user fields).', 'items': {'type': 'str', 'description': 'Defines which user fields will be searched (default match all user fields).', 'enum': ['reporter', 'assignedUser', 'assignedTech', 'createdByUser', 'lastUpdatedByUser', 'closedByUser', 'publishedByUser', 'commentedByUser', 'watchedByUser', 'all']}, 'uniqueItems': True}, 'userAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedUser field is set/unset'}, 'techAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedTech field is set/unset'}, 'includeWorkflows': {'type': 'bool', 'description': 'If true, include list of workflows in result. Default is false (not present).'}, 'includeDescription': {'type': 'bool', 'description': 'If false, omit description from response. Default is true (description is present).'}, 'accessMode': {'type': 'list', 'description': 'If set, only match cases which is set to one of these access modes', 'items': {'type': 'str', 'description': 'If set, only match cases which is set to one of these access modes', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'uniqueItems': True}, 'explicitAccess': {'type': 'list', 'description': 'If set, only match cases which have explicit access grants matching the specified criteria', 'items': {'type': 'dict', 'properties': {'endTimestamp': {'type': 'int', 'description': 'Match access granted before this timestamp'}, 'includeSubjectAnscendants': {'type': 'bool', 'description': 'If true, also return cases where any of the specified subjects are granted access through parent groups.'}, 'level': {'type': 'list', 'description': 'Match access granted for specified access levels', 'items': {'type': 'str', 'description': 'Match access granted for specified access levels', 'enum': ['read', 'write', 'owner']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Match access granted after this timestamp'}, 'subject': {'type': 'list', 'description': 'Match only access granted to specified user or group (id or shortname)', 'items': {'type': 'str', 'description': 'Match only access granted to specified user or group (id or shortname)'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'includeTestData': {'type': 'bool', 'description': 'If true, also include cases marked as TEST_DATA in search result. This option is restricted to users with permission viewCaseTestData. Default is false (excluded).'}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'sortBy': {'type': 'list', 'items': {'type': 'str', 'enum': ['reporter', 'createdByUser', 'createdTimestamp', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'assignedUser', 'assignedTech', 'closedByUser', 'closedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'publishedByUser', 'publishedTimestamp', 'customer', 'priority', 'status', 'type', 'service', 'category', 'subject', '-reporter', '-createdByUser', '-createdTimestamp', '-lastUpdatedByUser', '-lastUpdatedTimestamp', '-assignedUser', '-assignedTech', '-closedByUser', '-closedTimestamp', '-customerDueTimestamp', '-techDueTimestamp', '-publishedByUser', '-publishedTimestamp', '-customer', '-priority', '-status', '-type', '-service', '-category', '-subject']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'caseID': {'type': 'list', 'description': 'Restrict search to specific cases (by ID).', 'items': {'type': 'int', 'description': 'Restrict search to specific cases (by ID).'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Restrict search to specific customers (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to specific customers (by ID or shortname).'}, 'uniqueItems': True}, 'type': {'type': 'list', 'description': 'Restrict search to entries of one of these types.', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these types.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'service': {'type': 'list', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.'}, 'uniqueItems': True}, 'serviceCriteria': {'type': 'dict', 'properties': {'excludeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'service': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}}}, 'category': {'type': 'list', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).'}, 'uniqueItems': True}, 'status': {'type': 'list', 'description': 'Restrict search to entries of one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'initialStatus': {'type': 'list', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'list', 'description': 'Restrict search to entries with given priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries with given priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'initialPriority': {'type': 'list', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'assetID': {'type': 'list', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)'}, 'uniqueItems': True}, 'tag': {'type': 'list', 'description': 'Restrict search to entries matching the given tag criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this tag.'}, 'key': {'type': 'str', 'description': 'Key of tag to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.'}, 'uniqueItems': True}}, 'required': ['key']}, 'uniqueItems': True}, 'workflow': {'type': 'list', 'description': 'Restrict search to entries matching the given workflow criteria.', 'items': {'type': 'dict', 'properties': {'acknowledged': {'type': 'bool', 'description': 'If true/false, limit to acknowledged/unacknowledged flows, respectively. If not set, filter on all flows of this type.'}, 'exclude': {'type': 'bool', 'description': 'If false (default), limit to cases matching this flow criteria. If true, exclude cases matching this flow criteria.'}, 'flow': {'type': 'str', 'description': 'Name of flow to search for', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}, 'required': ['flow']}, 'uniqueItems': True}, 'field': {'type': 'list', 'description': 'Restrict search to entries matching the given field criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this field.'}, 'field': {'type': 'str', 'description': 'Name of field to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.'}, 'uniqueItems': True}}, 'required': ['field']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'items': {'type': 'str', 'description': 'Search for keywords.'}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search (default all).', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search (default all).', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'closedTimestamp', 'publishedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'all']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'items': {'type': 'str', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'enum': ['subject', 'description', 'comments', 'customerReference', 'id', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'user': {'type': 'list', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).'}, 'uniqueItems': True}, 'userID': {'type': 'list', 'description': "This field is deprecated. Use field 'user' instead.", 'items': {'type': 'int', 'description': "This field is deprecated. Use field 'user' instead."}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'description': 'Defines which user fields will be searched (default match all user fields).', 'items': {'type': 'str', 'description': 'Defines which user fields will be searched (default match all user fields).', 'enum': ['reporter', 'assignedUser', 'assignedTech', 'createdByUser', 'lastUpdatedByUser', 'closedByUser', 'publishedByUser', 'commentedByUser', 'watchedByUser', 'all']}, 'uniqueItems': True}, 'userAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedUser field is set/unset'}, 'techAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedTech field is set/unset'}, 'includeWorkflows': {'type': 'bool', 'description': 'If true, include list of workflows in result. Default is false (not present).'}, 'includeDescription': {'type': 'bool', 'description': 'If false, omit description from response. Default is true (description is present).'}, 'accessMode': {'type': 'list', 'description': 'If set, only match cases which is set to one of these access modes', 'items': {'type': 'str', 'description': 'If set, only match cases which is set to one of these access modes', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'uniqueItems': True}, 'explicitAccess': {'type': 'list', 'description': 'If set, only match cases which have explicit access grants matching the specified criteria', 'items': {'type': 'dict', 'properties': {'endTimestamp': {'type': 'int', 'description': 'Match access granted before this timestamp'}, 'includeSubjectAnscendants': {'type': 'bool', 'description': 'If true, also return cases where any of the specified subjects are granted access through parent groups.'}, 'level': {'type': 'list', 'description': 'Match access granted for specified access levels', 'items': {'type': 'str', 'description': 'Match access granted for specified access levels', 'enum': ['read', 'write', 'owner']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Match access granted after this timestamp'}, 'subject': {'type': 'list', 'description': 'Match only access granted to specified user or group (id or shortname)', 'items': {'type': 'str', 'description': 'Match only access granted to specified user or group (id or shortname)'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'includeTestData': {'type': 'bool', 'description': 'If true, also include cases marked as TEST_DATA in search result. This option is restricted to users with permission viewCaseTestData. Default is false (excluded).'}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'sortBy': {'type': 'list', 'items': {'type': 'str', 'enum': ['reporter', 'createdByUser', 'createdTimestamp', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'assignedUser', 'assignedTech', 'closedByUser', 'closedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'publishedByUser', 'publishedTimestamp', 'customer', 'priority', 'status', 'type', 'service', 'category', 'subject', '-reporter', '-createdByUser', '-createdTimestamp', '-lastUpdatedByUser', '-lastUpdatedTimestamp', '-assignedUser', '-assignedTech', '-closedByUser', '-closedTimestamp', '-customerDueTimestamp', '-techDueTimestamp', '-publishedByUser', '-publishedTimestamp', '-customer', '-priority', '-status', '-type', '-service', '-category', '-subject']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Returns cases matching the defined CaseSearchCriteria', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}, 'text/csv': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
answer_enquiry = {'tags': ['cases/v2/case'], 'summary': 'Answer a case enquiry (INTERNAL)', 'description': '', 'operationId': 'answerEnquiry', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'enquiryID', 'in': 'path', 'description': 'Enquiry ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to answer a case enquiry', 'properties': {'answer': {'type': 'object'}}, 'required': ['answer']}}}, 'required': True}, 'responses': {'default': {'description': 'Answer a case enquiry', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Model containing case enquiry data', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'answer': {'type': 'object'}, 'answeredByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'answeredTimestamp': {'type': 'integer', 'format': 'int64', 'description': "Answering timestamp of this case enquiry (in millis since epoch), only set if state is 'answered' or 'rejected'"}, 'deletedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Deletion timestamp of this case enquiry (in millis since epoch)'}, 'description': {'type': 'string', 'description': 'Description of the case enquiry, may contain sanitized HTML  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags of the case enquiry', 'items': {'type': 'string', 'description': 'Flags of the case enquiry', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, 'flowName': {'type': 'string', 'description': 'Machine readable shortname to identify the case enquiry'}, 'id': {'type': 'string', 'format': 'uuid'}, 'queryLayout': {'type': 'array', 'deprecated': True, 'description': 'Layout elements/widgets used in this case enquiry. Deprecated, usage of uiSchema-field is preferred.', 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': []}}}}}}}, 'querySchema': {'type': 'object'}, 'readRole': {'type': 'string', 'description': 'Required role for read access to the case enquiry', 'enum': ['user', 'tech', 'admin']}, 'state': {'type': 'string', 'description': 'Current state of the case enquiry', 'enum': ['open', 'answered', 'rejected']}, 'title': {'type': 'string', 'description': 'Human readable title of the case enquiry'}, 'uischema': {'type': 'object'}, 'writeRole': {'type': 'string', 'description': 'Required role for write access to the case enquiry', 'enum': ['user', 'tech', 'admin']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'INTERNAL'}
change_access_settings = {'tags': ['cases/v2/case'], 'summary': 'Change general access settings (PUBLIC)', 'description': '', 'operationId': 'changeAccessSettings', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'accessMode': {'type': 'str', 'description': 'If set, this will alter the access mode of the case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}}, 'required': ['accessMode']}}}, 'required': True}, 'responses': {'default': {'description': 'Change general access settings', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
clear_field = {'tags': ['cases/v2/case'], 'summary': 'Clear specific field for a case, by either field ID or field name. For multivalue fields, the field may contain multiple values. (INTERNAL)', 'description': '', 'operationId': 'clearField', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'ID of the case to clear fields for', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}, {'name': 'field', 'in': 'path', 'description': 'ID or fieldName of the field to clear', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Clear specific field for a case, by either field ID or field name. For multivalue fields, the field may contain multiple values.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'descriptor': {'type': 'object', 'description': 'Field descriptor', 'properties': {'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MULTIVALUE', 'HAS_VALUE_SOURCE', 'HIDDEN']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string', 'description': 'The name of this field. May be overridden by displayName in field policies.'}, 'shortName': {'type': 'string', 'description': 'The shortname of this field.'}, 'valueType': {'type': 'string', 'description': 'The value type of this field. Field values will be validated to ensure that the type is valid. If the field is a multivalue field, each value must be of the correct type.', 'enum': ['booleanType', 'integerType', 'floatType', 'stringType', 'textType', 'timestampType', 'ipType', 'subjectType', 'caseType', 'documentType', 'assetType', 'jsonType']}}}, 'displayName': {'type': 'string', 'description': 'Display name of this field (as set in the field policy)'}, 'value': {'type': 'object', 'description': 'Current field values for multivalue fields.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Value id. Use this to explicitly reference a specific value.'}, 'info': {'type': 'object', 'description': 'Info object. This is an optional complex object depending on the value type of the field.'}, 'key': {'type': 'string', 'description': 'Value key. May be a string, number or boolean value.'}, 'label': {'type': 'string', 'description': 'Value label. String representation of the value. If not a mapped value, this is a string version of the key.'}, 'origin': {'type': 'object', 'description': 'Origin info. The originating user and timestamp, and optionally a source string.', 'properties': {'source': {'type': 'string', 'description': 'Specifies where did the information originate from.'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of setting the origin.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'User ID associated with the origin.'}}}}}, 'values': {'type': 'array', 'description': 'Current field values for multivalue fields.', 'items': {'type': 'object', 'description': 'Current field values for multivalue fields.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Value id. Use this to explicitly reference a specific value.'}, 'info': {'type': 'object', 'description': 'Info object. This is an optional complex object depending on the value type of the field.'}, 'key': {'type': 'string', 'description': 'Value key. May be a string, number or boolean value.'}, 'label': {'type': 'string', 'description': 'Value label. String representation of the value. If not a mapped value, this is a string version of the key.'}, 'origin': {'type': 'object', 'description': 'Origin info. The originating user and timestamp, and optionally a source string.', 'properties': {'source': {'type': 'string', 'description': 'Specifies where did the information originate from.'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of setting the origin.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'User ID associated with the origin.'}}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'INTERNAL'}
close_case = {'tags': ['cases/v2/case'], 'summary': 'Close an open case (PUBLIC)', 'description': '', 'operationId': 'closeCase', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'description': 'Closing comment to add to case. May use HTML, will be sanitized.'}, 'internalComment': {'type': 'bool', 'description': 'If true, mark comment as internal, only visible to service techs. Default is false.'}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Close an open case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
complete_fragmented_upload = {'tags': ['cases/v2/case'], 'summary': 'Complete fragmented upload of an attachment (PUBLIC)', 'description': '', 'operationId': 'completeFragmentedUpload', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'attachmentID', 'in': 'path', 'description': 'Attachment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'sha256': {'type': 'str', 'description': 'The sha256 of the entire document.'}}, 'required': ['sha256']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Complete fragmented upload of an attachment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
create_case = {'tags': ['cases/v2/case'], 'summary': 'Create a new case defined by CaseCreateRequest (PUBLIC)', 'description': '', 'operationId': 'createCase', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'accessMode': {'type': 'str', 'default': 'roleBased', 'description': 'Access mode for new case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'aclMembers': {'type': 'list', 'description': 'Explicit ACL members to add to case.', 'items': {'type': 'dict', 'properties': {'addWatcher': {'type': 'bool', 'default': True, 'description': 'If true, also add the granted subject as watcher for this case.'}, 'level': {'type': 'str', 'default': 'read', 'description': 'Access level to grant.', 'enum': ['read', 'write', 'owner']}, 'subjectID': {'type': 'int', 'description': "This field is deprecated. Use field 'userOrGroup' instead."}, 'userOrGroup': {'type': 'str', 'description': 'ID or shortname of user or group to grant access to. Shortname will be resolved in current users domain.'}}, 'required': ['level']}, 'uniqueItems': True}, 'assignedTech': {'type': 'str', 'description': 'If set, assign given technical user (solution engineer) to case (by ID or shortname). Shortname will be resolved in the current users domain.'}, 'assignedUser': {'type': 'str', 'description': 'If set, assign given user to case (by ID or shortname). Shortname will be resolved in the current users domain.'}, 'category': {'type': 'str', 'description': "If set, assign given category to new case (by category shortname). Deprecated categories can't be used."}, 'customer': {'type': 'str', 'description': 'ID or shortname of customer to create case for. Defaults to current users customer'}, 'customerID': {'type': 'int', 'description': 'DEPRECATED. Use customer instead'}, 'customerReference': {'type': 'str', 'description': 'Customer reference for case.'}, 'defaultWatchers': {'type': 'bool', 'default': True, 'description': 'Whether to enable default watchers for this case. If set to false, default watchers will not be enabled, and will not be notified upon creation of this case.'}, 'description': {'type': 'str', 'description': 'Case description. May use HTML, which will be sanitized.'}, 'descriptionTextFormat': {'type': 'str', 'default': 'html', 'description': 'Set the text format of the description. Setting plainText gives other consumers a hint that contents does not require a HTML renderer.', 'enum': ['plainText', 'html']}, 'fields': {'type': 'list', 'description': 'Fields to set on case creation. Fields in the policy for requested service and customer specifies fields available. If any of the fields in the policy are required on create, and do not have a default value,those fields must be set in the case create request, or the request will fail.', 'items': {'type': 'dict', 'properties': {'field': {'type': 'str', 'description': 'UUID or field name for the field to set.'}, 'value': {'type': 'str', 'description': 'Value to set on field. Multivalue fields will reject requests using this parameter.'}, 'values': {'type': 'list', 'description': 'Value to set on a multivalue field. Singlevalue fields will reject requests using this parameter.', 'items': {'type': 'str', 'description': 'Value to set on a multivalue field. Singlevalue fields will reject requests using this parameter.'}, 'uniqueItems': True}}, 'required': ['field']}, 'uniqueItems': True}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'originEmailAddress': {'type': 'str', 'description': 'If case is created from an email, specify origin email address here [format:email]', 'x-Argus-Format': 'email'}, 'priority': {'type': 'str', 'default': 'medium', 'description': 'Priority of case to create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publish': {'type': 'bool', 'default': True, 'description': 'Whether to publish new case. Creating an unpublished case requires special permission.'}, 'rejectCreateWithoutNotification': {'type': 'bool', 'default': False, 'description': 'If set to true and there are no default or explicit watchers added to the case, fails the request with 412.'}, 'service': {'type': 'str', 'description': 'ID of service to create case for'}, 'status': {'type': 'str', 'description': 'Status of case to create. If not set, system will select automatically. Creating a new case with status closed is not permitted.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose']}, 'subject': {'type': 'str', 'description': 'Subject of case to create.'}, 'tags': {'type': 'list', 'description': 'Tags to add on case creation.', 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'description': 'Tag key', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'value': {'type': 'str', 'description': 'Tag value', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['key']}, 'uniqueItems': True}, 'testData': {'type': 'bool', 'description': 'If true, this case will be marked as TEST_DATA. TEST_DATA cases are excluded from search results by default.'}, 'triggers': {'type': 'dict', 'properties': {'severityAlert': {'type': 'bool', 'description': 'If true, enable trigger to check for severity alert workflow'}}}, 'type': {'type': 'str', 'description': 'Type of case to create', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'watchers': {'type': 'list', 'description': 'Explicit watchers to add to this case.', 'items': {'type': 'dict', 'properties': {'destination': {'type': 'str', 'description': 'Contact information to add as watcher (email address or phone number). If subject is specified, this is ignored.'}, 'subjectID': {'type': 'int', 'description': "This field is deprecated. Use field 'userOrGroup' instead."}, 'type': 'str', 'userOrGroup': {'type': 'str', 'description': 'User or group to add watcher for. If not specified, watcher will not be bound to user, only destination is used.'}, 'verbose': {'type': 'bool', 'description': 'If set, explicitly set verbosity for watcher (will override default settings on subject)'}, 'options': ['sms', 'email']}, 'required': ['type']}, 'uniqueItems': True}}, 'required': ['accessMode', 'description', 'priority', 'service', 'subject', 'type']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create a new case defined by CaseCreateRequest', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['createCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
create_enquiry = {'tags': ['cases/v2/case'], 'summary': 'Create a new case enquiry (INTERNAL)', 'description': '', 'operationId': 'createEnquiry', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to create a case enquiry', 'properties': {'description': {'type': 'str', 'description': 'Description of the case enquiry, may contain HTML which will be sanitized'}, 'flowName': {'type': 'str', 'description': 'Machine readable shortname to identify the case enquiry', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'mandatory': {'type': 'bool', 'default': False, 'description': 'Boolean flag that indicates whether the case enquiry is mandatory or not'}, 'queryLayout': {'type': 'list', 'deprecated': True, 'description': 'List of layout elements/widgets used in this case enquiry. Deprecated, use uiSchema-field instead.', 'items': {'type': 'dict', 'description': "Request containing the case enquiry elements' layout", 'properties': {'property': {'type': 'str', 'description': 'Name of the schema property to configure', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'renderAs': {'type': 'str', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'list', 'description': "Nested structure of this layout request's sub-elements", 'items': {'type': 'dict', 'description': "Request containing the case enquiry elements' layout", 'properties': {'property': {'type': 'str', 'description': 'Name of the schema property to configure', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'renderAs': {'type': 'str', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'list', 'description': "Nested structure of this layout request's sub-elements", 'items': []}}, 'required': ['property', 'renderAs']}}}, 'required': ['property', 'renderAs']}}, 'querySchema': {'type': 'object'}, 'readRole': {'type': 'str', 'default': 'tech', 'description': 'Required role for read access to the case enquiry', 'enum': ['user', 'tech', 'admin']}, 'title': {'type': 'str', 'description': 'Human readable title of the case enquiry', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'uischema': {'type': 'object'}, 'writeRole': {'type': 'str', 'default': 'tech', 'description': 'Required role for write access to the case enquiry', 'enum': ['user', 'tech', 'admin']}}, 'required': ['querySchema', 'readRole', 'title', 'writeRole']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create a new case enquiry', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Model containing case enquiry data', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'answer': {'type': 'object'}, 'answeredByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'answeredTimestamp': {'type': 'integer', 'format': 'int64', 'description': "Answering timestamp of this case enquiry (in millis since epoch), only set if state is 'answered' or 'rejected'"}, 'deletedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Deletion timestamp of this case enquiry (in millis since epoch)'}, 'description': {'type': 'string', 'description': 'Description of the case enquiry, may contain sanitized HTML  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags of the case enquiry', 'items': {'type': 'string', 'description': 'Flags of the case enquiry', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, 'flowName': {'type': 'string', 'description': 'Machine readable shortname to identify the case enquiry'}, 'id': {'type': 'string', 'format': 'uuid'}, 'queryLayout': {'type': 'array', 'deprecated': True, 'description': 'Layout elements/widgets used in this case enquiry. Deprecated, usage of uiSchema-field is preferred.', 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': []}}}}}}}, 'querySchema': {'type': 'object'}, 'readRole': {'type': 'string', 'description': 'Required role for read access to the case enquiry', 'enum': ['user', 'tech', 'admin']}, 'state': {'type': 'string', 'description': 'Current state of the case enquiry', 'enum': ['open', 'answered', 'rejected']}, 'title': {'type': 'string', 'description': 'Human readable title of the case enquiry'}, 'uischema': {'type': 'object'}, 'writeRole': {'type': 'string', 'description': 'Required role for write access to the case enquiry', 'enum': ['user', 'tech', 'admin']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'INTERNAL'}
create_prepared_case = {'tags': ['cases/v2/case'], 'summary': 'Create a prepared case. This finalizes the creation of the case prepared using /case/prepare (PUBLIC)', 'description': '', 'operationId': 'createPreparedCase', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'ID of prepared case', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'*/*': {'schema': {'type': 'object', 'properties': {'accessMode': {'type': 'str', 'default': 'roleBased', 'description': 'Access mode for new case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'aclMembers': {'type': 'list', 'description': 'Explicit ACL members to add to case.', 'items': {'type': 'dict', 'properties': {'addWatcher': {'type': 'bool', 'default': True, 'description': 'If true, also add the granted subject as watcher for this case.'}, 'level': {'type': 'str', 'default': 'read', 'description': 'Access level to grant.', 'enum': ['read', 'write', 'owner']}, 'subjectID': {'type': 'int', 'description': "This field is deprecated. Use field 'userOrGroup' instead."}, 'userOrGroup': {'type': 'str', 'description': 'ID or shortname of user or group to grant access to. Shortname will be resolved in current users domain.'}}, 'required': ['level']}, 'uniqueItems': True}, 'assignedTech': {'type': 'str', 'description': 'If set, assign given technical user (solution engineer) to case (by ID or shortname). Shortname will be resolved in the current users domain.'}, 'assignedUser': {'type': 'str', 'description': 'If set, assign given user to case (by ID or shortname). Shortname will be resolved in the current users domain.'}, 'category': {'type': 'str', 'description': "If set, assign given category to new case (by category shortname). Deprecated categories can't be used."}, 'customer': {'type': 'str', 'description': 'ID or shortname of customer to create case for. Defaults to current users customer'}, 'customerID': {'type': 'int', 'description': 'DEPRECATED. Use customer instead'}, 'customerReference': {'type': 'str', 'description': 'Customer reference for case.'}, 'defaultWatchers': {'type': 'bool', 'default': True, 'description': 'Whether to enable default watchers for this case. If set to false, default watchers will not be enabled, and will not be notified upon creation of this case.'}, 'description': {'type': 'str', 'description': 'Case description. May use HTML, which will be sanitized.'}, 'descriptionTextFormat': {'type': 'str', 'default': 'html', 'description': 'Set the text format of the description. Setting plainText gives other consumers a hint that contents does not require a HTML renderer.', 'enum': ['plainText', 'html']}, 'fields': {'type': 'list', 'description': 'Fields to set on case creation. Fields in the policy for requested service and customer specifies fields available. If any of the fields in the policy are required on create, and do not have a default value,those fields must be set in the case create request, or the request will fail.', 'items': {'type': 'dict', 'properties': {'field': {'type': 'str', 'description': 'UUID or field name for the field to set.'}, 'value': {'type': 'str', 'description': 'Value to set on field. Multivalue fields will reject requests using this parameter.'}, 'values': {'type': 'list', 'description': 'Value to set on a multivalue field. Singlevalue fields will reject requests using this parameter.', 'items': {'type': 'str', 'description': 'Value to set on a multivalue field. Singlevalue fields will reject requests using this parameter.'}, 'uniqueItems': True}}, 'required': ['field']}, 'uniqueItems': True}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'originEmailAddress': {'type': 'str', 'description': 'If case is created from an email, specify origin email address here [format:email]', 'x-Argus-Format': 'email'}, 'priority': {'type': 'str', 'default': 'medium', 'description': 'Priority of case to create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publish': {'type': 'bool', 'default': True, 'description': 'Whether to publish new case. Creating an unpublished case requires special permission.'}, 'rejectCreateWithoutNotification': {'type': 'bool', 'default': False, 'description': 'If set to true and there are no default or explicit watchers added to the case, fails the request with 412.'}, 'service': {'type': 'str', 'description': 'ID of service to create case for'}, 'status': {'type': 'str', 'description': 'Status of case to create. If not set, system will select automatically. Creating a new case with status closed is not permitted.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose']}, 'subject': {'type': 'str', 'description': 'Subject of case to create.'}, 'tags': {'type': 'list', 'description': 'Tags to add on case creation.', 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'description': 'Tag key', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'value': {'type': 'str', 'description': 'Tag value', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['key']}, 'uniqueItems': True}, 'testData': {'type': 'bool', 'description': 'If true, this case will be marked as TEST_DATA. TEST_DATA cases are excluded from search results by default.'}, 'triggers': {'type': 'dict', 'properties': {'severityAlert': {'type': 'bool', 'description': 'If true, enable trigger to check for severity alert workflow'}}}, 'type': {'type': 'str', 'description': 'Type of case to create', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'watchers': {'type': 'list', 'description': 'Explicit watchers to add to this case.', 'items': {'type': 'dict', 'properties': {'destination': {'type': 'str', 'description': 'Contact information to add as watcher (email address or phone number). If subject is specified, this is ignored.'}, 'subjectID': {'type': 'int', 'description': "This field is deprecated. Use field 'userOrGroup' instead."}, 'type': 'str', 'userOrGroup': {'type': 'str', 'description': 'User or group to add watcher for. If not specified, watcher will not be bound to user, only destination is used.'}, 'verbose': {'type': 'bool', 'description': 'If set, explicitly set verbosity for watcher (will override default settings on subject)'}, 'options': ['sms', 'email']}, 'required': ['type']}, 'uniqueItems': True}}, 'required': ['accessMode', 'description', 'priority', 'service', 'subject', 'type']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create a prepared case. This finalizes the creation of the case prepared using /case/prepare', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['createCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
current_user_watcher_status = {'tags': ['cases/v2/case'], 'summary': 'Query and set watcher status for the current user on this case (PUBLIC)', 'description': '', 'operationId': 'currentUserWatcherStatus', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'email': {'type': 'bool', 'description': 'If true, enable email notification for current user. If false, disable email. Default is no change.'}, 'sms': {'type': 'bool', 'description': 'If true, enable SMS notification for current user. If false, disable SMS. Default is no change.'}, 'verbose': {'type': 'bool', 'description': 'If set, explicitly set verbosity for watcher for enabled contact methods (will override default settings on current user)'}}}}}}, 'responses': {'default': {'description': 'Query and set watcher status for the current user on this case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'contactID': {'type': 'integer', 'format': 'int64'}, 'destination': {'type': 'string'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'NEGATIVE_ENTRY', 'VERBOSE', 'DISABLED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'minimumPriority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'role': {'type': 'string', 'enum': ['contact', 'watcher']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'type': {'type': 'string', 'enum': ['sms', 'email']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_attachment = {'tags': ['cases/v2/case'], 'summary': 'Delete specified attachment from case (PUBLIC)', 'description': '', 'operationId': 'deleteAttachment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'attachmentID', 'in': 'path', 'description': 'Attachment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete specified attachment from case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_case = {'tags': ['cases/v2/case'], 'summary': 'Mark existing case as deleted (PUBLIC)', 'description': '', 'operationId': 'deleteCase', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'comment', 'in': 'query', 'description': 'Optional comment to add to the case as internal comment. Will be appended to associated events.', 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Mark existing case as deleted', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deleteCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_case_link = {'tags': ['cases/v2/case'], 'summary': 'Remove existing case link (PUBLIC)', 'description': '', 'operationId': 'deleteCaseLink', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'linkID', 'in': 'path', 'description': 'Link ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Remove existing case link', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'direction': {'type': 'string', 'description': 'The direction of this link (incoming if this is a link TO the requested case, outgoing if this is a link FROM the requested case)', 'enum': ['incoming', 'outgoing']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'linkedCase': {'type': 'object', 'description': 'The case which this link links from', 'properties': {'customerID': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int64'}, 'priority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'service': {'type': 'string'}, 'status': {'type': 'string', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string'}}}, 'parentCase': {'type': 'object', 'description': 'The case which this link links from', 'properties': {'customerID': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int64'}, 'priority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'service': {'type': 'string'}, 'status': {'type': 'string', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string'}}}, 'type': {'type': 'string', 'description': 'The link type', 'enum': ['merged', 'subcase', 'related', 'duplicate', 'dependency']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_comment = {'tags': ['cases/v2/case'], 'summary': 'Mark existing comment as deleted (PUBLIC)', 'description': '', 'operationId': 'deleteComment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'commentID', 'in': 'path', 'description': 'Comment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Mark existing comment as deleted', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'associatedAttachments': {'type': 'array', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'items': {'type': 'object', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'properties': {'caseID': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}}}, 'uniqueItems': True}, 'comment': {'type': 'string', 'description': 'Comment text. May be HTML. Sanitized on input.  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'REPLACED', 'UPDATED', 'INTERNAL', 'MERGED', 'MAIL_UPDATE', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last update time for this comment (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp for this comment.'}, 'originEmailAddress': {'type': 'string', 'description': 'Comment origin email address. Only present if comment is marked as a mail update.'}, 'priority': {'type': 'string', 'description': 'The priority of the case when this comment was added.', 'enum': ['low', 'medium', 'high', 'critical']}, 'references': {'type': 'array', 'description': 'References to other comments.', 'items': {'type': 'object', 'description': 'References to other comments.', 'properties': {'commentID': {'type': 'string', 'format': 'uuid'}, 'type': {'type': 'string', 'enum': ['original', 'replacedBy', 'replacing', 'replyTo', 'repliedBy', 'latest']}}}, 'uniqueItems': True}, 'status': {'type': 'string', 'description': 'The status of the case when this comment was added.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'textFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_enquiry = {'tags': ['cases/v2/case'], 'summary': 'Delete a case enquiry (INTERNAL)', 'description': '', 'operationId': 'deleteEnquiry', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'enquiryID', 'in': 'path', 'description': 'Enquiry ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete a case enquiry', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Model containing case enquiry data', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'answer': {'type': 'object'}, 'answeredByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'answeredTimestamp': {'type': 'integer', 'format': 'int64', 'description': "Answering timestamp of this case enquiry (in millis since epoch), only set if state is 'answered' or 'rejected'"}, 'deletedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Deletion timestamp of this case enquiry (in millis since epoch)'}, 'description': {'type': 'string', 'description': 'Description of the case enquiry, may contain sanitized HTML  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags of the case enquiry', 'items': {'type': 'string', 'description': 'Flags of the case enquiry', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, 'flowName': {'type': 'string', 'description': 'Machine readable shortname to identify the case enquiry'}, 'id': {'type': 'string', 'format': 'uuid'}, 'queryLayout': {'type': 'array', 'deprecated': True, 'description': 'Layout elements/widgets used in this case enquiry. Deprecated, usage of uiSchema-field is preferred.', 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': []}}}}}}}, 'querySchema': {'type': 'object'}, 'readRole': {'type': 'string', 'description': 'Required role for read access to the case enquiry', 'enum': ['user', 'tech', 'admin']}, 'state': {'type': 'string', 'description': 'Current state of the case enquiry', 'enum': ['open', 'answered', 'rejected']}, 'title': {'type': 'string', 'description': 'Human readable title of the case enquiry'}, 'uischema': {'type': 'object'}, 'writeRole': {'type': 'string', 'description': 'Required role for write access to the case enquiry', 'enum': ['user', 'tech', 'admin']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'INTERNAL'}
download_attachment = {'tags': ['cases/v2/case'], 'summary': 'Download specific attachment contents. (PUBLIC)', 'description': 'Returns data stream with the attachments mimetype, and attachment disposition with filename.\nUse /cases/v1/case/{caseID}/attachments/{attachmentID} to fetch metadata about this attachment.', 'operationId': 'downloadAttachment', 'parameters': [{'name': 'inline', 'in': 'query', 'description': 'Content Disposition Inline', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'attachmentID', 'in': 'path', 'description': 'Attachment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Download specific attachment contents.', 'content': {'*/*': {}}}, '401': {'description': 'Authentication failed', 'content': {'*/*': {}}}, '403': {'description': 'Access denied', 'content': {'*/*': {}}}, '404': {'description': 'Object not found', 'content': {'*/*': {}}}, '412': {'description': 'Validation error', 'content': {'*/*': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
edit_comment = {'tags': ['cases/v2/case'], 'summary': 'Edit existing comment (PUBLIC)', 'description': '', 'operationId': 'editComment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'commentID', 'in': 'path', 'description': 'Comment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'associatedAttachmentID': {'type': 'list', 'description': 'If set, associate this comment with the listed attachments.', 'items': {'type': 'str', 'description': 'If set, associate this comment with the listed attachments.'}, 'uniqueItems': True}, 'comment': {'type': 'str', 'description': 'Updated comment'}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'Edit existing comment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'associatedAttachments': {'type': 'array', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'items': {'type': 'object', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'properties': {'caseID': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}}}, 'uniqueItems': True}, 'comment': {'type': 'string', 'description': 'Comment text. May be HTML. Sanitized on input.  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'REPLACED', 'UPDATED', 'INTERNAL', 'MERGED', 'MAIL_UPDATE', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last update time for this comment (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp for this comment.'}, 'originEmailAddress': {'type': 'string', 'description': 'Comment origin email address. Only present if comment is marked as a mail update.'}, 'priority': {'type': 'string', 'description': 'The priority of the case when this comment was added.', 'enum': ['low', 'medium', 'high', 'critical']}, 'references': {'type': 'array', 'description': 'References to other comments.', 'items': {'type': 'object', 'description': 'References to other comments.', 'properties': {'commentID': {'type': 'string', 'format': 'uuid'}, 'type': {'type': 'string', 'enum': ['original', 'replacedBy', 'replacing', 'replyTo', 'repliedBy', 'latest']}}}, 'uniqueItems': True}, 'status': {'type': 'string', 'description': 'The status of the case when this comment was added.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'textFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_attachment = {'tags': ['cases/v2/case'], 'summary': 'Fetch specific attachment metadata (PUBLIC)', 'description': 'Use /cases/v1/case/{caseID}/attachments/{attachmentID}/download to download attachment contents.', 'operationId': 'getAttachment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'attachmentID', 'in': 'path', 'description': 'Attachment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch specific attachment metadata', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_case_comment = {'tags': ['cases/v2/case'], 'summary': 'Fetch specific comment (PUBLIC)', 'description': '', 'operationId': 'getCaseComment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'commentID', 'in': 'path', 'description': 'Comment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}, {'name': 'resolveLatest', 'in': 'query', 'description': 'If true, attempt to resolve latest version of comment, if it has been updated', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'responses': {'default': {'description': 'Fetch specific comment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'associatedAttachments': {'type': 'array', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'items': {'type': 'object', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'properties': {'caseID': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}}}, 'uniqueItems': True}, 'comment': {'type': 'string', 'description': 'Comment text. May be HTML. Sanitized on input.  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'REPLACED', 'UPDATED', 'INTERNAL', 'MERGED', 'MAIL_UPDATE', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last update time for this comment (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp for this comment.'}, 'originEmailAddress': {'type': 'string', 'description': 'Comment origin email address. Only present if comment is marked as a mail update.'}, 'priority': {'type': 'string', 'description': 'The priority of the case when this comment was added.', 'enum': ['low', 'medium', 'high', 'critical']}, 'references': {'type': 'array', 'description': 'References to other comments.', 'items': {'type': 'object', 'description': 'References to other comments.', 'properties': {'commentID': {'type': 'string', 'format': 'uuid'}, 'type': {'type': 'string', 'enum': ['original', 'replacedBy', 'replacing', 'replyTo', 'repliedBy', 'latest']}}}, 'uniqueItems': True}, 'status': {'type': 'string', 'description': 'The status of the case when this comment was added.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'textFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_case_comment_notifications = {'tags': ['cases/v2/case'], 'summary': 'Fetch notifications recorded for specified comment (PUBLIC)', 'description': '', 'operationId': 'getCaseCommentNotifications', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'commentID', 'in': 'path', 'description': 'Comment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch notifications recorded for specified comment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'contact': {'type': 'string', 'description': 'Contact information (email or phone number)'}, 'name': {'type': 'string', 'description': 'Name of the notified person or entity'}, 'type': {'type': 'string', 'description': 'Notification type', 'enum': ['sms', 'email', 'verboseEmail', 'app', 'verboseApp']}, 'user': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_case_metadata_by_id = {'tags': ['cases/v2/case'], 'summary': 'Returns the basic case descriptor for the case identified by ID (PUBLIC)', 'description': '', 'operationId': 'getCaseMetadataByID', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'skipRedirect', 'in': 'query', 'description': 'If true, skip automatic redirect (for merged cases)', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'responses': {'default': {'description': 'Returns the basic case descriptor for the case identified by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '301': {'description': 'Case has been merged/moved, will redirect to another case', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_case_service = {'tags': ['cases/v2/case'], 'summary': 'Returns the service descriptor for the case identified by ID (PUBLIC)', 'description': '', 'operationId': 'getCaseService', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Returns the service descriptor for the case identified by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'adminFunction': {'type': 'object', 'description': 'The function required to show the service metadata (without access to any cases)', 'properties': {'description': {'type': 'string', 'description': 'Function description'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ROLE', 'SYSADM']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'Function name'}, 'securityLevel': {'type': 'string', 'description': 'Function security level', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}}}, 'caseTypes': {'type': 'array', 'description': 'The case types which are enabled for this service.', 'items': {'type': 'string', 'description': 'The case types which are enabled for this service.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'createFunction': {'type': 'object', 'description': 'The function required to show the service metadata (without access to any cases)', 'properties': {'description': {'type': 'string', 'description': 'Function description'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ROLE', 'SYSADM']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'Function name'}, 'securityLevel': {'type': 'string', 'description': 'Function security level', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}}}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Time when this service was created (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this service was created'}, 'defineFunction': {'type': 'object', 'description': 'The function required to show the service metadata (without access to any cases)', 'properties': {'description': {'type': 'string', 'description': 'Function description'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ROLE', 'SYSADM']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'Function name'}, 'securityLevel': {'type': 'string', 'description': 'Function security level', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}}}, 'description': {'type': 'string', 'description': 'Service description'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'fieldPolicy': {'type': 'object', 'description': 'The current field policy for this service, or null if no field policy is set.', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string', 'description': 'The policy name'}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'NOTIFICATION_ON_CREATE', 'NOTIFICATION_ON_UPDATE', 'NOTIFICATION_ON_CLOSE', 'NOTIFICATION_FORMAT_FULL', 'DEPRECATED', 'ASSIGN_DEFAULT_TECH', 'ASSIGN_DEFAULT_USER', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'The ID of this service'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Time when this service was last updated (in ISO-8601 time format)'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this service was last updated'}, 'listFunction': {'type': 'object', 'description': 'The function required to show the service metadata (without access to any cases)', 'properties': {'description': {'type': 'string', 'description': 'Function description'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ROLE', 'SYSADM']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'Function name'}, 'securityLevel': {'type': 'string', 'description': 'Function security level', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}}}, 'localizedDescription': {'type': 'string', 'description': 'Localized description (current users language)'}, 'localizedDescriptions': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Localized descriptions'}, 'description': 'Localized descriptions'}, 'localizedName': {'type': 'string', 'description': 'Localized name (current users language)'}, 'localizedNames': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Localized names'}, 'description': 'Localized names'}, 'logoURL': {'type': 'string', 'description': 'The logo data-URL used for this service'}, 'name': {'type': 'string', 'description': 'Service name'}, 'notificationEmail': {'type': 'string', 'description': 'The notification email configured for this service'}, 'readDetailedFunction': {'type': 'object', 'description': 'The function required to show the service metadata (without access to any cases)', 'properties': {'description': {'type': 'string', 'description': 'Function description'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ROLE', 'SYSADM']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'Function name'}, 'securityLevel': {'type': 'string', 'description': 'Function security level', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}}}, 'readFunction': {'type': 'object', 'description': 'The function required to show the service metadata (without access to any cases)', 'properties': {'description': {'type': 'string', 'description': 'Function description'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ROLE', 'SYSADM']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'Function name'}, 'securityLevel': {'type': 'string', 'description': 'Function security level', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}}}, 'shortName': {'type': 'string', 'description': 'Service shortname'}, 'techFunction': {'type': 'object', 'description': 'The function required to show the service metadata (without access to any cases)', 'properties': {'description': {'type': 'string', 'description': 'Function description'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ROLE', 'SYSADM']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'Function name'}, 'securityLevel': {'type': 'string', 'description': 'Function security level', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}}}, 'workflows': {'type': 'array', 'description': 'The workflows which are enabled for this service', 'items': {'type': 'string', 'description': 'The workflows which are enabled for this service', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}, 'uniqueItems': True}, 'writeFunction': {'type': 'object', 'description': 'The function required to show the service metadata (without access to any cases)', 'properties': {'description': {'type': 'string', 'description': 'Function description'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['ROLE', 'SYSADM']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string', 'description': 'Function name'}, 'securityLevel': {'type': 'string', 'description': 'Function security level', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_case_transaction = {'tags': ['cases/v2/case'], 'summary': 'Returns a single case transaction transactions (PUBLIC)', 'description': '', 'operationId': 'getCaseTransaction', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'transactionID', 'in': 'path', 'description': 'Transaction ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Returns a single case transaction transactions', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'changes': {'type': 'array', 'description': 'List of change events recorded for this transaction', 'items': {'type': 'object', 'description': 'List of change events recorded for this transaction', 'properties': {'field': {'type': 'string', 'enum': ['customerID', 'service', 'category', 'type', 'status', 'fieldAdded', 'fieldRemoved', 'priority', 'subject', 'description', 'setProperties', 'removeProperties', 'customerReference', 'accessMode', 'reporterID', 'assignedUserID', 'assignedTechID', 'setFlag', 'unsetFlag', 'addComment', 'addTag', 'addWatcher', 'addLink', 'updateWatcher', 'deleteWatcher', 'sentNotification', 'resetWorkflow', 'updateWorkflow', 'deleteWorkflow', 'enableVerbose', 'disableVerbose', 'customerDueTimestamp', 'techDueTimestamp', 'associatedEvent', 'enquiry', 'mergedInto', 'mergedFrom']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['TECH_EVENT', 'TECH_CONTENT', 'TECH_CONTENT_REDACTED', 'SKIP_NOTIFICATION', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'object': {'type': 'object', 'description': 'The associated value/object resolved from this change. Null if not relevant. Type is depending on the transaction operation and the field (see objectType).'}, 'objectType': {'type': 'string', 'description': 'The type of the associated value.', 'enum': ['access', 'attachment', 'caseVO', 'caseType', 'category', 'comment', 'customer', 'enquiry', 'field', 'flag', 'link', 'notification', 'priority', 'service', 'status', 'string', 'timestamp', 'tag', 'user', 'watcher', 'workflow']}, 'previousObject': {'type': 'object', 'description': 'The previous (pre-change) value/object for the modified field. Null if not relevant. Type is depending on the transaction operation and the field (see objectType).'}, 'previousValue': {'type': 'string', 'description': 'String format of the previous value associated with this change, or null if not relevant.'}, 'transactionIndex': {'type': 'integer', 'format': 'int32', 'description': 'Order of this change in the transaction (count from 0)'}, 'value': {'type': 'string', 'description': 'String format of the new value associated with this change, or null if not relevant.'}}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['TECH_TX', 'SKIP_NOTIFICATION', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'notified': {'type': 'integer', 'format': 'int32', 'description': 'The number of notifications recorded for this transaction'}, 'operation': {'type': 'string', 'description': 'The operation invoked in this transaction', 'enum': ['prepareCase', 'createCase', 'updateCase', 'deleteCase', 'moveCase', 'publishCase', 'closeCase', 'mergeCases', 'updateCaseAccessSettings', 'addCaseComment', 'editCaseComment', 'deleteCaseComment', 'addCaseAttachment', 'deleteCaseAttachment', 'addCaseLink', 'deleteCaseLink', 'addCaseWatcher', 'updateCaseWatcher', 'deleteCaseWatcher', 'currentUser', 'updateWatcherSettings', 'requestWorkflow', 'acknowledgeWorkflow', 'updateWorkflow', 'addCaseTag', 'removeCaseTag', 'grantCaseAccess', 'revokeCaseAccess', 'setCaseField', 'clearCaseField', 'eventAssociated', 'eventUnassociated', 'enquiryCreate', 'enquiryAnswer', 'enquiryReject', 'enquiryDelete']}, 'time': {'type': 'string', 'description': 'The time of this transaction'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this transaction was executed'}, 'user': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_enquiry = {'tags': ['cases/v2/case'], 'summary': 'Fetches a case enquiry (INTERNAL)', 'description': '', 'operationId': 'getEnquiry', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'enquiryID', 'in': 'path', 'description': 'Enquiry ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetches a case enquiry', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Model containing case enquiry data', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'answer': {'type': 'object'}, 'answeredByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'answeredTimestamp': {'type': 'integer', 'format': 'int64', 'description': "Answering timestamp of this case enquiry (in millis since epoch), only set if state is 'answered' or 'rejected'"}, 'deletedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Deletion timestamp of this case enquiry (in millis since epoch)'}, 'description': {'type': 'string', 'description': 'Description of the case enquiry, may contain sanitized HTML  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags of the case enquiry', 'items': {'type': 'string', 'description': 'Flags of the case enquiry', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, 'flowName': {'type': 'string', 'description': 'Machine readable shortname to identify the case enquiry'}, 'id': {'type': 'string', 'format': 'uuid'}, 'queryLayout': {'type': 'array', 'deprecated': True, 'description': 'Layout elements/widgets used in this case enquiry. Deprecated, usage of uiSchema-field is preferred.', 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': []}}}}}}}, 'querySchema': {'type': 'object'}, 'readRole': {'type': 'string', 'description': 'Required role for read access to the case enquiry', 'enum': ['user', 'tech', 'admin']}, 'state': {'type': 'string', 'description': 'Current state of the case enquiry', 'enum': ['open', 'answered', 'rejected']}, 'title': {'type': 'string', 'description': 'Human readable title of the case enquiry'}, 'uischema': {'type': 'object'}, 'writeRole': {'type': 'string', 'description': 'Required role for write access to the case enquiry', 'enum': ['user', 'tech', 'admin']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_enquiry_client_validation_code = {'tags': ['cases/v2/case'], 'summary': 'Fetches a case enquiry client validation code (in JavaScript) (INTERNAL)', 'description': '', 'operationId': 'getEnquiryClientValidationCode', 'parameters': [{'name': 'caseID', 'in': 'query', 'description': 'Case ID', 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'enquiryID', 'in': 'query', 'description': 'Enquiry ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetches a case enquiry client validation code (in JavaScript)', 'content': {'text/javascript': {'schema': {'type': 'string'}}}}, '401': {'description': 'Authentication failed', 'content': {'text/javascript': {}}}, '403': {'description': 'Access denied', 'content': {'text/javascript': {}}}, '404': {'description': 'Object not found', 'content': {'text/javascript': {}}}, '412': {'description': 'Client validation code generation error', 'content': {'text/javascript': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_field = {'tags': ['cases/v2/case'], 'summary': 'Fetch specific field for a case, by either field ID or field name. For multivalue fields, the field may contain multiple values. (INTERNAL)', 'description': '', 'operationId': 'getField', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'ID of the case to fetch fields for', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}, {'name': 'field', 'in': 'path', 'description': 'ID or fieldName of the field to fetch', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch specific field for a case, by either field ID or field name. For multivalue fields, the field may contain multiple values.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'descriptor': {'type': 'object', 'description': 'Field descriptor', 'properties': {'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MULTIVALUE', 'HAS_VALUE_SOURCE', 'HIDDEN']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string', 'description': 'The name of this field. May be overridden by displayName in field policies.'}, 'shortName': {'type': 'string', 'description': 'The shortname of this field.'}, 'valueType': {'type': 'string', 'description': 'The value type of this field. Field values will be validated to ensure that the type is valid. If the field is a multivalue field, each value must be of the correct type.', 'enum': ['booleanType', 'integerType', 'floatType', 'stringType', 'textType', 'timestampType', 'ipType', 'subjectType', 'caseType', 'documentType', 'assetType', 'jsonType']}}}, 'displayName': {'type': 'string', 'description': 'Display name of this field (as set in the field policy)'}, 'value': {'type': 'object', 'description': 'Current field values for multivalue fields.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Value id. Use this to explicitly reference a specific value.'}, 'info': {'type': 'object', 'description': 'Info object. This is an optional complex object depending on the value type of the field.'}, 'key': {'type': 'string', 'description': 'Value key. May be a string, number or boolean value.'}, 'label': {'type': 'string', 'description': 'Value label. String representation of the value. If not a mapped value, this is a string version of the key.'}, 'origin': {'type': 'object', 'description': 'Origin info. The originating user and timestamp, and optionally a source string.', 'properties': {'source': {'type': 'string', 'description': 'Specifies where did the information originate from.'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of setting the origin.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'User ID associated with the origin.'}}}}}, 'values': {'type': 'array', 'description': 'Current field values for multivalue fields.', 'items': {'type': 'object', 'description': 'Current field values for multivalue fields.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Value id. Use this to explicitly reference a specific value.'}, 'info': {'type': 'object', 'description': 'Info object. This is an optional complex object depending on the value type of the field.'}, 'key': {'type': 'string', 'description': 'Value key. May be a string, number or boolean value.'}, 'label': {'type': 'string', 'description': 'Value label. String representation of the value. If not a mapped value, this is a string version of the key.'}, 'origin': {'type': 'object', 'description': 'Origin info. The originating user and timestamp, and optionally a source string.', 'properties': {'source': {'type': 'string', 'description': 'Specifies where did the information originate from.'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of setting the origin.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'User ID associated with the origin.'}}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Case not found', 'content': {'application/json': {}}}, '412': {'description': 'Invalid field specified', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_field_policy_by_case = {'tags': ['cases/v2/field'], 'summary': 'Fetch field policy for a specific case (INTERNAL)', 'description': 'Fetch the field policy that applies to the specified case. This endpoint is useful to fetch the field policy that applies to an existing case. The endpoint will allow user access to the field policy for a case for which the user has explicit access, regardless if the user is missing general access to this policy.', 'operationId': 'getFieldPolicyByCase', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'ID of case to fetch policy for', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}], 'responses': {'default': {'description': 'Fetch field policy for a specific case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'bindings': {'type': 'array', 'description': 'The fields bound to this policy.', 'items': {'type': 'object', 'description': 'The fields bound to this policy.', 'properties': {'displayIn': {'type': 'array', 'description': 'The display options for this field', 'items': {'type': 'string', 'description': 'The display options for this field', 'enum': ['create', 'viewMain', 'closeDialog']}, 'uniqueItems': True}, 'displayName': {'type': 'string', 'description': 'The display name of the field. Default is the field name.'}, 'field': {'type': 'object', 'description': 'Field descriptor', 'properties': {'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MULTIVALUE', 'HAS_VALUE_SOURCE', 'HIDDEN']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string', 'description': 'The name of this field. May be overridden by displayName in field policies.'}, 'shortName': {'type': 'string', 'description': 'The shortname of this field.'}, 'valueType': {'type': 'string', 'description': 'The value type of this field. Field values will be validated to ensure that the type is valid. If the field is a multivalue field, each value must be of the correct type.', 'enum': ['booleanType', 'integerType', 'floatType', 'stringType', 'textType', 'timestampType', 'ipType', 'subjectType', 'caseType', 'documentType', 'assetType', 'jsonType']}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'requirementPolicy': {'type': 'string', 'description': 'The requirement policy for this field in this field policy.', 'enum': ['optional', 'requiredOnCreate', 'requiredOnClose']}}}, 'uniqueItems': True}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Time when this policy was created (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for the creation of this policy.'}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Time when this policy was last updated (in ISO-8601 time format)'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp for the last update of this policy.'}, 'name': {'type': 'string', 'description': 'The policy name'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_reindex_bulk_case_status = {'tags': ['cases/v2/case'], 'summary': 'Get the status of case bulk reindexing task (INTERNAL)', 'description': '', 'operationId': 'getReindexBulkCaseStatus', 'parameters': [{'name': 'taskID', 'in': 'path', 'description': 'Task ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get the status of case bulk reindexing task', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'failedCount': {'type': 'integer', 'format': 'int32', 'description': 'The count of cases where reindexing failed'}, 'reindexedCount': {'type': 'integer', 'format': 'int32', 'description': 'The count of cases that were successfully reindexed'}, 'state': {'type': 'string', 'description': 'The current state of the case bulk reindexing task.', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}, 'subtasksAborted': {'type': 'integer', 'format': 'int32', 'description': 'The number of aborted subtasks.'}, 'subtasksDone': {'type': 'integer', 'format': 'int32', 'description': 'The number of subtasks that have finished.'}, 'subtasksFailed': {'type': 'integer', 'format': 'int32', 'description': 'The number of failed subtasks.'}, 'subtasksPending': {'type': 'integer', 'format': 'int32', 'description': 'The number of subtasks that are pending start.'}, 'subtasksRunning': {'type': 'integer', 'format': 'int32', 'description': 'The number of running subtasks.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCaseServiceTasks'], 'x-Argus-ApiStatus': 'INTERNAL'}
grant_access = {'tags': ['cases/v2/case'], 'summary': 'Grant access to a case (PUBLIC)', 'description': '', 'operationId': 'grantAccess', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'addWatcher': {'type': 'bool', 'default': True, 'description': 'If true, also add the granted subject as watcher for this case.'}, 'level': {'type': 'str', 'default': 'read', 'description': 'Level to grant for subject.', 'enum': ['read', 'write', 'owner']}, 'subjectID': {'type': 'int', 'description': "This field is deprecated. Use field 'userOrGroup' instead."}, 'userOrGroup': {'type': 'str', 'description': 'ID or shortname of user or group to grant access to. Shortname will be resolved in current users domain.'}}, 'required': ['addWatcher', 'level', 'userOrGroup']}}}, 'required': True}, 'responses': {'default': {'description': 'Grant access to a case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED']}, 'uniqueItems': True}, 'grantedSubject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'id': {'type': 'string', 'format': 'uuid'}, 'level': {'type': 'string', 'enum': ['read', 'write', 'owner']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_case_acl = {'tags': ['cases/v2/case'], 'summary': 'List ACL entries for an existing case (PUBLIC)', 'description': '', 'operationId': 'listCaseACL', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'List ACL entries for an existing case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED']}, 'uniqueItems': True}, 'grantedSubject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'id': {'type': 'string', 'format': 'uuid'}, 'level': {'type': 'string', 'enum': ['read', 'write', 'owner']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_case_attachments = {'tags': ['cases/v2/case'], 'summary': 'List attachments for an existing case (PUBLIC)', 'description': '', 'operationId': 'listCaseAttachments', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'List attachments for an existing case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_case_comments = {'tags': ['cases/v2/case'], 'summary': 'List comments for an existing case (PUBLIC)', 'description': '', 'operationId': 'listCaseComments', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'beforeComment', 'in': 'query', 'description': 'Limit to comments before this comment ID (in sort order)', 'schema': {'type': 'str'}, 'type': 'str'}, {'name': 'afterComment', 'in': 'query', 'description': 'Limit to comments after this comment ID (in sort order)', 'schema': {'type': 'str'}, 'type': 'str'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort ordering. Default is addedTimestamp (ascending)', 'schema': {'type': 'list', 'enum': ['addedTimestamp', '-addedTimestamp'], 'items': {'type': 'string'}}, 'type': 'list', 'enum': ['addedTimestamp', '-addedTimestamp'], 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'List comments for an existing case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'associatedAttachments': {'type': 'array', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'items': {'type': 'object', 'description': 'Attachments which this comment references. Only set if associated attachments are set.', 'properties': {'caseID': {'type': 'integer', 'format': 'int64', 'writeOnly': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}}}, 'uniqueItems': True}, 'comment': {'type': 'string', 'description': 'Comment text. May be HTML. Sanitized on input.  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'REPLACED', 'UPDATED', 'INTERNAL', 'MERGED', 'MAIL_UPDATE', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last update time for this comment (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp for this comment.'}, 'originEmailAddress': {'type': 'string', 'description': 'Comment origin email address. Only present if comment is marked as a mail update.'}, 'priority': {'type': 'string', 'description': 'The priority of the case when this comment was added.', 'enum': ['low', 'medium', 'high', 'critical']}, 'references': {'type': 'array', 'description': 'References to other comments.', 'items': {'type': 'object', 'description': 'References to other comments.', 'properties': {'commentID': {'type': 'string', 'format': 'uuid'}, 'type': {'type': 'string', 'enum': ['original', 'replacedBy', 'replacing', 'replyTo', 'repliedBy', 'latest']}}}, 'uniqueItems': True}, 'status': {'type': 'string', 'description': 'The status of the case when this comment was added.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'textFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_case_history = {'tags': ['cases/v2/case'], 'summary': 'Returns the history of case transactions (PUBLIC)', 'description': '', 'operationId': 'listCaseHistory', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'type', 'in': 'query', 'description': 'Transaction types to fetch', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['actions', 'status', 'priority', 'description', 'category', 'assignments', 'comments', 'enquiries', 'attachments', 'access', 'fields', 'links', 'workflow', 'watchers', 'events']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['actions', 'status', 'priority', 'description', 'category', 'assignments', 'comments', 'enquiries', 'attachments', 'access', 'fields', 'links', 'workflow', 'watchers', 'events']}, 'uniqueItems': True}, {'name': 'operation', 'in': 'query', 'description': 'Include operations', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['all', 'createCase', 'updateCase', 'deleteCase', 'moveCase', 'publishCase', 'closeCase', 'mergeCases', 'updateCaseAccessSettings', 'addCaseComment', 'editCaseComment', 'deleteCaseComment', 'addCaseAttachment', 'deleteCaseAttachment', 'addCaseLink', 'deleteCaseLink', 'addCaseWatcher', 'updateCaseWatcher', 'deleteCaseWatcher', 'currentUser', 'updateWatcherSettings', 'requestWorkflow', 'acknowledgeWorkflow', 'updateWorkflow', 'addCaseTag', 'removeCaseTag', 'grantCaseAccess', 'revokeCaseAccess', 'setCaseField', 'clearCaseField', 'eventAssociated', 'eventUnassociated', 'enquiryCreate', 'enquiryAnswer', 'enquiryReject', 'enquiryDelete']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['all', 'createCase', 'updateCase', 'deleteCase', 'moveCase', 'publishCase', 'closeCase', 'mergeCases', 'updateCaseAccessSettings', 'addCaseComment', 'editCaseComment', 'deleteCaseComment', 'addCaseAttachment', 'deleteCaseAttachment', 'addCaseLink', 'deleteCaseLink', 'addCaseWatcher', 'updateCaseWatcher', 'deleteCaseWatcher', 'currentUser', 'updateWatcherSettings', 'requestWorkflow', 'acknowledgeWorkflow', 'updateWorkflow', 'addCaseTag', 'removeCaseTag', 'grantCaseAccess', 'revokeCaseAccess', 'setCaseField', 'clearCaseField', 'eventAssociated', 'eventUnassociated', 'enquiryCreate', 'enquiryAnswer', 'enquiryReject', 'enquiryDelete']}, 'uniqueItems': True}, {'name': 'field', 'in': 'query', 'description': 'Include fields', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['customerID', 'service', 'category', 'type', 'status', 'fieldAdded', 'fieldRemoved', 'priority', 'subject', 'description', 'setProperties', 'removeProperties', 'customerReference', 'accessMode', 'reporterID', 'assignedUserID', 'assignedTechID', 'setFlag', 'unsetFlag', 'addComment', 'addTag', 'addWatcher', 'addLink', 'updateWatcher', 'deleteWatcher', 'sentNotification', 'resetWorkflow', 'updateWorkflow', 'deleteWorkflow', 'enableVerbose', 'disableVerbose', 'customerDueTimestamp', 'techDueTimestamp', 'associatedEvent', 'enquiry']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['customerID', 'service', 'category', 'type', 'status', 'fieldAdded', 'fieldRemoved', 'priority', 'subject', 'description', 'setProperties', 'removeProperties', 'customerReference', 'accessMode', 'reporterID', 'assignedUserID', 'assignedTechID', 'setFlag', 'unsetFlag', 'addComment', 'addTag', 'addWatcher', 'addLink', 'updateWatcher', 'deleteWatcher', 'sentNotification', 'resetWorkflow', 'updateWorkflow', 'deleteWorkflow', 'enableVerbose', 'disableVerbose', 'customerDueTimestamp', 'techDueTimestamp', 'associatedEvent', 'enquiry']}, 'uniqueItems': True}, {'name': 'userID', 'in': 'query', 'description': "Use the 'user' parameter instead", 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'user', 'in': 'query', 'description': 'Filter out transactions by specified users', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'transactionID', 'in': 'query', 'description': 'Filter out specific transactions', 'schema': {'type': 'list', 'items': {'type': 'str'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str'}, 'uniqueItems': True}, {'name': 'beforeTransaction', 'in': 'query', 'description': 'Limit to transactions before this transaction (in sort order)', 'schema': {'type': 'str'}, 'type': 'str'}, {'name': 'afterTransaction', 'in': 'query', 'description': 'Limit to transactions after this transaction (in sort order)', 'schema': {'type': 'str'}, 'type': 'str'}, {'name': 'startTimestamp', 'in': 'query', 'description': 'Limit to transactions after this timestamp', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'endTimestamp', 'in': 'query', 'description': 'Limit to transactions before this timestamp', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort ordering. Default is timestamp (ascending)', 'schema': {'type': 'list', 'enum': ['timestamp', '-timestamp'], 'items': {'type': 'string'}}, 'type': 'list', 'enum': ['timestamp', '-timestamp'], 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Returns the history of case transactions', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'changes': {'type': 'array', 'description': 'List of change events recorded for this transaction', 'items': {'type': 'object', 'description': 'List of change events recorded for this transaction', 'properties': {'field': {'type': 'string', 'enum': ['customerID', 'service', 'category', 'type', 'status', 'fieldAdded', 'fieldRemoved', 'priority', 'subject', 'description', 'setProperties', 'removeProperties', 'customerReference', 'accessMode', 'reporterID', 'assignedUserID', 'assignedTechID', 'setFlag', 'unsetFlag', 'addComment', 'addTag', 'addWatcher', 'addLink', 'updateWatcher', 'deleteWatcher', 'sentNotification', 'resetWorkflow', 'updateWorkflow', 'deleteWorkflow', 'enableVerbose', 'disableVerbose', 'customerDueTimestamp', 'techDueTimestamp', 'associatedEvent', 'enquiry', 'mergedInto', 'mergedFrom']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['TECH_EVENT', 'TECH_CONTENT', 'TECH_CONTENT_REDACTED', 'SKIP_NOTIFICATION', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'object': {'type': 'object', 'description': 'The associated value/object resolved from this change. Null if not relevant. Type is depending on the transaction operation and the field (see objectType).'}, 'objectType': {'type': 'string', 'description': 'The type of the associated value.', 'enum': ['access', 'attachment', 'caseVO', 'caseType', 'category', 'comment', 'customer', 'enquiry', 'field', 'flag', 'link', 'notification', 'priority', 'service', 'status', 'string', 'timestamp', 'tag', 'user', 'watcher', 'workflow']}, 'previousObject': {'type': 'object', 'description': 'The previous (pre-change) value/object for the modified field. Null if not relevant. Type is depending on the transaction operation and the field (see objectType).'}, 'previousValue': {'type': 'string', 'description': 'String format of the previous value associated with this change, or null if not relevant.'}, 'transactionIndex': {'type': 'integer', 'format': 'int32', 'description': 'Order of this change in the transaction (count from 0)'}, 'value': {'type': 'string', 'description': 'String format of the new value associated with this change, or null if not relevant.'}}}}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['TECH_TX', 'SKIP_NOTIFICATION', 'SUBMITTED_BY_TECH']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'notified': {'type': 'integer', 'format': 'int32', 'description': 'The number of notifications recorded for this transaction'}, 'operation': {'type': 'string', 'description': 'The operation invoked in this transaction', 'enum': ['prepareCase', 'createCase', 'updateCase', 'deleteCase', 'moveCase', 'publishCase', 'closeCase', 'mergeCases', 'updateCaseAccessSettings', 'addCaseComment', 'editCaseComment', 'deleteCaseComment', 'addCaseAttachment', 'deleteCaseAttachment', 'addCaseLink', 'deleteCaseLink', 'addCaseWatcher', 'updateCaseWatcher', 'deleteCaseWatcher', 'currentUser', 'updateWatcherSettings', 'requestWorkflow', 'acknowledgeWorkflow', 'updateWorkflow', 'addCaseTag', 'removeCaseTag', 'grantCaseAccess', 'revokeCaseAccess', 'setCaseField', 'clearCaseField', 'eventAssociated', 'eventUnassociated', 'enquiryCreate', 'enquiryAnswer', 'enquiryReject', 'enquiryDelete']}, 'time': {'type': 'string', 'description': 'The time of this transaction'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this transaction was executed'}, 'user': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_case_links = {'tags': ['cases/v2/case'], 'summary': 'List links for an existing case (PUBLIC)', 'description': '', 'operationId': 'listCaseLinks', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'direction', 'in': 'query', 'description': 'Specify direction of links to fetch (default all)', 'schema': {'type': 'str', 'enum': ['incoming', 'outgoing']}, 'type': 'str', 'enum': ['incoming', 'outgoing']}, {'name': 'type', 'in': 'query', 'description': 'Specify link types to fetch (default all)', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['subcase', 'related', 'dependency', 'duplicate']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['subcase', 'related', 'dependency', 'duplicate']}, 'uniqueItems': True}], 'responses': {'default': {'description': 'List links for an existing case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'direction': {'type': 'string', 'description': 'The direction of this link (incoming if this is a link TO the requested case, outgoing if this is a link FROM the requested case)', 'enum': ['incoming', 'outgoing']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'linkedCase': {'type': 'object', 'description': 'The case which this link links from', 'properties': {'customerID': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int64'}, 'priority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'service': {'type': 'string'}, 'status': {'type': 'string', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string'}}}, 'parentCase': {'type': 'object', 'description': 'The case which this link links from', 'properties': {'customerID': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int64'}, 'priority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'service': {'type': 'string'}, 'status': {'type': 'string', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string'}}}, 'type': {'type': 'string', 'description': 'The link type', 'enum': ['merged', 'subcase', 'related', 'duplicate', 'dependency']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_case_seen = {'tags': ['cases/v2/case'], 'summary': "List 'last seen' status for a case (PUBLIC)", 'description': '', 'operationId': 'listCaseSeenStatus', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': "List 'last seen' status for a case", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': "Describes the 'last seen' status of a user for a case", 'properties': {'lastSeenTimestamp': {'type': 'integer', 'format': 'int64', 'description': "The last timestamp this user registered a 'seen' status"}, 'user': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_case_tags = {'tags': ['cases/v2/case'], 'summary': 'List tags for an existing case (PUBLIC)', 'description': '', 'operationId': 'listCaseTags', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'List tags for an existing case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a tag on a Case', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'key': {'type': 'string', 'description': 'The tag key'}, 'value': {'type': 'string', 'description': 'The tag value'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_case_watchers = {'tags': ['cases/v2/case'], 'summary': 'List watchers for an existing case (PUBLIC)', 'description': '', 'operationId': 'listCaseWatchers', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'includeExplicit', 'in': 'query', 'description': 'Include explicit watchers (default true)', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}, {'name': 'includeDefault', 'in': 'query', 'description': 'Include default watchers (default true)', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}, {'name': 'includeDisabled', 'in': 'query', 'description': 'Include disabled watchers (default false)', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'responses': {'default': {'description': 'List watchers for an existing case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'contactID': {'type': 'integer', 'format': 'int64'}, 'destination': {'type': 'string'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'NEGATIVE_ENTRY', 'VERBOSE', 'DISABLED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'minimumPriority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'role': {'type': 'string', 'enum': ['contact', 'watcher']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'type': {'type': 'string', 'enum': ['sms', 'email']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_enquiries = {'tags': ['cases/v2/case'], 'summary': 'Fetches case enquiries (INTERNAL)', 'description': '', 'operationId': 'listEnquiries', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'state', 'in': 'query', 'description': 'Filter enquiries by state', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['open', 'answered', 'rejected']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['open', 'answered', 'rejected']}, 'uniqueItems': True}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Whether to include deleted enquiries', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'includeFlags', 'in': 'query', 'description': 'Filter enquiries by include flags (all of the specified flags have to be present)', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, {'name': 'excludeFlags', 'in': 'query', 'description': 'Filter enquiries by exclude flags (none of the specified flags have to be present)', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, {'name': 'offset', 'in': 'query', 'description': 'The amount of items to skip from the beginning', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum amount of items to return (0 means no limit)', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'Fetches case enquiries', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Model containing case enquiry data', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'answer': {'type': 'object'}, 'answeredByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'answeredTimestamp': {'type': 'integer', 'format': 'int64', 'description': "Answering timestamp of this case enquiry (in millis since epoch), only set if state is 'answered' or 'rejected'"}, 'deletedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Deletion timestamp of this case enquiry (in millis since epoch)'}, 'description': {'type': 'string', 'description': 'Description of the case enquiry, may contain sanitized HTML  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags of the case enquiry', 'items': {'type': 'string', 'description': 'Flags of the case enquiry', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, 'flowName': {'type': 'string', 'description': 'Machine readable shortname to identify the case enquiry'}, 'id': {'type': 'string', 'format': 'uuid'}, 'queryLayout': {'type': 'array', 'deprecated': True, 'description': 'Layout elements/widgets used in this case enquiry. Deprecated, usage of uiSchema-field is preferred.', 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': []}}}}}}}, 'querySchema': {'type': 'object'}, 'readRole': {'type': 'string', 'description': 'Required role for read access to the case enquiry', 'enum': ['user', 'tech', 'admin']}, 'state': {'type': 'string', 'description': 'Current state of the case enquiry', 'enum': ['open', 'answered', 'rejected']}, 'title': {'type': 'string', 'description': 'Human readable title of the case enquiry'}, 'uischema': {'type': 'object'}, 'writeRole': {'type': 'string', 'description': 'Required role for write access to the case enquiry', 'enum': ['user', 'tech', 'admin']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_fields = {'tags': ['cases/v2/case'], 'summary': 'List fields on case. Each field represents a defined field which has a value set for this case. For multivalue fields, the field may contain multiple values. (INTERNAL)', 'description': '', 'operationId': 'listFields', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'ID of the case to fetch fields for', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}], 'responses': {'default': {'description': 'List fields on case. Each field represents a defined field which has a value set for this case. For multivalue fields, the field may contain multiple values.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'descriptor': {'type': 'object', 'description': 'Field descriptor', 'properties': {'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MULTIVALUE', 'HAS_VALUE_SOURCE', 'HIDDEN']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string', 'description': 'The name of this field. May be overridden by displayName in field policies.'}, 'shortName': {'type': 'string', 'description': 'The shortname of this field.'}, 'valueType': {'type': 'string', 'description': 'The value type of this field. Field values will be validated to ensure that the type is valid. If the field is a multivalue field, each value must be of the correct type.', 'enum': ['booleanType', 'integerType', 'floatType', 'stringType', 'textType', 'timestampType', 'ipType', 'subjectType', 'caseType', 'documentType', 'assetType', 'jsonType']}}}, 'displayName': {'type': 'string', 'description': 'Display name of this field (as set in the field policy)'}, 'value': {'type': 'object', 'description': 'Current field values for multivalue fields.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Value id. Use this to explicitly reference a specific value.'}, 'info': {'type': 'object', 'description': 'Info object. This is an optional complex object depending on the value type of the field.'}, 'key': {'type': 'string', 'description': 'Value key. May be a string, number or boolean value.'}, 'label': {'type': 'string', 'description': 'Value label. String representation of the value. If not a mapped value, this is a string version of the key.'}, 'origin': {'type': 'object', 'description': 'Origin info. The originating user and timestamp, and optionally a source string.', 'properties': {'source': {'type': 'string', 'description': 'Specifies where did the information originate from.'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of setting the origin.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'User ID associated with the origin.'}}}}}, 'values': {'type': 'array', 'description': 'Current field values for multivalue fields.', 'items': {'type': 'object', 'description': 'Current field values for multivalue fields.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Value id. Use this to explicitly reference a specific value.'}, 'info': {'type': 'object', 'description': 'Info object. This is an optional complex object depending on the value type of the field.'}, 'key': {'type': 'string', 'description': 'Value key. May be a string, number or boolean value.'}, 'label': {'type': 'string', 'description': 'Value label. String representation of the value. If not a mapped value, this is a string version of the key.'}, 'origin': {'type': 'object', 'description': 'Origin info. The originating user and timestamp, and optionally a source string.', 'properties': {'source': {'type': 'string', 'description': 'Specifies where did the information originate from.'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of setting the origin.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'User ID associated with the origin.'}}}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Case not found', 'content': {'application/json': {}}}, '412': {'description': 'Invalid arguments', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_transaction_notifications = {'tags': ['cases/v2/case'], 'summary': 'Returns the notifications of a specified transaction (PUBLIC)', 'description': '', 'operationId': 'listTransactionNotifications', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'transactionID', 'in': 'path', 'description': 'Transaction ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Returns the notifications of a specified transaction', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'contact': {'type': 'string', 'description': 'Contact information (email or phone number)'}, 'name': {'type': 'string', 'description': 'Name of the notified person or entity'}, 'type': {'type': 'string', 'description': 'Notification type', 'enum': ['sms', 'email', 'verboseEmail', 'app', 'verboseApp']}, 'user': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_workflows = {'tags': ['cases/v2/case'], 'summary': 'List workflows for an existing case (PUBLIC)', 'description': '', 'operationId': 'listWorkflows', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'includeDeleted', 'in': 'query', 'description': 'If true, include deleted workflows', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}], 'responses': {'default': {'description': 'List workflows for an existing case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'acknowledgedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'acknowledgedComment': {'type': 'string', 'description': 'Comment set for acknowledging this workflow. May contain sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'acknowledgedTime': {'type': 'string', 'description': 'Time when this workflow was acknowledged (in ISO-8601 time format)'}, 'acknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time when this workflow was acknowledged, or 0 if not acknowledged.'}, 'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'externalReference': {'type': 'string', 'description': 'An external reference for this workflow.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'PUBLIC_REQUEST_COMMENT', 'PUBLIC_ACKNOWLEDGED_COMMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'requestComment': {'type': 'string', 'description': 'Comment set when requesting this workflow. May contain sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'Name of workflow.', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
merge_cases = {'tags': ['cases/v2/case'], 'summary': 'Merge two cases (PUBLIC)', 'description': 'This will merge the contents of the mergeFrom case into the mergeInto case.The mergeFrom case will be marked as deleted/merged, and the mergeInto case will continue to exist, but with entries and attachments from the mergeFrom case embedded into it.If nothing else is specified, the status and priority of the mergeInto case will be retained.', 'operationId': 'mergeCases', 'parameters': [{'name': 'mergeInto', 'in': 'path', 'description': 'ID of case to merge into', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'mergeFrom', 'in': 'path', 'description': 'ID of case to merge', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'description': {'type': 'str', 'description': 'Case description of merged case. May use HTML, which will be sanitized. If not set, the description of both cases will be combined.'}, 'priority': {'type': 'str', 'description': 'Priority of merged case. If not set, keep priority of mergeInto case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'status': {'type': 'str', 'description': 'Status of merged case. If not set, keep status of mergeInto case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose']}}}}}}, 'responses': {'default': {'description': 'Merge two cases', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
move_case = {'tags': ['cases/v2/case'], 'summary': 'Move a case to a differnet category, service or customer (PUBLIC)', 'description': '', 'operationId': 'moveCase', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'category': {'type': 'str', 'description': 'If set, assign given category to specified category (by category id or shortname). Set value to empty string to unset category.'}, 'customer': {'type': 'str', 'description': 'If set, move case to specified customer (id or shortname).'}, 'customerID': {'type': 'int', 'description': 'DEPRECATED. Use customer instead'}, 'service': {'type': 'str', 'description': 'If set, move case to specified service (id or shortname).'}, 'type': {'type': 'str', 'description': 'If set, move case to specified type.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}}}}, 'required': True}, 'responses': {'default': {'description': 'Move a case to a differnet category, service or customer', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
prepare_attachment_upload = {'tags': ['cases/v2/case'], 'summary': 'Prepare new fragmentedattachment upload (PUBLIC)', 'description': 'Request a new attachment upload state to perform fragmented upload', 'operationId': 'prepareAttachmentUpload', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'encryptedZip': {'type': 'bool', 'deprecated': True, 'description': 'This option is deprecated, use encryptedZipMode instead'}, 'encryptedZipMode': {'type': 'str', 'default': 'none', 'description': "If set to 'server', the server will zip-encrypt the file using encryptedZipPassword, and set the outer mimetype to application/zip. If set to 'client', the server will mark this attachment as already encrypted zip (document the password using property encryptedZipPassword).", 'enum': ['none', 'client', 'server']}, 'encryptedZipPassword': {'type': 'str', 'default': 'argus', 'description': 'If encryptedZipMode is set, use this property to encrypt/document the password set on the zipfile.'}, 'internal': {'type': 'bool', 'description': 'If set, the attachment will be marked as internal. This is only allowed by tech users. Internal attachments are only readable by tech users.'}, 'mimeType': {'type': 'str', 'description': 'MimeType for attachment to add.', 'pattern': '[^ /]+/[^ /]+'}, 'name': {'type': 'str', 'description': 'Name of attachment to add.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'originEmailAddress': {'type': 'str', 'description': 'If update is made from an email, specify origin email address here [format:email]', 'x-Argus-Format': 'email'}, 'prepared': {'type': 'bool', 'default': False, 'description': 'If set the attachment will be uploaded in a "prepared" state, in which they are not visible to other users until the connected comment is published.'}}, 'required': ['mimeType', 'name']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Prepare new fragmentedattachment upload', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
prepare_case = {'tags': ['cases/v2/case'], 'summary': 'Prepare a new case object, to allow adding collections before properly creating it (PUBLIC)', 'description': '', 'operationId': 'prepareCase', 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Prepare a new case object, to allow adding collections before properly creating it', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'caseID': {'type': 'integer', 'format': 'int64'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['createCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
publish_case = {'tags': ['cases/v2/case'], 'summary': 'Publish existing case not marked as published (PUBLIC)', 'description': '', 'operationId': 'publishCase', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'*/*': {'schema': {'type': 'object', 'properties': {'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'status': {'type': 'str', 'description': 'If set, change status of case', 'enum': ['closed', 'pendingClose', 'pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingCustomer', 'workingSoc']}}}}}}, 'responses': {'default': {'description': 'Publish existing case not marked as published', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
register_case_seen = {'tags': ['cases/v2/case'], 'summary': "Register 'last seen' status for a case (PUBLIC)", 'description': '', 'operationId': 'registerCaseSeenStatus', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': "Register 'last seen' status for a case", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': "Describes the 'last seen' status of a user for a case", 'properties': {'lastSeenTimestamp': {'type': 'integer', 'format': 'int64', 'description': "The last timestamp this user registered a 'seen' status"}, 'user': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
reindex_bulk_case = {'tags': ['cases/v2/case'], 'summary': 'Force reindexing of a bulk of cases using service tasks (INTERNAL)', 'description': '', 'operationId': 'reindexBulkCase', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to reindex a bulk of cases using a service task', 'properties': {'correlationID': {'type': 'str', 'description': 'An optional correlation ID for making it easier to trace the task and its subtasks in the logs.'}, 'customer': {'type': 'list', 'description': 'Limit reindexing to the cases of the specified customers.', 'items': {'type': 'str', 'description': 'Limit reindexing to the cases of the specified customers.'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'int', 'description': 'Timestamp of the range to end reindexing with (inclusive).'}, 'startTimestamp': {'type': 'int', 'description': 'Timestamp of the range to start reindexing with (inclusive).'}, 'timeFieldStrategy': {'type': 'str', 'description': 'Which time field to use for timestamp-based limiting.', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp']}}}}}}, 'responses': {'default': {'description': 'Force reindexing of a bulk of cases using service tasks', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'taskID': {'type': 'string', 'format': 'uuid', 'description': 'ID of the service task that runs the case bulk reindexing.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['reindexCase'], 'x-Argus-ApiStatus': 'INTERNAL'}
reindex_case = {'tags': ['cases/v2/case'], 'summary': 'Force reindexing of case (INTERNAL)', 'description': '', 'operationId': 'reindexCase', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to reindex a case', 'properties': {'refresh': {'type': 'bool', 'description': 'If true, force immediate refresh before returning'}}}}}}, 'responses': {'default': {'description': 'Force reindexing of case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response from reindexing request', 'properties': {'caseID': {'type': 'integer', 'format': 'int64', 'description': 'The ID of the indexed case'}, 'timeSpent': {'type': 'integer', 'format': 'int64', 'description': 'Time (in ms) spent on reindexing'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['reindexCase'], 'x-Argus-ApiStatus': 'INTERNAL'}
reject_enquiry = {'tags': ['cases/v2/case'], 'summary': 'Reject a case enquiry (INTERNAL)', 'description': '', 'operationId': 'rejectEnquiry', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'enquiryID', 'in': 'path', 'description': 'Enquiry ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to reject a case enquiry'}}}}, 'responses': {'default': {'description': 'Reject a case enquiry', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Model containing case enquiry data', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'answer': {'type': 'object'}, 'answeredByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'answeredTimestamp': {'type': 'integer', 'format': 'int64', 'description': "Answering timestamp of this case enquiry (in millis since epoch), only set if state is 'answered' or 'rejected'"}, 'deletedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Deletion timestamp of this case enquiry (in millis since epoch)'}, 'description': {'type': 'string', 'description': 'Description of the case enquiry, may contain sanitized HTML  (@SafeHTML)', 'x-safe-html': True}, 'flags': {'type': 'array', 'description': 'Flags of the case enquiry', 'items': {'type': 'string', 'description': 'Flags of the case enquiry', 'enum': ['deleted', 'mandatory']}, 'uniqueItems': True}, 'flowName': {'type': 'string', 'description': 'Machine readable shortname to identify the case enquiry'}, 'id': {'type': 'string', 'format': 'uuid'}, 'queryLayout': {'type': 'array', 'deprecated': True, 'description': 'Layout elements/widgets used in this case enquiry. Deprecated, usage of uiSchema-field is preferred.', 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': {'type': 'object', 'deprecated': True, 'description': 'Model containing the structure of case enquiry widgets', 'properties': {'property': {'type': 'string', 'description': 'Name of the schema property to configure'}, 'renderAs': {'type': 'string', 'description': 'Widget type of this layout element', 'enum': ['radio', 'select', 'checkbox', 'textfield', 'textarea', 'slider', 'status']}, 'subElements': {'type': 'array', 'description': "Nested structure of this layout element's sub-elements", 'items': []}}}}}}}, 'querySchema': {'type': 'object'}, 'readRole': {'type': 'string', 'description': 'Required role for read access to the case enquiry', 'enum': ['user', 'tech', 'admin']}, 'state': {'type': 'string', 'description': 'Current state of the case enquiry', 'enum': ['open', 'answered', 'rejected']}, 'title': {'type': 'string', 'description': 'Human readable title of the case enquiry'}, 'uischema': {'type': 'object'}, 'writeRole': {'type': 'string', 'description': 'Required role for write access to the case enquiry', 'enum': ['user', 'tech', 'admin']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'INTERNAL'}
remove_access = {'tags': ['cases/v2/case'], 'summary': 'Revoke access from a case (PUBLIC)', 'description': '', 'operationId': 'removeAccess', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'aclEntryID', 'in': 'path', 'description': 'ACL entry to revoke', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Revoke access from a case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED']}, 'uniqueItems': True}, 'grantedSubject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'id': {'type': 'string', 'format': 'uuid'}, 'level': {'type': 'string', 'enum': ['read', 'write', 'owner']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
remove_case_contact_watcher = {'tags': ['cases/v2/case'], 'summary': 'Remove a specific contact listed in the default watchers from watching this case (PUBLIC)', 'description': '', 'operationId': 'removeCaseContactWatcher', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'contactID', 'in': 'path', 'description': 'Contact ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Remove a specific contact listed in the default watchers from watching this case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'contactID': {'type': 'integer', 'format': 'int64'}, 'destination': {'type': 'string'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'NEGATIVE_ENTRY', 'VERBOSE', 'DISABLED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'minimumPriority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'role': {'type': 'string', 'enum': ['contact', 'watcher']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'type': {'type': 'string', 'enum': ['sms', 'email']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
remove_case_tag_by_id = {'tags': ['cases/v2/case'], 'summary': 'Remove existing tag (PUBLIC)', 'description': '', 'operationId': 'removeCaseTagByID', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'tagID', 'in': 'path', 'description': 'Tag ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Remove existing tag', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a tag on a Case', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'key': {'type': 'string', 'description': 'The tag key'}, 'value': {'type': 'string', 'description': 'The tag value'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
remove_case_tag_by_key_value = {'tags': ['cases/v2/case'], 'summary': 'Remove existing tag (PUBLIC)', 'description': '', 'operationId': 'removeCaseTagByKeyValue', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'tagKey', 'in': 'path', 'description': 'Tag Key', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'tagValue', 'in': 'path', 'description': 'Tag Value', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Remove existing tag', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a tag on a Case', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'key': {'type': 'string', 'description': 'The tag key'}, 'value': {'type': 'string', 'description': 'The tag value'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
remove_case_watcher = {'tags': ['cases/v2/case'], 'summary': 'Remove specific watcher from a case (PUBLIC)', 'description': '', 'operationId': 'removeCaseWatcher', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'watcherID', 'in': 'path', 'description': 'Watcher ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Remove specific watcher from a case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'contactID': {'type': 'integer', 'format': 'int64'}, 'destination': {'type': 'string'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'NEGATIVE_ENTRY', 'VERBOSE', 'DISABLED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'minimumPriority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'role': {'type': 'string', 'enum': ['contact', 'watcher']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'type': {'type': 'string', 'enum': ['sms', 'email']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
remove_current_user_watcher = {'tags': ['cases/v2/case'], 'summary': 'Remove the current user from the watchlist of this case.If the currentuser is a contact, this will override the contact settings for the current user for this case. (PUBLIC)', 'description': '', 'operationId': 'removeCurrentUserWatcher', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'responses': {'default': {'description': 'Remove the current user from the watchlist of this case.If the currentuser is a contact, this will override the contact settings for the current user for this case.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'email': {'type': 'boolean'}, 'role': {'type': 'string', 'enum': ['reporter', 'owner', 'tech', 'contact', 'watcher']}, 'sms': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
request_workflow = {'tags': ['cases/v2/case'], 'summary': 'Request new workflow on case (PUBLIC)', 'description': '', 'operationId': 'requestWorkflow', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'workflow', 'in': 'path', 'description': 'Workflow to request', 'required': True, 'schema': {'type': 'str', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}, 'type': 'str', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'description': 'Optional comment to add. Html is allowed, will be sanitized.'}, 'externalReference': {'type': 'str', 'description': 'Optional external reference to add. Should be a link or an issue number.'}, 'publicComment': {'type': 'bool', 'description': 'If true, the comment is marked as public, and is made visible to customer.'}}}}}}, 'responses': {'default': {'description': 'Request new workflow on case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'acknowledgedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'acknowledgedComment': {'type': 'string', 'description': 'Comment set for acknowledging this workflow. May contain sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'acknowledgedTime': {'type': 'string', 'description': 'Time when this workflow was acknowledged (in ISO-8601 time format)'}, 'acknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time when this workflow was acknowledged, or 0 if not acknowledged.'}, 'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'externalReference': {'type': 'string', 'description': 'An external reference for this workflow.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'PUBLIC_REQUEST_COMMENT', 'PUBLIC_ACKNOWLEDGED_COMMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'requestComment': {'type': 'string', 'description': 'Comment set when requesting this workflow. May contain sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'Name of workflow.', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
search_case_statistics = {'tags': ['cases/v2/case'], 'summary': 'Returns statistics data matching the defined CaseStatsSearchCriteria (PUBLIC)', 'description': '', 'operationId': 'searchCaseStatistics', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'accessMode': {'type': 'list', 'description': 'If set, only match cases which is set to one of these access modes', 'items': {'type': 'str', 'description': 'If set, only match cases which is set to one of these access modes', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'uniqueItems': True}, 'assetID': {'type': 'list', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)'}, 'uniqueItems': True}, 'caseID': {'type': 'list', 'description': 'Restrict search to specific cases (by ID).', 'items': {'type': 'int', 'description': 'Restrict search to specific cases (by ID).'}, 'uniqueItems': True}, 'category': {'type': 'list', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Restrict search to specific customers (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to specific customers (by ID or shortname).'}, 'uniqueItems': True}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'cutoff': {'type': 'int', 'deprecated': True, 'description': 'DEPRECATED. Use cutoff in groupBy instead.', 'minimum': 0}, 'cutoffFields': {'type': 'dict', 'additionalProperties': {'type': 'int', 'deprecated': True, 'description': 'DEPRECATED. Use field/cutoff in groupBy instead.\nReduce stats keys to max amount of distinct values per field. Fields which are not listed will not be reduced.\n'}, 'deprecated': True, 'description': 'DEPRECATED. Use field/cutoff in groupBy instead.\nReduce stats keys to max amount of distinct values per field. Fields which are not listed will not be reduced.\n'}, 'cutoffValue': {'type': 'str', 'deprecated': True, 'description': 'DEPRECATED. Use cutoffValue in groupBy instead.\nSpecify which value to be cutoff on (default created).\n', 'enum': ['created', 'open', 'closed', 'published']}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}, 'explicitAccess': {'type': 'list', 'description': 'If set, only match cases which have explicit access grants matching the specified criteria', 'items': {'type': 'dict', 'properties': {'endTimestamp': {'type': 'int', 'description': 'Match access granted before this timestamp'}, 'includeSubjectAnscendants': {'type': 'bool', 'description': 'If true, also return cases where any of the specified subjects are granted access through parent groups.'}, 'level': {'type': 'list', 'description': 'Match access granted for specified access levels', 'items': {'type': 'str', 'description': 'Match access granted for specified access levels', 'enum': ['read', 'write', 'owner']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Match access granted after this timestamp'}, 'subject': {'type': 'list', 'description': 'Match only access granted to specified user or group (id or shortname)', 'items': {'type': 'str', 'description': 'Match only access granted to specified user or group (id or shortname)'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'field': {'type': 'list', 'description': 'Restrict search to entries matching the given field criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this field.'}, 'field': {'type': 'str', 'description': 'Name of field to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.'}, 'uniqueItems': True}}, 'required': ['field']}, 'uniqueItems': True}, 'groupBy': {'type': 'list', 'description': 'Specify which keys/fields will be used for grouping by in stats and which cutoffs/cutoffValues will be applied', 'items': {'type': 'dict', 'properties': {'cutoff': {'type': 'int', 'description': 'Reduce stats keys to max amount of distinct values per field.', 'minimum': 0}, 'cutoffValue': {'type': 'str', 'description': 'Specify which value to apply cutoff on (default created).', 'enum': ['created', 'open', 'closed', 'published']}, 'field': {'type': 'str', 'description': 'ID, shortName or name of the field to group by.'}, 'key': {'type': 'str', 'description': 'Key item to group by.', 'enum': ['customer', 'service', 'category', 'priority', 'status', 'type']}}, 'required': ['key']}}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeDescription': {'type': 'bool', 'description': 'If false, omit description from response. Default is true (description is present).'}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}, 'includeOthers': {'type': 'bool', 'description': 'If reduce (cutoff>0), true means remaining keys (other than cutoff keys) are collected into an "other" key, default false'}, 'includeTestData': {'type': 'bool', 'description': 'If true, also include cases marked as TEST_DATA in search result. This option is restricted to users with permission viewCaseTestData. Default is false (excluded).'}, 'includeWorkflows': {'type': 'bool', 'description': 'If true, include list of workflows in result. Default is false (not present).'}, 'initialPriority': {'type': 'list', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'initialStatus': {'type': 'list', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'items': {'type': 'str', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'enum': ['subject', 'description', 'comments', 'customerReference', 'id', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'items': {'type': 'str', 'description': 'Search for keywords.'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'priority': {'type': 'list', 'description': 'Restrict search to entries with given priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries with given priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'resolution': {'type': 'int', 'deprecated': True, 'description': 'DEPRECATED. Timeline queries are no longer supported by this api.\nStats resolution period (unit specified by resolutionUnit), if is 0 means to generate non-timeline statistics\n', 'minimum': 0}, 'resolutionUnit': {'type': 'str', 'default': 'milliseconds', 'deprecated': True, 'description': 'DEPRECATED. Timeline queries are no longer supported by this api.\nStats resolution period time unit.\n', 'enum': ['milliseconds', 'seconds', 'minutes', 'hours', 'days', 'weeks', 'months']}, 'service': {'type': 'list', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.'}, 'uniqueItems': True}, 'serviceCriteria': {'type': 'dict', 'properties': {'excludeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'service': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}}}, 'sortBy': {'type': 'list', 'items': {'type': 'string'}}, 'sortByField': {'type': 'str', 'description': 'If set, sort by this field. The returned field must be in the groupBy list. If not set, the container will be sorted by value.', 'enum': ['customer', 'service', 'category', 'priority', 'status', 'type']}, 'sortByValue': {'type': 'str', 'description': 'If set, sort by this value (descending by value). The specified value must be in the values list. If not set, it defaults to the first returned value. This field cannot be set if sortByField id set..', 'enum': ['created', 'open', 'closed', 'published']}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'status': {'type': 'list', 'description': 'Restrict search to entries of one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'caseID': {'type': 'list', 'description': 'Restrict search to specific cases (by ID).', 'items': {'type': 'int', 'description': 'Restrict search to specific cases (by ID).'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Restrict search to specific customers (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to specific customers (by ID or shortname).'}, 'uniqueItems': True}, 'type': 'list', 'service': {'type': 'list', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.'}, 'uniqueItems': True}, 'serviceCriteria': {'type': 'dict', 'properties': {'excludeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'service': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}}}, 'category': {'type': 'list', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).'}, 'uniqueItems': True}, 'status': {'type': 'list', 'description': 'Restrict search to entries of one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'initialStatus': {'type': 'list', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'list', 'description': 'Restrict search to entries with given priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries with given priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'initialPriority': {'type': 'list', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'assetID': {'type': 'list', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)'}, 'uniqueItems': True}, 'tag': {'type': 'list', 'description': 'Restrict search to entries matching the given tag criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this tag.'}, 'key': {'type': 'str', 'description': 'Key of tag to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.'}, 'uniqueItems': True}}, 'required': ['key']}, 'uniqueItems': True}, 'workflow': {'type': 'list', 'description': 'Restrict search to entries matching the given workflow criteria.', 'items': {'type': 'dict', 'properties': {'acknowledged': {'type': 'bool', 'description': 'If true/false, limit to acknowledged/unacknowledged flows, respectively. If not set, filter on all flows of this type.'}, 'exclude': {'type': 'bool', 'description': 'If false (default), limit to cases matching this flow criteria. If true, exclude cases matching this flow criteria.'}, 'flow': {'type': 'str', 'description': 'Name of flow to search for', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}, 'required': ['flow']}, 'uniqueItems': True}, 'field': {'type': 'list', 'description': 'Restrict search to entries matching the given field criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this field.'}, 'field': {'type': 'str', 'description': 'Name of field to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.'}, 'uniqueItems': True}}, 'required': ['field']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'items': {'type': 'str', 'description': 'Search for keywords.'}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search (default all).', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search (default all).', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'closedTimestamp', 'publishedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'all']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'items': {'type': 'str', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'enum': ['subject', 'description', 'comments', 'customerReference', 'id', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'user': {'type': 'list', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).'}, 'uniqueItems': True}, 'userID': {'type': 'list', 'description': "This field is deprecated. Use field 'user' instead.", 'items': {'type': 'int', 'description': "This field is deprecated. Use field 'user' instead."}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'description': 'Defines which user fields will be searched (default match all user fields).', 'items': {'type': 'str', 'description': 'Defines which user fields will be searched (default match all user fields).', 'enum': ['reporter', 'assignedUser', 'assignedTech', 'createdByUser', 'lastUpdatedByUser', 'closedByUser', 'publishedByUser', 'commentedByUser', 'watchedByUser', 'all']}, 'uniqueItems': True}, 'userAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedUser field is set/unset'}, 'techAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedTech field is set/unset'}, 'includeWorkflows': {'type': 'bool', 'description': 'If true, include list of workflows in result. Default is false (not present).'}, 'includeDescription': {'type': 'bool', 'description': 'If false, omit description from response. Default is true (description is present).'}, 'accessMode': {'type': 'list', 'description': 'If set, only match cases which is set to one of these access modes', 'items': {'type': 'str', 'description': 'If set, only match cases which is set to one of these access modes', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'uniqueItems': True}, 'explicitAccess': {'type': 'list', 'description': 'If set, only match cases which have explicit access grants matching the specified criteria', 'items': {'type': 'dict', 'properties': {'endTimestamp': {'type': 'int', 'description': 'Match access granted before this timestamp'}, 'includeSubjectAnscendants': {'type': 'bool', 'description': 'If true, also return cases where any of the specified subjects are granted access through parent groups.'}, 'level': {'type': 'list', 'description': 'Match access granted for specified access levels', 'items': {'type': 'str', 'description': 'Match access granted for specified access levels', 'enum': ['read', 'write', 'owner']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Match access granted after this timestamp'}, 'subject': {'type': 'list', 'description': 'Match only access granted to specified user or group (id or shortname)', 'items': {'type': 'str', 'description': 'Match only access granted to specified user or group (id or shortname)'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'includeTestData': {'type': 'bool', 'description': 'If true, also include cases marked as TEST_DATA in search result. This option is restricted to users with permission viewCaseTestData. Default is false (excluded).'}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'sortBy': {'type': 'list', 'items': {'type': 'str', 'enum': ['reporter', 'createdByUser', 'createdTimestamp', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'assignedUser', 'assignedTech', 'closedByUser', 'closedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'publishedByUser', 'publishedTimestamp', 'customer', 'priority', 'status', 'type', 'service', 'category', 'subject', '-reporter', '-createdByUser', '-createdTimestamp', '-lastUpdatedByUser', '-lastUpdatedTimestamp', '-assignedUser', '-assignedTech', '-closedByUser', '-closedTimestamp', '-customerDueTimestamp', '-techDueTimestamp', '-publishedByUser', '-publishedTimestamp', '-customer', '-priority', '-status', '-type', '-service', '-category', '-subject']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'customerID': {'type': 'list', 'description': 'Restrict search to data belonging to specified customers.', 'items': {'type': 'int', 'description': 'Restrict search to data belonging to specified customers.'}, 'uniqueItems': True}, 'caseID': {'type': 'list', 'description': 'Restrict search to specific cases (by ID).', 'items': {'type': 'int', 'description': 'Restrict search to specific cases (by ID).'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Restrict search to specific customers (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to specific customers (by ID or shortname).'}, 'uniqueItems': True}, 'type': 'list', 'service': {'type': 'list', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.', 'items': {'type': 'str', 'deprecated': True, 'description': 'This option is deprecated, use serviceCriteria instead.'}, 'uniqueItems': True}, 'serviceCriteria': {'type': 'dict', 'properties': {'excludeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'HANDLED_BY_SOC', 'MONITORED_BY_SOC_OUTSIDE_OFFICEHOURS', 'DEPRECATED', 'EVENT_ENABLED']}, 'uniqueItems': True}, 'service': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}}}, 'category': {'type': 'list', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these categories (by category shortname or ID).'}, 'uniqueItems': True}, 'status': {'type': 'list', 'description': 'Restrict search to entries of one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'initialStatus': {'type': 'list', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial status is one of these statuses.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'priority': {'type': 'list', 'description': 'Restrict search to entries with given priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries with given priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'initialPriority': {'type': 'list', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'items': {'type': 'str', 'description': 'Restrict search to entries where the initial priority is one of these priorties', 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'str', 'description': 'Restrict search to data after this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'endTimestamp': {'type': 'str', 'description': 'Restrict search to data before this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'assetID': {'type': 'list', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with specified assets (hosts, services or processes)'}, 'uniqueItems': True}, 'tag': {'type': 'list', 'description': 'Restrict search to entries matching the given tag criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this tag.'}, 'key': {'type': 'str', 'description': 'Key of tag to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.'}, 'uniqueItems': True}}, 'required': ['key']}, 'uniqueItems': True}, 'workflow': {'type': 'list', 'description': 'Restrict search to entries matching the given workflow criteria.', 'items': {'type': 'dict', 'properties': {'acknowledged': {'type': 'bool', 'description': 'If true/false, limit to acknowledged/unacknowledged flows, respectively. If not set, filter on all flows of this type.'}, 'exclude': {'type': 'bool', 'description': 'If false (default), limit to cases matching this flow criteria. If true, exclude cases matching this flow criteria.'}, 'flow': {'type': 'str', 'description': 'Name of flow to search for', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}, 'required': ['flow']}, 'uniqueItems': True}, 'field': {'type': 'list', 'description': 'Restrict search to entries matching the given field criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this field.'}, 'field': {'type': 'str', 'description': 'Name of field to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this field is set.'}, 'uniqueItems': True}}, 'required': ['field']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'items': {'type': 'str', 'description': 'Search for keywords.'}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search (default all).', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search (default all).', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'closedTimestamp', 'publishedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'all']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'items': {'type': 'str', 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'enum': ['subject', 'description', 'comments', 'customerReference', 'id', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'user': {'type': 'list', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).'}, 'uniqueItems': True}, 'userID': {'type': 'list', 'description': "This field is deprecated. Use field 'user' instead.", 'items': {'type': 'int', 'description': "This field is deprecated. Use field 'user' instead."}, 'uniqueItems': True}, 'userFieldStrategy': {'type': 'list', 'description': 'Defines which user fields will be searched (default match all user fields).', 'items': {'type': 'str', 'description': 'Defines which user fields will be searched (default match all user fields).', 'enum': ['reporter', 'assignedUser', 'assignedTech', 'createdByUser', 'lastUpdatedByUser', 'closedByUser', 'publishedByUser', 'commentedByUser', 'watchedByUser', 'all']}, 'uniqueItems': True}, 'userAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedUser field is set/unset'}, 'techAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedTech field is set/unset'}, 'includeWorkflows': {'type': 'bool', 'description': 'If true, include list of workflows in result. Default is false (not present).'}, 'includeDescription': {'type': 'bool', 'description': 'If false, omit description from response. Default is true (description is present).'}, 'accessMode': {'type': 'list', 'description': 'If set, only match cases which is set to one of these access modes', 'items': {'type': 'str', 'description': 'If set, only match cases which is set to one of these access modes', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'uniqueItems': True}, 'explicitAccess': {'type': 'list', 'description': 'If set, only match cases which have explicit access grants matching the specified criteria', 'items': {'type': 'dict', 'properties': {'endTimestamp': {'type': 'int', 'description': 'Match access granted before this timestamp'}, 'includeSubjectAnscendants': {'type': 'bool', 'description': 'If true, also return cases where any of the specified subjects are granted access through parent groups.'}, 'level': {'type': 'list', 'description': 'Match access granted for specified access levels', 'items': {'type': 'str', 'description': 'Match access granted for specified access levels', 'enum': ['read', 'write', 'owner']}, 'uniqueItems': True}, 'startTimestamp': {'type': 'int', 'description': 'Match access granted after this timestamp'}, 'subject': {'type': 'list', 'description': 'Match only access granted to specified user or group (id or shortname)', 'items': {'type': 'str', 'description': 'Match only access granted to specified user or group (id or shortname)'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'includeTestData': {'type': 'bool', 'description': 'If true, also include cases marked as TEST_DATA in search result. This option is restricted to users with permission viewCaseTestData. Default is false (excluded).'}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'sortBy': {'type': 'list', 'items': {'type': 'str', 'enum': ['reporter', 'createdByUser', 'createdTimestamp', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'assignedUser', 'assignedTech', 'closedByUser', 'closedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'publishedByUser', 'publishedTimestamp', 'customer', 'priority', 'status', 'type', 'service', 'category', 'subject', '-reporter', '-createdByUser', '-createdTimestamp', '-lastUpdatedByUser', '-lastUpdatedTimestamp', '-assignedUser', '-assignedTech', '-closedByUser', '-closedTimestamp', '-customerDueTimestamp', '-techDueTimestamp', '-publishedByUser', '-publishedTimestamp', '-customer', '-priority', '-status', '-type', '-service', '-category', '-subject']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'REOPENED']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'tag': {'type': 'list', 'description': 'Restrict search to entries matching the given tag criteria.', 'items': {'type': 'dict', 'properties': {'exclude': {'type': 'bool', 'description': 'If true, invert this criteria. If no value is set, exclude any entry having this tag.'}, 'key': {'type': 'str', 'description': 'Key of tag to search for'}, 'values': {'type': 'list', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.', 'items': {'type': 'str', 'description': 'Values of tag to search for (any of them). If no value is set, this matches any entry where this tag is set.'}, 'uniqueItems': True}}, 'required': ['key']}, 'uniqueItems': True}, 'techAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedTech field is set/unset'}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search (default all).', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search (default all).', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'closedTimestamp', 'publishedTimestamp', 'customerDueTimestamp', 'techDueTimestamp', 'all']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'type': {'type': 'list', 'description': 'Restrict search to entries of one of these types.', 'items': {'type': 'str', 'description': 'Restrict search to entries of one of these types.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'user': {'type': 'list', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).', 'items': {'type': 'str', 'description': 'Restrict search to cases associated with these users or user groups (by ID or shortname).'}, 'uniqueItems': True}, 'userAssigned': {'type': 'bool', 'description': 'If set, limit search to cases where assignedUser field is set/unset'}, 'userFieldStrategy': {'type': 'list', 'description': 'Defines which user fields will be searched (default match all user fields).', 'items': {'type': 'str', 'description': 'Defines which user fields will be searched (default match all user fields).', 'enum': ['reporter', 'assignedUser', 'assignedTech', 'createdByUser', 'lastUpdatedByUser', 'closedByUser', 'publishedByUser', 'commentedByUser', 'watchedByUser', 'all']}, 'uniqueItems': True}, 'userID': {'type': 'list', 'description': "This field is deprecated. Use field 'user' instead.", 'items': {'type': 'int', 'description': "This field is deprecated. Use field 'user' instead."}, 'uniqueItems': True}, 'values': {'type': 'list', 'description': 'Specify which values will be included in stats (default created)', 'items': {'type': 'str', 'description': 'Specify which values will be included in stats (default created)', 'enum': ['created', 'open', 'closed', 'published']}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'workflow': {'type': 'list', 'description': 'Restrict search to entries matching the given workflow criteria.', 'items': {'type': 'dict', 'properties': {'acknowledged': {'type': 'bool', 'description': 'If true/false, limit to acknowledged/unacknowledged flows, respectively. If not set, filter on all flows of this type.'}, 'exclude': {'type': 'bool', 'description': 'If false (default), limit to cases matching this flow criteria. If true, exclude cases matching this flow criteria.'}, 'flow': {'type': 'str', 'description': 'Name of flow to search for', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}, 'required': ['flow']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Returns statistics data matching the defined CaseStatsSearchCriteria', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'customerID': {'type': 'integer', 'format': 'int64', 'description': 'Customer ID'}, 'hitCount': {'type': 'object', 'additionalProperties': {'type': 'integer', 'format': 'int64', 'description': 'Total amount of hits per value'}, 'description': 'Total amount of hits per value'}, 'keyNames': {'type': 'array', 'description': 'List of key names', 'items': {'type': 'string', 'description': 'List of key names'}}, 'keys': {'type': 'array', 'description': 'List of statistics keys e.g. {"id":1, "key1Name":"key1", "key2Name":"key2"}', 'items': {'type': 'object', 'additionalProperties': {'description': 'List of statistics keys e.g. {"id":1, "key1Name":"key1", "key2Name":"key2"}'}, 'description': 'List of statistics keys e.g. {"id":1, "key1Name":"key1", "key2Name":"key2"}'}}, 'records': {'type': 'integer', 'format': 'int32', 'description': 'Amount of records'}, 'resolution': {'type': 'integer', 'format': 'int64', 'description': 'Statistics time frame period length'}, 'resolutionUnit': {'type': 'string', 'description': 'Time unit for the resolution', 'enum': ['milliseconds', 'seconds', 'minutes', 'hours', 'days', 'weeks', 'months', 'years']}, 'statsID': {'type': 'integer', 'format': 'int64', 'description': 'Statistics ID'}, 'timeFrames': {'type': 'array', 'description': 'List of statistics records grouped by time frame', 'items': {'type': 'object', 'description': 'List of statistics records grouped by time frame', 'properties': {'records': {'type': 'array', 'items': {'type': 'object', 'properties': {'keyID': {'type': 'integer', 'format': 'int64'}, 'value': {'type': 'object', 'additionalProperties': {'type': 'integer', 'format': 'int64'}}}}}, 'timeFrame': {'type': 'object', 'properties': {'endTime': {'type': 'integer', 'format': 'int64'}, 'startTime': {'type': 'integer', 'format': 'int64'}}}}}}, 'valueNames': {'type': 'array', 'description': 'List of value names', 'items': {'type': 'string', 'description': 'List of value names'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCaseStatistics'], 'x-Argus-ApiStatus': 'PUBLIC'}
set_field = {'tags': ['cases/v2/case'], 'summary': 'Set specific field for a case, by either field ID or field name. For multivalue fields, the field may contain multiple values. (INTERNAL)', 'description': '', 'operationId': 'setField', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'ID of the case to set fields for', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}, {'name': 'field', 'in': 'path', 'description': 'ID or fieldName of the field to set', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to set case fields', 'properties': {'source': {'type': 'str', 'description': 'An origin source string to set on the added value(s).'}, 'value': {'type': 'str', 'description': 'Value to set on field. Multivalue fields will reject requests using this parameter.'}, 'valuesToAdd': {'type': 'list', 'description': 'Value to add to a multivalue field. Existing values will be retained. Singlevalue fields will reject requests using this parameter.', 'items': {'type': 'str', 'description': 'Value to add to a multivalue field. Existing values will be retained. Singlevalue fields will reject requests using this parameter.'}, 'uniqueItems': True}, 'valuesToRemove': {'type': 'list', 'description': 'Value to remove from a multivalue field. Singlevalue fields will reject requests using this parameter. May be the exact value, or reference using the value ID.', 'items': {'type': 'str', 'description': 'Value to remove from a multivalue field. Singlevalue fields will reject requests using this parameter. May be the exact value, or reference using the value ID.'}, 'uniqueItems': True}, 'valuesToSet': {'type': 'list', 'description': 'Value to set on a multivalue field. Existing values will be discarded. Singlevalue fields will reject requests using this parameter.', 'items': {'type': 'str', 'description': 'Value to set on a multivalue field. Existing values will be discarded. Singlevalue fields will reject requests using this parameter.'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Set specific field for a case, by either field ID or field name. For multivalue fields, the field may contain multiple values.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'descriptor': {'type': 'object', 'description': 'Field descriptor', 'properties': {'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MULTIVALUE', 'HAS_VALUE_SOURCE', 'HIDDEN']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string', 'description': 'The name of this field. May be overridden by displayName in field policies.'}, 'shortName': {'type': 'string', 'description': 'The shortname of this field.'}, 'valueType': {'type': 'string', 'description': 'The value type of this field. Field values will be validated to ensure that the type is valid. If the field is a multivalue field, each value must be of the correct type.', 'enum': ['booleanType', 'integerType', 'floatType', 'stringType', 'textType', 'timestampType', 'ipType', 'subjectType', 'caseType', 'documentType', 'assetType', 'jsonType']}}}, 'displayName': {'type': 'string', 'description': 'Display name of this field (as set in the field policy)'}, 'value': {'type': 'object', 'description': 'Current field values for multivalue fields.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Value id. Use this to explicitly reference a specific value.'}, 'info': {'type': 'object', 'description': 'Info object. This is an optional complex object depending on the value type of the field.'}, 'key': {'type': 'string', 'description': 'Value key. May be a string, number or boolean value.'}, 'label': {'type': 'string', 'description': 'Value label. String representation of the value. If not a mapped value, this is a string version of the key.'}, 'origin': {'type': 'object', 'description': 'Origin info. The originating user and timestamp, and optionally a source string.', 'properties': {'source': {'type': 'string', 'description': 'Specifies where did the information originate from.'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of setting the origin.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'User ID associated with the origin.'}}}}}, 'values': {'type': 'array', 'description': 'Current field values for multivalue fields.', 'items': {'type': 'object', 'description': 'Current field values for multivalue fields.', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Value id. Use this to explicitly reference a specific value.'}, 'info': {'type': 'object', 'description': 'Info object. This is an optional complex object depending on the value type of the field.'}, 'key': {'type': 'string', 'description': 'Value key. May be a string, number or boolean value.'}, 'label': {'type': 'string', 'description': 'Value label. String representation of the value. If not a mapped value, this is a string version of the key.'}, 'origin': {'type': 'object', 'description': 'Origin info. The originating user and timestamp, and optionally a source string.', 'properties': {'source': {'type': 'string', 'description': 'Specifies where did the information originate from.'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp of setting the origin.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'User ID associated with the origin.'}}}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'INTERNAL'}
simple_case_search = {'tags': ['cases/v2/case'], 'summary': 'Returns cases matching the query parameters (PUBLIC)', 'description': '', 'operationId': 'simpleCaseSearch', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}, {'name': 'customerID', 'in': 'query', 'description': 'DEPRECATED. Use customer instead', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'customer', 'in': 'query', 'description': 'Limit result to specified customers (by id or shortname)', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'service', 'in': 'query', 'description': 'Limit result to specified services (service shortname)', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'status', 'in': 'query', 'description': 'Limit result to specified statuses', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'uniqueItems': True}, {'name': 'type', 'in': 'query', 'description': 'Limit result to specified types', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keywords', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort order (see /cases/v2/case/search documentation for details)', 'schema': {'type': 'list', 'items': {'type': 'string'}}, 'type': 'list', 'items': {'type': 'string'}}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}], 'responses': {'default': {'description': 'Returns cases matching the query parameters', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}, 'text/csv': {}, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': {}}}}, 'x-Argus-Required-Permissions': ['viewCases'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_case = {'tags': ['cases/v2/case'], 'summary': 'Request changes to basic fields of an existing case (PUBLIC)', 'description': '', 'operationId': 'updateCase', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'subject': {'type': 'str', 'description': 'If set, change subject of case.'}, 'description': {'type': 'str', 'description': 'If set, change description of case. May use HTML, will be sanitized.'}, 'status': {'type': 'str', 'description': 'If set, change status of case', 'enum': ['pendingClose', 'pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingCustomer', 'workingSoc']}, 'priority': {'type': 'str', 'description': 'If set, change priority of case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'category': {'type': 'str', 'description': "If set, assign given category to specified category (by category shortname). Set value to empty string to unset category. Deprecated categories can't be used as a new value."}, 'reporter': {'type': 'str', 'description': 'If set, set given user as reporter for case (by ID or shortname). Shortname will be resolved in the current users domain.'}, 'assignedUser': {'type': 'str', 'description': 'If set, assign given user to case (by ID or shortname). Shortname will be resolved in the current users domain. If blank, this will unset assignedUser.'}, 'assignedTech': {'type': 'str', 'description': 'If set, assign given technical user (solution engineer) to case (by ID or shortname). Shortname will be resolved in the current users domain. If blank, this will unset assignedTech.'}, 'customerDueTimestamp': {'type': 'int'}, 'techDueTimestamp': {'type': 'int'}, 'customerReference': {'type': 'str', 'description': 'If set, change customer reference for case.'}, 'comment': {'type': 'str', 'description': 'If set, add comment to case. May use HTML, will be sanitized.'}, 'internalComment': {'type': 'bool', 'default': False, 'description': 'If true, add comment as internal.'}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'originEmailAddress': {'type': 'str', 'description': 'If update is made from an email, specify origin email address here [format:email]', 'x-Argus-Format': 'email'}, 'triggers': {'type': 'dict', 'properties': {'severityAlert': {'type': 'bool', 'description': 'If true, enable trigger to check for severity alert workflow'}}}, 'hasEvents': {'type': 'bool', 'description': 'If set, update the hasEvents flag for this case, signalling that this case may have events associated to it.'}, 'textFormat': {'type': 'str', 'default': 'html', 'description': 'Specify the text format of this comment. Setting plainText gives other consumers a hint that contents does not require a HTML renderer.', 'enum': ['plainText', 'html']}, 'reporterID': {'type': 'dict', 'properties': {'subject': {'type': 'str', 'description': 'If set, change subject of case.'}, 'description': {'type': 'str', 'description': 'If set, change description of case. May use HTML, will be sanitized.'}, 'status': {'type': 'str', 'description': 'If set, change status of case', 'enum': ['pendingClose', 'pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingCustomer', 'workingSoc']}, 'priority': {'type': 'str', 'description': 'If set, change priority of case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'category': {'type': 'str', 'description': "If set, assign given category to specified category (by category shortname). Set value to empty string to unset category. Deprecated categories can't be used as a new value."}, 'reporter': {'type': 'str', 'description': 'If set, set given user as reporter for case (by ID or shortname). Shortname will be resolved in the current users domain.'}, 'assignedUser': {'type': 'str', 'description': 'If set, assign given user to case (by ID or shortname). Shortname will be resolved in the current users domain. If blank, this will unset assignedUser.'}, 'assignedTech': {'type': 'str', 'description': 'If set, assign given technical user (solution engineer) to case (by ID or shortname). Shortname will be resolved in the current users domain. If blank, this will unset assignedTech.'}, 'customerDueTimestamp': {'type': 'int'}, 'techDueTimestamp': {'type': 'int'}, 'customerReference': {'type': 'str', 'description': 'If set, change customer reference for case.'}, 'comment': {'type': 'str', 'description': 'If set, add comment to case. May use HTML, will be sanitized.'}, 'internalComment': {'type': 'bool', 'default': False, 'description': 'If true, add comment as internal.'}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'originEmailAddress': {'type': 'str', 'description': 'If update is made from an email, specify origin email address here [format:email]', 'x-Argus-Format': 'email'}, 'triggers': {'type': 'dict', 'properties': {'severityAlert': {'type': 'bool', 'description': 'If true, enable trigger to check for severity alert workflow'}}}, 'hasEvents': {'type': 'bool', 'description': 'If set, update the hasEvents flag for this case, signalling that this case may have events associated to it.'}, 'textFormat': {'type': 'str', 'default': 'html', 'description': 'Specify the text format of this comment. Setting plainText gives other consumers a hint that contents does not require a HTML renderer.', 'enum': ['plainText', 'html']}, 'reporterID': [], 'assignedUserID': [], 'assignedTechID': []}}, 'assignedUserID': {'type': 'dict', 'properties': {'subject': {'type': 'str', 'description': 'If set, change subject of case.'}, 'description': {'type': 'str', 'description': 'If set, change description of case. May use HTML, will be sanitized.'}, 'status': {'type': 'str', 'description': 'If set, change status of case', 'enum': ['pendingClose', 'pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingCustomer', 'workingSoc']}, 'priority': {'type': 'str', 'description': 'If set, change priority of case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'category': {'type': 'str', 'description': "If set, assign given category to specified category (by category shortname). Set value to empty string to unset category. Deprecated categories can't be used as a new value."}, 'reporter': {'type': 'str', 'description': 'If set, set given user as reporter for case (by ID or shortname). Shortname will be resolved in the current users domain.'}, 'assignedUser': {'type': 'str', 'description': 'If set, assign given user to case (by ID or shortname). Shortname will be resolved in the current users domain. If blank, this will unset assignedUser.'}, 'assignedTech': {'type': 'str', 'description': 'If set, assign given technical user (solution engineer) to case (by ID or shortname). Shortname will be resolved in the current users domain. If blank, this will unset assignedTech.'}, 'customerDueTimestamp': {'type': 'int'}, 'techDueTimestamp': {'type': 'int'}, 'customerReference': {'type': 'str', 'description': 'If set, change customer reference for case.'}, 'comment': {'type': 'str', 'description': 'If set, add comment to case. May use HTML, will be sanitized.'}, 'internalComment': {'type': 'bool', 'default': False, 'description': 'If true, add comment as internal.'}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'originEmailAddress': {'type': 'str', 'description': 'If update is made from an email, specify origin email address here [format:email]', 'x-Argus-Format': 'email'}, 'triggers': {'type': 'dict', 'properties': {'severityAlert': {'type': 'bool', 'description': 'If true, enable trigger to check for severity alert workflow'}}}, 'hasEvents': {'type': 'bool', 'description': 'If set, update the hasEvents flag for this case, signalling that this case may have events associated to it.'}, 'textFormat': {'type': 'str', 'default': 'html', 'description': 'Specify the text format of this comment. Setting plainText gives other consumers a hint that contents does not require a HTML renderer.', 'enum': ['plainText', 'html']}, 'reporterID': [], 'assignedUserID': [], 'assignedTechID': []}}, 'assignedTechID': {'type': 'dict', 'properties': {'subject': {'type': 'str', 'description': 'If set, change subject of case.'}, 'description': {'type': 'str', 'description': 'If set, change description of case. May use HTML, will be sanitized.'}, 'status': {'type': 'str', 'description': 'If set, change status of case', 'enum': ['pendingClose', 'pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingCustomer', 'workingSoc']}, 'priority': {'type': 'str', 'description': 'If set, change priority of case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'category': {'type': 'str', 'description': "If set, assign given category to specified category (by category shortname). Set value to empty string to unset category. Deprecated categories can't be used as a new value."}, 'reporter': {'type': 'str', 'description': 'If set, set given user as reporter for case (by ID or shortname). Shortname will be resolved in the current users domain.'}, 'assignedUser': {'type': 'str', 'description': 'If set, assign given user to case (by ID or shortname). Shortname will be resolved in the current users domain. If blank, this will unset assignedUser.'}, 'assignedTech': {'type': 'str', 'description': 'If set, assign given technical user (solution engineer) to case (by ID or shortname). Shortname will be resolved in the current users domain. If blank, this will unset assignedTech.'}, 'customerDueTimestamp': {'type': 'int'}, 'techDueTimestamp': {'type': 'int'}, 'customerReference': {'type': 'str', 'description': 'If set, change customer reference for case.'}, 'comment': {'type': 'str', 'description': 'If set, add comment to case. May use HTML, will be sanitized.'}, 'internalComment': {'type': 'bool', 'default': False, 'description': 'If true, add comment as internal.'}, 'notification': {'type': 'dict', 'properties': {'extraRecipients': {'type': 'list', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. ', 'items': {'type': 'str', 'description': 'Additional recipients (email addresses or phone numbers) to be notified of this operation. '}, 'uniqueItems': True}, 'includeAttachments': {'type': 'bool', 'description': 'If true, attachments are requested included in email notifications. Configuration may still override this for some/all destinations. Default is false.'}, 'skipEmail': {'type': 'bool', 'description': 'If true, skip default email notification. ExtraRecipients will still be notified. Default is false.'}, 'skipSMS': {'type': 'bool', 'description': 'If true, skip default sms notification. Default is false.'}}}, 'originEmailAddress': {'type': 'str', 'description': 'If update is made from an email, specify origin email address here [format:email]', 'x-Argus-Format': 'email'}, 'triggers': {'type': 'dict', 'properties': {'severityAlert': {'type': 'bool', 'description': 'If true, enable trigger to check for severity alert workflow'}}}, 'hasEvents': {'type': 'bool', 'description': 'If set, update the hasEvents flag for this case, signalling that this case may have events associated to it.'}, 'textFormat': {'type': 'str', 'default': 'html', 'description': 'Specify the text format of this comment. Setting plainText gives other consumers a hint that contents does not require a HTML renderer.', 'enum': ['plainText', 'html']}, 'reporterID': [], 'assignedUserID': [], 'assignedTechID': []}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Request changes to basic fields of an existing case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_case_watcher = {'tags': ['cases/v2/case'], 'summary': 'Update settings for a specific watcher on a case (PUBLIC)', 'description': '', 'operationId': 'updateCaseWatcher', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'watcherID', 'in': 'path', 'description': 'Watcher ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'verbose': {'type': 'bool', 'description': 'If set, will enable/disable verbose status for this watcher.'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update settings for a specific watcher on a case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'contactID': {'type': 'integer', 'format': 'int64'}, 'destination': {'type': 'string'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'NEGATIVE_ENTRY', 'VERBOSE', 'DISABLED', 'MERGED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'minimumPriority': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'role': {'type': 'string', 'enum': ['contact', 'watcher']}, 'subject': {'oneOf': [{'allOf': [{'type': 'object', 'discriminator': {'propertyName': 'type'}, 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, {'type': 'object', 'properties': {'description': {'type': 'object'}, 'type': {'type': 'string', 'enum': ['group']}}}], 'required': ['type']}, {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}]}, 'type': {'type': 'string', 'enum': ['sms', 'email']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_watcher_settings = {'tags': ['cases/v2/case'], 'summary': 'Update general watcher settings on a case (PUBLIC)', 'description': '', 'operationId': 'updateWatcherSettings', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'defaultWatchers': {'type': 'bool', 'description': 'If set, will enable/disable use of default watchers on this case.'}}, 'required': ['defaultWatchers']}}}, 'required': True}, 'responses': {'default': {'description': 'Update general watcher settings on a case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a case', 'properties': {'accessMode': {'type': 'string', 'description': 'Access mode of this case.', 'enum': ['roleBased', 'readRestricted', 'writeRestricted', 'explicit']}, 'assignedTech': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'assignedUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'category': {'type': 'object', 'description': 'Bound category', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'localizedName': {'type': 'string', 'description': 'Category name localized to current users language'}, 'name': {'type': 'string', 'description': 'Category name'}, 'shortName': {'type': 'string', 'description': 'Category shortname'}}}, 'closedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'closedTime': {'type': 'string', 'description': 'Close time of this case (in ISO-8601 time format), or null if not closed.'}, 'closedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The most recent closing timestamp of this case (in millis since epoch), or 0 if not closed.'}, 'createdByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTime': {'type': 'string', 'description': 'Creation time of this case (in ISO-8601 time format)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Creation timestamp of this case (in millis since epoch).'}, 'currentUserAccess': {'type': 'object', 'description': 'The access level of the current user for this case.', 'properties': {'level': {'type': 'string', 'description': 'The current users access level on this case.', 'enum': ['read', 'write', 'owner']}, 'role': {'type': 'string', 'description': 'The current users access role on this case.', 'enum': ['user', 'tech', 'admin']}}}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerDueTime': {'type': 'string', 'description': 'The timestamp set as due date for customer followup of this case (in ISO-8601 time format).'}, 'customerDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp set as due date for customer followup of this case (in millis since epoch).'}, 'customerReference': {'type': 'string', 'description': 'If set, this contains a customer reference of this case.'}, 'description': {'type': 'string', 'description': 'Textual description of this case. Contains sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'descriptionTextFormat': {'type': 'string', 'description': 'The output format of the text contents.', 'enum': ['plainText', 'html']}, 'descriptionTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'descriptionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'EXTERNAL_SYNC', 'HAS_ATTACHMENT', 'INTERNAL', 'MAIL_UPDATE', 'MERGED', 'NOTIFIED', 'PUBLISHED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_OTHER_USER', 'DEFAULT_CONTACTS', 'DESCRIPTION_EDITED', 'SUBMITTED_BY_TECH', 'SUBJECT_EDITED', 'HAS_EVENTS', 'TEST_DATA', 'HAS_COMMENTS', 'PREPARED', 'REOPENED']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64'}, 'initialPriority': {'type': 'string', 'description': 'The initial priority this case was assigned on create.', 'enum': ['low', 'medium', 'high', 'critical']}, 'initialStatus': {'type': 'string', 'description': 'The initial status this case was assigned on create.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'lastAssociatedEventTime': {'type': 'string', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event). In ISO-8601 time format.'}, 'lastAssociatedEventTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the last event association was performed (the timestamp of the operation, not the timestamp of the event).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTime': {'type': 'string', 'description': 'Last updated time of this case (in ISO-8601 time format).'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last update timestamp of this case (in millis since epoch).'}, 'originEmailAddress': {'type': 'string', 'description': 'The email address which this case originated from. Only present if flag MAIL_UPDATE is set.'}, 'priority': {'type': 'string', 'description': 'The current priority of this case.', 'enum': ['low', 'medium', 'high', 'critical']}, 'publishedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'publishedTime': {'type': 'string', 'description': 'Publish time of this case (in ISO-8601 time format), or null if not published.'}, 'publishedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp this case was published (in millis since epoch), or 0 if not published.'}, 'reporter': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'service': {'type': 'object', 'description': 'Service which is subscribed to', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'Service ID'}, 'localizedName': {'type': 'string', 'description': 'Service name localized to the current users language'}, 'name': {'type': 'string', 'description': 'Service name'}, 'shortName': {'type': 'string', 'description': 'Service shortname'}}}, 'status': {'type': 'string', 'description': 'The current status of this case.', 'enum': ['pendingCustomer', 'pendingSoc', 'pendingVendor', 'workingSoc', 'workingCustomer', 'pendingClose', 'closed']}, 'subject': {'type': 'string', 'description': 'Subject of this case.'}, 'techDueTime': {'type': 'string', 'description': 'The timestamp of the last change of the description of this case (in ISO-8601 time format).'}, 'techDueTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last change of the description of this case (in millis since epoch).'}, 'type': {'type': 'string', 'description': 'Type of this case.', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}, 'workflows': {'type': 'array', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'items': {'type': 'object', 'description': 'If requested by client, workflows contains a summary of active workflows on this case.', 'properties': {'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'The name of the workflow', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_workflow = {'tags': ['cases/v2/case'], 'summary': 'Update workflow on case (PUBLIC)', 'description': '', 'operationId': 'updateWorkflow', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'workflow', 'in': 'path', 'description': 'Workflow to update', 'required': True, 'schema': {'type': 'str', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}, 'type': 'str', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'acknowledgedComment': {'type': 'str', 'description': 'If set, modify acknowledged comment. Html is allowed, will be sanitized. [format:html]', 'x-Argus-Format': 'html'}, 'externalReference': {'type': 'str', 'description': 'If set, modify external reference. Should be a link or an issue number. Empty string will delete existing reference.'}, 'requestComment': {'type': 'str', 'description': 'If set, modify request comment. Html is allowed, will be sanitized. [format:html]', 'x-Argus-Format': 'html'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update workflow on case', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'acknowledgedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'acknowledgedComment': {'type': 'string', 'description': 'Comment set for acknowledging this workflow. May contain sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'acknowledgedTime': {'type': 'string', 'description': 'Time when this workflow was acknowledged (in ISO-8601 time format)'}, 'acknowledgedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time when this workflow was acknowledged, or 0 if not acknowledged.'}, 'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'externalReference': {'type': 'string', 'description': 'An external reference for this workflow.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'PUBLIC_REQUEST_COMMENT', 'PUBLIC_ACKNOWLEDGED_COMMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'requestComment': {'type': 'string', 'description': 'Comment set when requesting this workflow. May contain sanitized HTML.  (@SafeHTML)', 'x-safe-html': True}, 'state': {'type': 'string', 'description': 'The state of the workflow', 'enum': ['requested', 'acknowledged']}, 'workflow': {'type': 'string', 'description': 'Name of workflow.', 'enum': ['validation', 'nocValidation', 'tuning', 'escalation', 'customerUpdate', 'escalateTI', 'escalateNSA', 'escalateLog', 'escalateInfra', 'escalateMSI', 'severityAlert', 'slaViolation', 'internalSlaViolation', 'delegateToSOC', 'escalateDEV', 'escalateTRS', 'escalateMSSAnalyst', 'escalateTAM', 'qaValidation', 'socAnalysis']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
upload_attachment_fragment = {'tags': ['cases/v2/case'], 'summary': 'Upload fragment of an attachment (PUBLIC)', 'description': 'Fragments must be uploaded in correct order', 'operationId': 'uploadAttachmentFragment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'attachmentID', 'in': 'path', 'description': 'Attachment ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}, {'name': 'idx', 'in': 'path', 'description': 'Attachment Fragment Index', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}], 'requestBody': {'content': {'*': {'schema': {'type': 'object'}}}}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Upload fragment of an attachment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}
upload_streaming_attachment = {'tags': ['cases/v2/case'], 'summary': 'Add new attachment (PUBLIC)', 'description': 'Upload new attachment as data stream', 'operationId': 'uploadStreamingAttachment', 'parameters': [{'name': 'caseID', 'in': 'path', 'description': 'Case ID', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'filename', 'in': 'path', 'description': 'Attachment filename', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'Content-Type', 'in': 'header', 'description': 'Mime type', 'required': True, 'schema': {'type': 'string'}}, {'name': 'encryptedZip', 'in': 'query', 'description': 'This option is deprecated, use encryptedZipMode instead', 'schema': {'type': 'boolean'}, 'type': 'bool'}, {'name': 'encryptedZipMode', 'in': 'query', 'description': "Use mode 'client' to mark attachment as an encrypted zipfile. Use mode 'server' to request server-side encryption", 'schema': {'type': 'str', 'default': 'none', 'enum': ['none', 'client', 'server']}, 'type': 'str', 'default': 'none', 'enum': ['none', 'client', 'server']}, {'name': 'encryptedZipPassword', 'in': 'query', 'description': 'Use this to document the password used for zip encryption', 'schema': {'type': 'str', 'default': 'argus'}, 'type': 'str', 'default': 'argus'}, {'name': 'skipNotification', 'in': 'query', 'description': 'If true, skip notification', 'schema': {'type': 'boolean'}, 'type': 'bool'}, {'name': 'originEmailAddress', 'in': 'query', 'description': 'If set, mark attachment with this origin email address', 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'*': {'schema': {'type': 'object'}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add new attachment', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'addedByUser': {'type': 'object', 'description': 'User which last updated this service', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'description': 'The domain this service is bound to', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'addedTime': {'type': 'string', 'description': 'Time when this value was added (in ISO-8601 time format)'}, 'addedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this value was added (in millis since epoch)'}, 'encryptedZipPassword': {'type': 'string', 'description': 'If attachment is an encrypted zipfile, this documents the password to decrypt it'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'MERGED', 'ZIP_ENCRYPTED', 'SUBMITTED_BY_ANONYMOUS_USER', 'SUBMITTED_BY_TECH', 'MAIL_UPDATE', 'INCOMPLETE', 'INTERNAL', 'PREPARED']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'mimeType': {'type': 'string', 'description': 'Attachment mimetype'}, 'name': {'type': 'string', 'description': 'Attachment file name'}, 'originEmailAddress': {'type': 'string', 'description': 'Attachment origin email address (only present if attachment is marked as a mail update)'}, 'sha256': {'type': 'string', 'description': 'Attachment checksum'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Attachment file size (in bytes)'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateCase'], 'x-Argus-ApiStatus': 'PUBLIC'}