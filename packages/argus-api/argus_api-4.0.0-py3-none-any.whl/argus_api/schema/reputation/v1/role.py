"""Autogenerated API schema"""
from argus_api import session


add_new_role = {'tags': ['reputation/v1'], 'summary': 'Add new reputation role (INTERNAL)', 'description': '', 'operationId': 'addNewRole', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to create a new Role.', 'properties': {'alias': {'type': 'str', 'description': 'Role alias, must be unique.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'description': 'Role name', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'score': {'type': 'float', 'default': 0.0, 'description': 'Role score', 'maximum': 1, 'minimum': 0}}, 'required': ['alias', 'name']}}}, 'required': True}, 'responses': {'default': {'description': 'Add new reputation role', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The kind of activity associated with an observation', 'properties': {'alias': {'type': 'string', 'description': "The Role's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'deleted': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Any flags set on the Role.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Role was last updated.'}, 'name': {'type': 'string', 'description': "The Role's name."}, 'score': {'type': 'number', 'format': 'double', 'description': "The Role's score."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_role = {'tags': ['reputation/v1'], 'summary': 'Delete reputation role (INTERNAL)', 'description': '', 'operationId': 'deleteRole', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of role to delete', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Delete reputation role', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The kind of activity associated with an observation', 'properties': {'alias': {'type': 'string', 'description': "The Role's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'deleted': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Any flags set on the Role.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Role was last updated.'}, 'name': {'type': 'string', 'description': "The Role's name."}, 'score': {'type': 'number', 'format': 'double', 'description': "The Role's score."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_role_by_alias = {'tags': ['reputation/v1'], 'summary': 'Fetch reputation role by role alias (INTERNAL)', 'description': '', 'operationId': 'getRoleByAlias', 'parameters': [{'name': 'alias', 'in': 'path', 'description': 'Alias of role to fetch', 'required': True, 'schema': {'type': 'str', 'pattern': '.*[^0-9].*'}, 'type': 'str', 'pattern': '.*[^0-9].*'}], 'responses': {'default': {'description': 'Fetch reputation role by role alias', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The kind of activity associated with an observation', 'properties': {'alias': {'type': 'string', 'description': "The Role's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'deleted': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Any flags set on the Role.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Role was last updated.'}, 'name': {'type': 'string', 'description': "The Role's name."}, 'score': {'type': 'number', 'format': 'double', 'description': "The Role's score."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_role_by_id = {'tags': ['reputation/v1'], 'summary': 'Fetch reputation role by ID (INTERNAL)', 'description': '', 'operationId': 'getRoleByID', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of role to fetch', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Fetch reputation role by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The kind of activity associated with an observation', 'properties': {'alias': {'type': 'string', 'description': "The Role's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'deleted': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Any flags set on the Role.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Role was last updated.'}, 'name': {'type': 'string', 'description': "The Role's name."}, 'score': {'type': 'number', 'format': 'double', 'description': "The Role's score."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_roles = {'tags': ['reputation/v1'], 'summary': 'List reputation roles (INTERNAL)', 'description': '', 'operationId': 'listRoles', 'parameters': [{'name': 'search', 'in': 'query', 'description': 'Limit result to roles matching this search string', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit result', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset result', 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'List reputation roles', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'The kind of activity associated with an observation', 'properties': {'alias': {'type': 'string', 'description': "The Role's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'deleted': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Any flags set on the Role.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Role was last updated.'}, 'name': {'type': 'string', 'description': "The Role's name."}, 'score': {'type': 'number', 'format': 'double', 'description': "The Role's score."}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
restore_role = {'tags': ['reputation/v1'], 'summary': 'Restore reputation role (INTERNAL)', 'description': '', 'operationId': 'restoreRole', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of deleted role to restore', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'*/*': {'schema': {'type': 'object', 'description': 'Request to restore a deleted Role'}}}, 'required': True}, 'responses': {'default': {'description': 'Restore reputation role', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The kind of activity associated with an observation', 'properties': {'alias': {'type': 'string', 'description': "The Role's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'deleted': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Any flags set on the Role.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Role was last updated.'}, 'name': {'type': 'string', 'description': "The Role's name."}, 'score': {'type': 'number', 'format': 'double', 'description': "The Role's score."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_roles = {'tags': ['reputation/v1'], 'summary': 'Search reputation roles (INTERNAL)', 'description': '', 'operationId': 'searchRoles', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Search criteria for Observation Roles', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'description': 'Search criteria for Observation Roles', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'id': {'type': 'list', 'description': 'Filter results by Sources with these ids', 'items': {'type': 'int', 'description': 'Filter results by Sources with these ids'}, 'uniqueItems': True}, 'searchString': {'type': 'str', 'description': 'Filter results by Roles with matching id, alias, or name.'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'lastModified', '-id', '-lastModified']}}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'id': {'type': 'list', 'description': 'Filter results by Sources with these ids', 'items': {'type': 'int', 'description': 'Filter results by Sources with these ids'}, 'uniqueItems': True}, 'searchString': {'type': 'str', 'description': 'Filter results by Roles with matching id, alias, or name.'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'lastModified', '-id', '-lastModified']}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search reputation roles', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'The kind of activity associated with an observation', 'properties': {'alias': {'type': 'string', 'description': "The Role's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'deleted': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Any flags set on the Role.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Role was last updated.'}, 'name': {'type': 'string', 'description': "The Role's name."}, 'score': {'type': 'number', 'format': 'double', 'description': "The Role's score."}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_role = {'tags': ['reputation/v1'], 'summary': 'Update reputation role (INTERNAL)', 'description': '', 'operationId': 'updateRole', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of role to update', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an existing Role.', 'properties': {'alias': {'type': 'str', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'id': {'type': 'int', 'description': "The Role's unique ID."}, 'name': {'type': 'str', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'score': {'type': 'float', 'minimum': 0}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update reputation role', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'The kind of activity associated with an observation', 'properties': {'alias': {'type': 'string', 'description': "The Role's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'deleted': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64', 'description': 'Any flags set on the Role.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Role was last updated.'}, 'name': {'type': 'string', 'description': "The Role's name."}, 'score': {'type': 'number', 'format': 'double', 'description': "The Role's score."}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}