"""Autogenerated API schema"""
from argus_api import session


calculate_reputation_for_domain = {'tags': ['reputation/v1'], 'summary': 'Look up the calculated reputation value for the given Domain (INTERNAL)', 'description': '', 'operationId': 'calculateReputationForDomain', 'parameters': [{'name': 'fqdn', 'in': 'path', 'description': 'Domain to look up', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Look up the calculated reputation value for the given Domain', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'domainName': {'type': 'object', 'properties': {'fqdn': {'type': 'string'}}}, 'override': {'type': 'boolean'}, 'reason': {'type': 'string'}, 'value': {'type': 'number', 'format': 'double'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
calculate_reputation_for_ip = {'tags': ['reputation/v1'], 'summary': 'Look up the calculated reputation value for the given IP (INTERNAL)', 'description': '', 'operationId': 'calculateReputationForIP', 'parameters': [{'name': 'ip', 'in': 'path', 'description': 'IP address to look up', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Look up the calculated reputation value for the given IP', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'address': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'override': {'type': 'boolean'}, 'reason': {'type': 'string'}, 'value': {'type': 'number', 'format': 'double'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
find_address_reputation = {'tags': ['reputation/v1'], 'summary': 'Search for calculated IP reputation values (INTERNAL)', 'description': '', 'operationId': 'findAddressReputation', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Search criteria for reputation values for matching IP addresses', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'description': 'Search criteria for reputation values for matching IP addresses', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'minimumValue': {'type': 'float', 'description': 'Filter results by reputations with at least this value'}, 'sourceID': {'type': 'list', 'description': 'Filter results by reputation values from these sources', 'items': {'type': 'int', 'description': 'Filter results by reputation values from these sources'}, 'uniqueItems': True}, 'fromAddress': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'afterAddress': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'addresses': {'type': 'list', 'description': 'Filter results by these IP addresses', 'items': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'minimumValue': {'type': 'float', 'description': 'Filter results by reputations with at least this value'}, 'sourceID': {'type': 'list', 'description': 'Filter results by reputation values from these sources', 'items': {'type': 'int', 'description': 'Filter results by reputation values from these sources'}, 'uniqueItems': True}, 'fromAddress': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'afterAddress': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'addresses': {'type': 'list', 'description': 'Filter results by these IP addresses', 'items': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search for calculated IP reputation values', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'address': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'override': {'type': 'boolean'}, 'reason': {'type': 'string'}, 'value': {'type': 'number', 'format': 'double'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
find_domain_reputation = {'tags': ['reputation/v1'], 'summary': 'Search for calculated domain reputation values (INTERNAL)', 'description': '', 'operationId': 'findDomainReputation', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Search criteria for reputation values for matching domains', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'description': 'Search criteria for reputation values for matching domains', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'minimumValue': {'type': 'float', 'description': 'Filter results by reputations with at least this value'}, 'sourceID': {'type': 'list', 'description': 'Filter results by reputation values from these sources', 'items': {'type': 'int', 'description': 'Filter results by reputation values from these sources'}, 'uniqueItems': True}, 'fromDomainName': {'type': 'dict', 'properties': {'fqdn': {'type': 'string'}}}, 'afterDomainName': {'type': 'dict', 'properties': {'fqdn': {'type': 'string'}}}, 'domains': {'type': 'list', 'description': 'Search for observations by exactly matching on domain name. Invalid domains will be ignored.', 'items': {'type': 'str', 'description': 'Search for observations by exactly matching on domain name. Invalid domains will be ignored.'}, 'uniqueItems': True}, 'domainNames': {'type': 'list', 'description': 'Fully Qualified Domain Names', 'items': {'type': 'dict', 'properties': {'fqdn': {'type': 'string'}}}}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'minimumValue': {'type': 'float', 'description': 'Filter results by reputations with at least this value'}, 'sourceID': {'type': 'list', 'description': 'Filter results by reputation values from these sources', 'items': {'type': 'int', 'description': 'Filter results by reputation values from these sources'}, 'uniqueItems': True}, 'fromDomainName': {'type': 'dict', 'properties': {'fqdn': {'type': 'string'}}}, 'afterDomainName': {'type': 'dict', 'properties': {'fqdn': {'type': 'string'}}}, 'domains': {'type': 'list', 'description': 'Search for observations by exactly matching on domain name. Invalid domains will be ignored.', 'items': {'type': 'str', 'description': 'Search for observations by exactly matching on domain name. Invalid domains will be ignored.'}, 'uniqueItems': True}, 'domainNames': {'type': 'list', 'description': 'Fully Qualified Domain Names', 'items': {'type': 'dict', 'properties': {'fqdn': {'type': 'string'}}}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search for calculated domain reputation values', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'domainName': {'type': 'object', 'properties': {'fqdn': {'type': 'string'}}}, 'override': {'type': 'boolean'}, 'reason': {'type': 'string'}, 'value': {'type': 'number', 'format': 'double'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_address_reputation = {'tags': ['reputation/v1'], 'summary': 'List up calculated IP reputation values (INTERNAL)', 'description': '', 'operationId': 'listAddressReputation', 'parameters': [{'name': 'fromAddress', 'in': 'query', 'description': 'List observed domains after this domain, including (sorted by reverse domain)', 'schema': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, {'name': 'afterAddress', 'in': 'query', 'description': 'List observed domains after this domain, excluding (sorted by reverse domain)', 'schema': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, {'name': 'sourceID', 'in': 'query', 'description': 'Limit to domains observed in this source', 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'minimumValue', 'in': 'query', 'description': 'Limit to domains which have a reputation score at lease this large', 'schema': {'type': 'float'}, 'type': 'float'}, {'name': 'limit', 'in': 'query', 'description': 'Limit output', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset result', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'List up calculated IP reputation values', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'address': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'override': {'type': 'boolean'}, 'reason': {'type': 'string'}, 'value': {'type': 'number', 'format': 'double'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_domain_reputation = {'tags': ['reputation/v1'], 'summary': 'List up calculated domain reputation values (INTERNAL)', 'description': '', 'operationId': 'listDomainReputation', 'parameters': [{'name': 'fromDomain', 'in': 'query', 'description': 'List observed domains after this domain, including (sorted by reverse domain)', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'afterDomain', 'in': 'query', 'description': 'List observed domains after this domain, excluding (sorted by reverse domain)', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'sourceID', 'in': 'query', 'description': 'Limit to domains observed in this source', 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'minimumValue', 'in': 'query', 'description': 'Limit to domains which have a reputation score at lease this large', 'schema': {'type': 'float'}, 'type': 'float'}, {'name': 'limit', 'in': 'query', 'description': 'Limit output', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset result', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'List up calculated domain reputation values', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'domainName': {'type': 'object', 'properties': {'fqdn': {'type': 'string'}}}, 'override': {'type': 'boolean'}, 'reason': {'type': 'string'}, 'value': {'type': 'number', 'format': 'double'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}