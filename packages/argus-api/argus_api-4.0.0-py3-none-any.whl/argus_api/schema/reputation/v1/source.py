"""Autogenerated API schema"""
from argus_api import session


add_new_source = {'tags': ['reputation/v1'], 'summary': 'Add reputation source (INTERNAL)', 'description': '', 'operationId': 'addNewSource', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to create a new Source.', 'properties': {'activePeriod': {'type': 'int', 'default': 0, 'description': 'Source active period', 'minimum': 1}, 'alias': {'type': 'str', 'description': 'Source alias, must be unique.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'confidence': {'type': 'float', 'default': 0.0, 'description': 'Source confidence', 'minimum': 0}, 'enableSync': {'type': 'bool', 'description': 'If true, enable remote sync of this source (even if reputation calc is not enabled)'}, 'fudgePeriod': {'type': 'int', 'default': 0, 'description': 'Source fudge period', 'minimum': 1}, 'monitored': {'type': 'bool', 'description': 'If true, mark this source as monitored'}, 'name': {'type': 'str', 'description': 'Source name', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'bool', 'description': 'If true, enable reputation calculation using this source'}}, 'required': ['alias', 'name']}}}, 'required': True}, 'responses': {'default': {'description': 'Add reputation source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A Source of Observations', 'properties': {'activePeriod': {'type': 'integer', 'format': 'int64', 'description': 'The time an observation is kept active after last seen, before moving the observation to latest/old state.'}, 'addressCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'alias': {'type': 'string', 'description': "The Source's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'confidence': {'type': 'number', 'format': 'double', 'description': 'The confidence value attributed to Observations made by this Source. Ranges from 0 to 1.0'}, 'deleted': {'type': 'boolean'}, 'domainCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'enableSync': {'type': 'boolean'}, 'fudgePeriod': {'type': 'integer', 'format': 'int64', 'description': ' The time an observation may be reactivated after being inactive. If the same observation is seen after the fudge period has passed a new observation is created.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastTransitionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source last transitioned.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source was last updated.'}, 'monitored': {'type': 'boolean'}, 'name': {'type': 'string', 'description': "The Source's name."}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_source = {'tags': ['reputation/v1'], 'summary': 'Delete reputation source (INTERNAL)', 'description': '', 'operationId': 'deleteSource', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of source to delete', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Delete reputation source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A Source of Observations', 'properties': {'activePeriod': {'type': 'integer', 'format': 'int64', 'description': 'The time an observation is kept active after last seen, before moving the observation to latest/old state.'}, 'addressCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'alias': {'type': 'string', 'description': "The Source's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'confidence': {'type': 'number', 'format': 'double', 'description': 'The confidence value attributed to Observations made by this Source. Ranges from 0 to 1.0'}, 'deleted': {'type': 'boolean'}, 'domainCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'enableSync': {'type': 'boolean'}, 'fudgePeriod': {'type': 'integer', 'format': 'int64', 'description': ' The time an observation may be reactivated after being inactive. If the same observation is seen after the fudge period has passed a new observation is created.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastTransitionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source last transitioned.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source was last updated.'}, 'monitored': {'type': 'boolean'}, 'name': {'type': 'string', 'description': "The Source's name."}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
find_sources = {'tags': ['reputation/v1'], 'summary': 'Search reputation sources (INTERNAL)', 'description': '', 'operationId': 'findSources', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Search criteria for Observation Sources', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'description': 'Search criteria for Observation Sources', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'id': {'type': 'list', 'description': 'Filter results by Sources with these ids', 'items': {'type': 'int', 'description': 'Filter results by Sources with these ids'}, 'uniqueItems': True}, 'searchString': {'type': 'str', 'description': 'Filter results by Sources with matching id, alias, or name.'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'lastModified', '-id', '-lastModified']}}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'id': {'type': 'list', 'description': 'Filter results by Sources with these ids', 'items': {'type': 'int', 'description': 'Filter results by Sources with these ids'}, 'uniqueItems': True}, 'searchString': {'type': 'str', 'description': 'Filter results by Sources with matching id, alias, or name.'}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'lastModified', '-id', '-lastModified']}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search reputation sources', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'A Source of Observations', 'properties': {'activePeriod': {'type': 'integer', 'format': 'int64', 'description': 'The time an observation is kept active after last seen, before moving the observation to latest/old state.'}, 'addressCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'alias': {'type': 'string', 'description': "The Source's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'confidence': {'type': 'number', 'format': 'double', 'description': 'The confidence value attributed to Observations made by this Source. Ranges from 0 to 1.0'}, 'deleted': {'type': 'boolean'}, 'domainCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'enableSync': {'type': 'boolean'}, 'fudgePeriod': {'type': 'integer', 'format': 'int64', 'description': ' The time an observation may be reactivated after being inactive. If the same observation is seen after the fudge period has passed a new observation is created.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastTransitionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source last transitioned.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source was last updated.'}, 'monitored': {'type': 'boolean'}, 'name': {'type': 'string', 'description': "The Source's name."}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'boolean'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_source_by_alias = {'tags': ['reputation/v1'], 'summary': 'Fetch reputation source by alias (INTERNAL)', 'description': '', 'operationId': 'getSourceByAlias', 'parameters': [{'name': 'alias', 'in': 'path', 'description': 'Alias of source to fetch', 'required': True, 'schema': {'type': 'str', 'pattern': '.*[^0-9].*'}, 'type': 'str', 'pattern': '.*[^0-9].*'}], 'responses': {'default': {'description': 'Fetch reputation source by alias', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A Source of Observations', 'properties': {'activePeriod': {'type': 'integer', 'format': 'int64', 'description': 'The time an observation is kept active after last seen, before moving the observation to latest/old state.'}, 'addressCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'alias': {'type': 'string', 'description': "The Source's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'confidence': {'type': 'number', 'format': 'double', 'description': 'The confidence value attributed to Observations made by this Source. Ranges from 0 to 1.0'}, 'deleted': {'type': 'boolean'}, 'domainCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'enableSync': {'type': 'boolean'}, 'fudgePeriod': {'type': 'integer', 'format': 'int64', 'description': ' The time an observation may be reactivated after being inactive. If the same observation is seen after the fudge period has passed a new observation is created.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastTransitionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source last transitioned.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source was last updated.'}, 'monitored': {'type': 'boolean'}, 'name': {'type': 'string', 'description': "The Source's name."}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_source_by_id = {'tags': ['reputation/v1'], 'summary': 'Fetch reputation source by ID (INTERNAL)', 'description': '', 'operationId': 'getSourceById', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of source to fetch', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Fetch reputation source by ID', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A Source of Observations', 'properties': {'activePeriod': {'type': 'integer', 'format': 'int64', 'description': 'The time an observation is kept active after last seen, before moving the observation to latest/old state.'}, 'addressCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'alias': {'type': 'string', 'description': "The Source's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'confidence': {'type': 'number', 'format': 'double', 'description': 'The confidence value attributed to Observations made by this Source. Ranges from 0 to 1.0'}, 'deleted': {'type': 'boolean'}, 'domainCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'enableSync': {'type': 'boolean'}, 'fudgePeriod': {'type': 'integer', 'format': 'int64', 'description': ' The time an observation may be reactivated after being inactive. If the same observation is seen after the fudge period has passed a new observation is created.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastTransitionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source last transitioned.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source was last updated.'}, 'monitored': {'type': 'boolean'}, 'name': {'type': 'string', 'description': "The Source's name."}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_sources = {'tags': ['reputation/v1'], 'summary': 'List reputation sources (INTERNAL)', 'description': '', 'operationId': 'listSources', 'parameters': [{'name': 'search', 'in': 'query', 'description': 'Limit result to sources matching this search string', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit result', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset result', 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'List reputation sources', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'A Source of Observations', 'properties': {'activePeriod': {'type': 'integer', 'format': 'int64', 'description': 'The time an observation is kept active after last seen, before moving the observation to latest/old state.'}, 'addressCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'alias': {'type': 'string', 'description': "The Source's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'confidence': {'type': 'number', 'format': 'double', 'description': 'The confidence value attributed to Observations made by this Source. Ranges from 0 to 1.0'}, 'deleted': {'type': 'boolean'}, 'domainCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'enableSync': {'type': 'boolean'}, 'fudgePeriod': {'type': 'integer', 'format': 'int64', 'description': ' The time an observation may be reactivated after being inactive. If the same observation is seen after the fudge period has passed a new observation is created.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastTransitionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source last transitioned.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source was last updated.'}, 'monitored': {'type': 'boolean'}, 'name': {'type': 'string', 'description': "The Source's name."}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'boolean'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
restore_source = {'tags': ['reputation/v1'], 'summary': 'Restore reputation source (INTERNAL)', 'description': '', 'operationId': 'restoreSource', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of deleted source to restore', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'*/*': {'schema': {'type': 'object', 'description': 'Request to restore a deleted Source'}}}, 'required': True}, 'responses': {'default': {'description': 'Restore reputation source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A Source of Observations', 'properties': {'activePeriod': {'type': 'integer', 'format': 'int64', 'description': 'The time an observation is kept active after last seen, before moving the observation to latest/old state.'}, 'addressCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'alias': {'type': 'string', 'description': "The Source's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'confidence': {'type': 'number', 'format': 'double', 'description': 'The confidence value attributed to Observations made by this Source. Ranges from 0 to 1.0'}, 'deleted': {'type': 'boolean'}, 'domainCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'enableSync': {'type': 'boolean'}, 'fudgePeriod': {'type': 'integer', 'format': 'int64', 'description': ' The time an observation may be reactivated after being inactive. If the same observation is seen after the fudge period has passed a new observation is created.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastTransitionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source last transitioned.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source was last updated.'}, 'monitored': {'type': 'boolean'}, 'name': {'type': 'string', 'description': "The Source's name."}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
transition_source = {'tags': ['reputation/v1'], 'summary': 'Transition reputation source. This recalculates active and expired records according to the sources configured timing.Source Transition is automatically run after completing an import. (INTERNAL)', 'description': '', 'operationId': 'transitionSource', 'parameters': [{'name': 'source', 'in': 'path', 'description': 'ID or alias of source to transition', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Transition reputation source. This recalculates active and expired records according to the sources configured timing.Source Transition is automatically run after completing an import.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Value object for reporting the result of a transition operation back to the caller', 'properties': {'activatedAddresses': {'type': 'integer', 'format': 'int32', 'description': 'Number of address observations activated.'}, 'activatedDomains': {'type': 'integer', 'format': 'int32', 'description': 'Number of domain observations activated.'}, 'currentAddresses': {'type': 'integer', 'format': 'int32', 'description': 'Number of address observations currently active after the transition operation.'}, 'currentDomains': {'type': 'integer', 'format': 'int32', 'description': 'Number of domain observations currently active after the transition operation.'}, 'disabledAddresses': {'type': 'integer', 'format': 'int32', 'description': 'Number of address observations disabled.'}, 'disabledDomains': {'type': 'integer', 'format': 'int32', 'description': 'Number of domain observations disabled.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_source = {'tags': ['reputation/v1'], 'summary': 'Update reputation source (INTERNAL)', 'description': '', 'operationId': 'updateSource', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of source to update', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an existing Source.', 'properties': {'activePeriod': {'type': 'int', 'minimum': 1}, 'alias': {'type': 'str', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'confidence': {'type': 'float', 'minimum': 0}, 'enableSync': {'type': 'bool', 'description': 'If set, change the remote sync setting for this source'}, 'fudgePeriod': {'type': 'int', 'minimum': 1}, 'id': {'type': 'int', 'description': "The Source's unique ID."}, 'monitored': {'type': 'bool', 'description': 'If set, change the monitored setting for this source'}, 'name': {'type': 'str', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'bool', 'description': 'If set, change the setting for reputation calculation using this source'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update reputation source', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A Source of Observations', 'properties': {'activePeriod': {'type': 'integer', 'format': 'int64', 'description': 'The time an observation is kept active after last seen, before moving the observation to latest/old state.'}, 'addressCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'alias': {'type': 'string', 'description': "The Source's alias. The alias is unique and can be used as an alternative to the id for retrieval."}, 'confidence': {'type': 'number', 'format': 'double', 'description': 'The confidence value attributed to Observations made by this Source. Ranges from 0 to 1.0'}, 'deleted': {'type': 'boolean'}, 'domainCounters': {'type': 'object', 'properties': {'active': {'type': 'integer', 'format': 'int32'}, 'latest': {'type': 'integer', 'format': 'int32'}, 'old': {'type': 'integer', 'format': 'int32'}}}, 'enableSync': {'type': 'boolean'}, 'fudgePeriod': {'type': 'integer', 'format': 'int64', 'description': ' The time an observation may be reactivated after being inactive. If the same observation is seen after the fudge period has passed a new observation is created.'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastTransitionTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source last transitioned.'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the Source was last updated.'}, 'monitored': {'type': 'boolean'}, 'name': {'type': 'string', 'description': "The Source's name."}, 'private': {'type': 'boolean'}, 'useForReputationCalc': {'type': 'boolean'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['editObservationData'], 'x-Argus-ApiStatus': 'INTERNAL'}