"""Autogenerated API schema"""
from argus_api import session


get_component_status = {'tags': ['componentadmin/v2'], 'summary': 'Fetch status for specified component (INTERNAL)', 'description': '', 'operationId': 'getComponentStatus', 'parameters': [{'name': 'componentID', 'in': 'path', 'description': 'Component ID', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch status for specified component', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'componentID': {'type': 'string', 'format': 'uuid', 'description': 'ID of this component'}, 'componentIdentifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The identifiers set on this component'}, 'description': 'The identifiers set on this component'}, 'componentName': {'type': 'string', 'description': 'The name of this component'}, 'componentType': {'type': 'string', 'description': 'The class name of this component'}, 'containerID': {'type': 'string', 'format': 'uuid', 'description': 'ID of the container this component runs in'}, 'hostID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the host this component belongs to'}, 'instanceID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the instance this component belongs to, or null if it belongs to the root container'}, 'interfaces': {'type': 'array', 'description': 'All interfaces implemented by this component', 'items': {'type': 'string', 'description': 'All interfaces implemented by this component'}, 'uniqueItems': True}, 'status': {'type': 'string', 'description': 'The last reported text status for this component'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last status update for this component'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_host_instances = {'tags': ['componentadmin/v2'], 'summary': 'Request status for all instances on specified host (INTERNAL)', 'description': '', 'operationId': 'getHostInstances', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or name of host to request instance status for', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'Request status for all instances on specified host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'flags': {'type': 'array', 'description': 'Instance status flags', 'items': {'type': 'string', 'description': 'Instance status flags', 'enum': ['monitoringDisabled', 'inDowntime', 'installedConfig', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored', 'parentDaytimeMonitored', 'deleted']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Host this instance is running on', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Container identifier properties'}, 'description': 'Container identifier properties'}, 'instanceRevision': {'type': 'object', 'description': 'Running, installed and master instance revisions', 'properties': {'installed': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is installed on the distributed host, or null if not installed.'}, 'master': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is currently the master for this configuration instance'}, 'running': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is running on the distributed host, or null if not running.'}}}, 'parentID': {'type': 'integer', 'format': 'int32', 'description': 'If set, this instance is run as a child of the instance with this ID'}, 'state': {'type': 'string', 'description': 'Current state for instance container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'template': {'type': 'object', 'description': 'The configuration template this instance is based on', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'templateRevision': {'type': 'object', 'description': 'Running, installed and master instance revisions', 'properties': {'installed': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is installed on the distributed host, or null if not installed.'}, 'master': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is currently the master for this configuration instance'}, 'running': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is running on the distributed host, or null if not running.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Request status for specific host (INTERNAL)', 'description': '', 'operationId': 'getHostStatus', 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or name of host to request status for', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Request status for specific host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'flags': {'type': 'array', 'description': 'Host status flags', 'items': {'type': 'string', 'description': 'Host status flags', 'enum': ['monitoringDisabled', 'inDowntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Host name'}, 'state': {'type': 'string', 'description': 'Current state for host container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_instance_status = {'tags': ['componentadmin/v2'], 'summary': 'Request status for specific instance (INTERNAL)', 'description': '', 'operationId': 'getInstanceStatus', 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to request status for', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Request status for specific instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'flags': {'type': 'array', 'description': 'Instance status flags', 'items': {'type': 'string', 'description': 'Instance status flags', 'enum': ['monitoringDisabled', 'inDowntime', 'installedConfig', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored', 'parentDaytimeMonitored', 'deleted']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Host this instance is running on', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Container identifier properties'}, 'description': 'Container identifier properties'}, 'instanceRevision': {'type': 'object', 'description': 'Running, installed and master instance revisions', 'properties': {'installed': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is installed on the distributed host, or null if not installed.'}, 'master': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is currently the master for this configuration instance'}, 'running': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is running on the distributed host, or null if not running.'}}}, 'parentID': {'type': 'integer', 'format': 'int32', 'description': 'If set, this instance is run as a child of the instance with this ID'}, 'state': {'type': 'string', 'description': 'Current state for instance container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'template': {'type': 'object', 'description': 'The configuration template this instance is based on', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'templateRevision': {'type': 'object', 'description': 'Running, installed and master instance revisions', 'properties': {'installed': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is installed on the distributed host, or null if not installed.'}, 'master': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is currently the master for this configuration instance'}, 'running': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is running on the distributed host, or null if not running.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_status_overview = {'tags': ['componentadmin/v2'], 'summary': 'Request status overview (INTERNAL)', 'description': '', 'operationId': 'getStatusOverview', 'responses': {'default': {'description': 'Request status overview', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'hosts': {'type': 'object', 'properties': {'disabledMonitoring': {'type': 'integer', 'format': 'int32'}, 'missing': {'type': 'integer', 'format': 'int32'}, 'running': {'type': 'integer', 'format': 'int32'}, 'scheduledDowntime': {'type': 'integer', 'format': 'int32'}, 'total': {'type': 'integer', 'format': 'int32'}}}, 'instances': {'type': 'object', 'properties': {'disabledMonitoring': {'type': 'integer', 'format': 'int32'}, 'missing': {'type': 'integer', 'format': 'int32'}, 'outdatedConfig': {'type': 'integer', 'format': 'int32'}, 'outdatedRuntime': {'type': 'integer', 'format': 'int32'}, 'running': {'type': 'integer', 'format': 'int32'}, 'scheduledDowntime': {'type': 'integer', 'format': 'int32'}, 'total': {'type': 'integer', 'format': 'int32'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_template_status = {'tags': ['componentadmin/v2'], 'summary': 'Get template status (INTERNAL)', 'description': '', 'operationId': 'getTemplateStatus', 'parameters': [{'name': 'template', 'in': 'path', 'description': 'ID or shortname of template to fetch status for', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get template status', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'latestRevision': {'type': 'integer', 'format': 'int32', 'description': 'The latest revision of this template'}, 'name': {'type': 'string', 'description': 'Template name'}, 'oldRevisionCount': {'type': 'integer', 'format': 'int32', 'description': 'The number of instances which are not promoted to this revision of the template'}, 'outdatedConfigCount': {'type': 'integer', 'format': 'int32', 'description': 'The number of instances for this template which are reporting outdated config (e.g. promoted, but not upgraded)'}, 'outdatedRuntimeCount': {'type': 'integer', 'format': 'int32', 'description': 'The number of instances for this template which are running with outdated runtime (e.g. upgraded/installed, but not restarted)'}, 'shortName': {'type': 'string', 'description': 'Template shortname'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_component_status = {'tags': ['componentadmin/v2'], 'summary': 'List component status (INTERNAL)', 'description': '', 'operationId': 'listComponentStatus', 'parameters': [{'name': 'componentType', 'in': 'query', 'description': 'Component type', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'List component status', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'componentID': {'type': 'string', 'format': 'uuid', 'description': 'ID of this component'}, 'componentIdentifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The identifiers set on this component'}, 'description': 'The identifiers set on this component'}, 'componentName': {'type': 'string', 'description': 'The name of this component'}, 'componentType': {'type': 'string', 'description': 'The class name of this component'}, 'containerID': {'type': 'string', 'format': 'uuid', 'description': 'ID of the container this component runs in'}, 'hostID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the host this component belongs to'}, 'instanceID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the instance this component belongs to, or null if it belongs to the root container'}, 'interfaces': {'type': 'array', 'description': 'All interfaces implemented by this component', 'items': {'type': 'string', 'description': 'All interfaces implemented by this component'}, 'uniqueItems': True}, 'status': {'type': 'string', 'description': 'The last reported text status for this component'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last status update for this component'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Simple host status search (INTERNAL)', 'description': '', 'operationId': 'listHostStatus', 'parameters': [{'name': 'instanceState', 'in': 'query', 'description': 'Filter result by instance state', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, {'name': 'hostState', 'in': 'query', 'description': 'Filter result by host state', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': 'Specify sort ordering. Default is sort by name ascending.', 'schema': {'type': 'list', 'items': {'type': 'string'}}, 'type': 'list', 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Simple host status search', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'flags': {'type': 'array', 'description': 'Host status flags', 'items': {'type': 'string', 'description': 'Host status flags', 'enum': ['monitoringDisabled', 'inDowntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Host name'}, 'state': {'type': 'string', 'description': 'Current state for host container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_instance_status = {'tags': ['componentadmin/v2'], 'summary': 'Simple instance status search (INTERNAL)', 'description': '', 'operationId': 'listInstanceStatus', 'parameters': [{'name': 'instanceState', 'in': 'query', 'description': 'Filter result by instance state', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'Simple instance status search', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'flags': {'type': 'array', 'description': 'Instance status flags', 'items': {'type': 'string', 'description': 'Instance status flags', 'enum': ['monitoringDisabled', 'inDowntime', 'installedConfig', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored', 'parentDaytimeMonitored', 'deleted']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Host this instance is running on', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Container identifier properties'}, 'description': 'Container identifier properties'}, 'instanceRevision': {'type': 'object', 'description': 'Running, installed and master instance revisions', 'properties': {'installed': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is installed on the distributed host, or null if not installed.'}, 'master': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is currently the master for this configuration instance'}, 'running': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is running on the distributed host, or null if not running.'}}}, 'parentID': {'type': 'integer', 'format': 'int32', 'description': 'If set, this instance is run as a child of the instance with this ID'}, 'state': {'type': 'string', 'description': 'Current state for instance container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'template': {'type': 'object', 'description': 'The configuration template this instance is based on', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'templateRevision': {'type': 'object', 'description': 'Running, installed and master instance revisions', 'properties': {'installed': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is installed on the distributed host, or null if not installed.'}, 'master': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is currently the master for this configuration instance'}, 'running': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is running on the distributed host, or null if not running.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_template_status = {'tags': ['componentadmin/v2'], 'summary': 'List template status, ordered by template name (INTERNAL)', 'description': '', 'operationId': 'listTemplateStatus', 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'List template status, ordered by template name', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'latestRevision': {'type': 'integer', 'format': 'int32', 'description': 'The latest revision of this template'}, 'name': {'type': 'string', 'description': 'Template name'}, 'oldRevisionCount': {'type': 'integer', 'format': 'int32', 'description': 'The number of instances which are not promoted to this revision of the template'}, 'outdatedConfigCount': {'type': 'integer', 'format': 'int32', 'description': 'The number of instances for this template which are reporting outdated config (e.g. promoted, but not upgraded)'}, 'outdatedRuntimeCount': {'type': 'integer', 'format': 'int32', 'description': 'The number of instances for this template which are running with outdated runtime (e.g. upgraded/installed, but not restarted)'}, 'shortName': {'type': 'string', 'description': 'Template shortname'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_component_status = {'tags': ['componentadmin/v2'], 'summary': 'Advanced component status search (INTERNAL)', 'description': '', 'operationId': 'searchComponentStatus', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'componentIdentifiers': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Identifiers of components to invoke'}, 'description': 'Identifiers of components to invoke'}, 'componentType': {'type': 'str', 'description': 'Type of components to invoke'}, 'limit': {'type': 'int', 'default': 25, 'description': 'Set this value to set max number of results. By default, result set size is 25.', 'minimum': 0}, 'offset': {'type': 'int', 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object.', 'minimum': 0}}}}}, 'required': True}, 'responses': {'default': {'description': 'Advanced component status search', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'componentID': {'type': 'string', 'format': 'uuid', 'description': 'ID of this component'}, 'componentIdentifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The identifiers set on this component'}, 'description': 'The identifiers set on this component'}, 'componentName': {'type': 'string', 'description': 'The name of this component'}, 'componentType': {'type': 'string', 'description': 'The class name of this component'}, 'containerID': {'type': 'string', 'format': 'uuid', 'description': 'ID of the container this component runs in'}, 'hostID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the host this component belongs to'}, 'instanceID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the instance this component belongs to, or null if it belongs to the root container'}, 'interfaces': {'type': 'array', 'description': 'All interfaces implemented by this component', 'items': {'type': 'string', 'description': 'All interfaces implemented by this component'}, 'uniqueItems': True}, 'status': {'type': 'string', 'description': 'The last reported text status for this component'}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp of the last status update for this component'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Advanced host status search (INTERNAL)', 'description': '', 'operationId': 'searchHostStatus', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'description': 'Filter hosts by owning customer (id or shortname).', 'items': {'type': 'str', 'description': 'Filter hosts by owning customer (id or shortname).'}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'If set, exclude all results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, exclude all results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'If set, include only results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, include only results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'instanceCriteria': {'type': 'list', 'description': 'Filter hosts by instance status search criteria. Will filter hosts which contain the matching instances', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'description': 'Filter instances by their hosts owning customer (id or shortname).', 'items': {'type': 'str', 'description': 'Filter instances by their hosts owning customer (id or shortname).'}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria object will be excluded.'}, 'excludeFlags': {'type': 'list', 'description': 'If set, exclude all results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, exclude all results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, limit result to instances for any of these hosts (by id or hostname).', 'items': {'type': 'str', 'description': 'If set, limit result to instances for any of these hosts (by id or hostname).'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'If set, include only results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, include only results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'A set of keywords matched against instances, or their template or host.', 'items': {'type': 'str', 'description': 'A set of keywords matched against instances, or their template or host.'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'state': {'type': 'list', 'description': 'If set, limit result to instances in one of these states.', 'items': {'type': 'str', 'description': 'If set, limit result to instances in one of these states.', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, 'template': {'type': 'list', 'description': 'If set, limit result to instances of any of these templates (by id or shortname)', 'items': {'type': 'str', 'description': 'If set, limit result to instances of any of these templates (by id or shortname)'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'A set of keywords matched against hosts.', 'items': {'type': 'str', 'description': 'A set of keywords matched against hosts.'}, 'uniqueItems': True}, 'labels': {'type': 'list', 'description': 'If set, include only hosts where any of these labels are set.', 'items': {'type': 'str', 'description': 'If set, include only hosts where any of these labels are set.'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Set this value to set max number of results. By default, result set size is 25.'}, 'offset': {'type': 'int', 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object.'}, 'sortBy': {'type': 'list', 'default': '[name]', 'description': 'Specify sort ordering for returned host status. Default is sort by host name.', 'items': {'type': 'str', 'default': '[name]', 'description': 'Specify sort ordering for returned host status. Default is sort by host name.', 'enum': ['id', 'name', '-id', '-name']}}, 'state': {'type': 'list', 'description': 'If set, limit result to hosts in one of these states.', 'items': {'type': 'str', 'description': 'If set, limit result to hosts in one of these states.', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set).', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'description': 'Filter hosts by owning customer (id or shortname).', 'items': {'type': 'str', 'description': 'Filter hosts by owning customer (id or shortname).'}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria object will be excluded.'}, 'excludeFlags': {'type': 'list', 'description': 'If set, exclude all results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, exclude all results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'If set, include only results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, include only results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'instanceCriteria': {'type': 'list', 'description': 'Filter hosts by instance status search criteria. Will filter hosts which contain the matching instances', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'description': 'Filter instances by their hosts owning customer (id or shortname).', 'items': {'type': 'str', 'description': 'Filter instances by their hosts owning customer (id or shortname).'}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria object will be excluded.'}, 'excludeFlags': {'type': 'list', 'description': 'If set, exclude all results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, exclude all results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, limit result to instances for any of these hosts (by id or hostname).', 'items': {'type': 'str', 'description': 'If set, limit result to instances for any of these hosts (by id or hostname).'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'If set, include only results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, include only results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'A set of keywords matched against instances, or their template or host.', 'items': {'type': 'str', 'description': 'A set of keywords matched against instances, or their template or host.'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'state': {'type': 'list', 'description': 'If set, limit result to instances in one of these states.', 'items': {'type': 'str', 'description': 'If set, limit result to instances in one of these states.', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, 'template': {'type': 'list', 'description': 'If set, limit result to instances of any of these templates (by id or shortname)', 'items': {'type': 'str', 'description': 'If set, limit result to instances of any of these templates (by id or shortname)'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'A set of keywords matched against hosts.', 'items': {'type': 'str', 'description': 'A set of keywords matched against hosts.'}, 'uniqueItems': True}, 'labels': {'type': 'list', 'description': 'If set, include only hosts where any of these labels are set.', 'items': {'type': 'str', 'description': 'If set, include only hosts where any of these labels are set.'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'state': {'type': 'list', 'description': 'If set, limit result to hosts in one of these states.', 'items': {'type': 'str', 'description': 'If set, limit result to hosts in one of these states.', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}}}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Advanced host status search', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'flags': {'type': 'array', 'description': 'Host status flags', 'items': {'type': 'string', 'description': 'Host status flags', 'enum': ['monitoringDisabled', 'inDowntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Host name'}, 'state': {'type': 'string', 'description': 'Current state for host container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_instance_status = {'tags': ['componentadmin/v2'], 'summary': 'Advanced instance status search (INTERNAL)', 'description': '', 'operationId': 'searchInstanceStatus', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'description': 'Filter instances by their hosts owning customer (id or shortname).', 'items': {'type': 'str', 'description': 'Filter instances by their hosts owning customer (id or shortname).'}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'If set, exclude all results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, exclude all results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, limit result to instances for any of these hosts (by id or hostname).', 'items': {'type': 'str', 'description': 'If set, limit result to instances for any of these hosts (by id or hostname).'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'If set, include only results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, include only results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'A set of keywords matched against instances, or their template or host.', 'items': {'type': 'str', 'description': 'A set of keywords matched against instances, or their template or host.'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Set this value to set max number of results. By default, result set size is 25.'}, 'offset': {'type': 'int', 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object.'}, 'state': {'type': 'list', 'description': 'If set, limit result to instances in one of these states.', 'items': {'type': 'str', 'description': 'If set, limit result to instances in one of these states.', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set).', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'description': 'Filter instances by their hosts owning customer (id or shortname).', 'items': {'type': 'str', 'description': 'Filter instances by their hosts owning customer (id or shortname).'}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria object will be excluded.'}, 'excludeFlags': {'type': 'list', 'description': 'If set, exclude all results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, exclude all results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, limit result to instances for any of these hosts (by id or hostname).', 'items': {'type': 'str', 'description': 'If set, limit result to instances for any of these hosts (by id or hostname).'}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'If set, include only results where all these flags are set.', 'items': {'type': 'str', 'description': 'If set, include only results where all these flags are set.', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored']}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'A set of keywords matched against instances, or their template or host.', 'items': {'type': 'str', 'description': 'A set of keywords matched against instances, or their template or host.'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'state': {'type': 'list', 'description': 'If set, limit result to instances in one of these states.', 'items': {'type': 'str', 'description': 'If set, limit result to instances in one of these states.', 'enum': ['started', 'missing', 'stopped', 'shuttingDown', 'initializing', 'failed']}, 'uniqueItems': True}, 'template': {'type': 'list', 'description': 'If set, limit result to instances of any of these templates (by id or shortname)', 'items': {'type': 'str', 'description': 'If set, limit result to instances of any of these templates (by id or shortname)'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'template': {'type': 'list', 'description': 'If set, limit result to instances of any of these templates (by id or shortname)', 'items': {'type': 'str', 'description': 'If set, limit result to instances of any of these templates (by id or shortname)'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Advanced instance status search', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'flags': {'type': 'array', 'description': 'Instance status flags', 'items': {'type': 'string', 'description': 'Instance status flags', 'enum': ['monitoringDisabled', 'inDowntime', 'installedConfig', 'outdatedConfig', 'outdatedRuntime', 'daytimeMonitored', 'parentDaytimeMonitored', 'deleted']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Host this instance is running on', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Container identifier properties'}, 'description': 'Container identifier properties'}, 'instanceRevision': {'type': 'object', 'description': 'Running, installed and master instance revisions', 'properties': {'installed': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is installed on the distributed host, or null if not installed.'}, 'master': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is currently the master for this configuration instance'}, 'running': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is running on the distributed host, or null if not running.'}}}, 'parentID': {'type': 'integer', 'format': 'int32', 'description': 'If set, this instance is run as a child of the instance with this ID'}, 'state': {'type': 'string', 'description': 'Current state for instance container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'template': {'type': 'object', 'description': 'The configuration template this instance is based on', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'templateRevision': {'type': 'object', 'description': 'Running, installed and master instance revisions', 'properties': {'installed': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is installed on the distributed host, or null if not installed.'}, 'master': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is currently the master for this configuration instance'}, 'running': {'type': 'integer', 'format': 'int32', 'description': 'The revision which is running on the distributed host, or null if not running.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['getComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Submit status update for a host which may also have running containers. The host will be resolved by agent using the current user. (INTERNAL)', 'description': '', 'operationId': 'updateHostStatus', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'components': {'type': 'list', 'description': 'An optional list of component updates for the root container', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'description': 'The component UUID'}, 'interfaces': {'type': 'list', 'description': 'Implementing interfaces', 'items': {'type': 'str', 'description': 'Implementing interfaces'}, 'uniqueItems': True}, 'name': {'type': 'str', 'description': 'The component name'}, 'status': {'type': 'str', 'description': 'The component status'}, 'type': 'str'}, 'required': ['id']}}, 'containerID': {'type': 'str', 'description': 'ID of the currently running container'}, 'containers': {'type': 'list', 'description': 'A set of instance container status records', 'items': {'type': 'dict', 'properties': {'components': {'type': 'list', 'description': 'An optional list of component updates for the root container', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'description': 'The component UUID'}, 'interfaces': {'type': 'list', 'description': 'Implementing interfaces', 'items': {'type': 'str', 'description': 'Implementing interfaces'}, 'uniqueItems': True}, 'name': {'type': 'str', 'description': 'The component name'}, 'status': {'type': 'str', 'description': 'The component status'}, 'type': 'str'}, 'required': ['id']}}, 'containerID': {'type': 'str', 'description': 'ID of the currently running container'}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Any identifiers for this instance container'}, 'description': 'Any identifiers for this instance container'}, 'instanceID': {'type': 'int', 'description': 'The instanceID of this container'}, 'runningInstanceRevision': {'type': 'int', 'description': 'The instance revision of the running container'}, 'runningTemplateRevision': {'type': 'int', 'description': 'The template revision of the running container'}, 'state': {'type': 'str', 'description': 'The state of this instance container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped']}}, 'required': ['components', 'identifiers', 'state']}}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Any identifiers for this instance container'}, 'description': 'Any identifiers for this instance container'}, 'installedContainers': {'type': 'list', 'description': 'A set of installed instance descriptors', 'items': {'type': 'dict', 'properties': {'instanceID': {'type': 'int', 'description': 'ID of installed instance'}, 'instanceRevision': {'type': 'int', 'description': 'Revision of installed instance'}, 'templateID': {'type': 'int', 'description': 'ID of template of installed instance'}, 'templateRevision': {'type': 'int', 'description': 'Revision of template of installed instance'}}}, 'uniqueItems': True}, 'state': {'type': 'str', 'description': 'The state of this instance container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped']}}, 'required': ['components', 'containers', 'identifiers', 'installedContainers', 'state']}}}, 'required': True}, 'responses': {'default': {'description': 'Submit status update for a host which may also have running containers. The host will be resolved by agent using the current user.', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['submitComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_instance_status = {'tags': ['componentadmin/v2'], 'summary': 'Submit status update for a specific component. The host will be resolved by agent using the current user.The instanceID must be a valid instance for the current users host. (INTERNAL)', 'description': '', 'operationId': 'updateInstanceStatus', 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance', 'required': True, 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'components': {'type': 'list', 'description': 'An optional list of component updates for the root container', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'description': 'The component UUID'}, 'interfaces': {'type': 'list', 'description': 'Implementing interfaces', 'items': {'type': 'str', 'description': 'Implementing interfaces'}, 'uniqueItems': True}, 'name': {'type': 'str', 'description': 'The component name'}, 'status': {'type': 'str', 'description': 'The component status'}, 'type': 'str'}, 'required': ['id']}}, 'containerID': {'type': 'str', 'description': 'ID of the currently running container'}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Any identifiers for this instance container'}, 'description': 'Any identifiers for this instance container'}, 'instanceID': {'type': 'int', 'description': 'The instanceID of this container'}, 'runningInstanceRevision': {'type': 'int', 'description': 'The instance revision of the running container'}, 'runningTemplateRevision': {'type': 'int', 'description': 'The template revision of the running container'}, 'state': {'type': 'str', 'description': 'The state of this instance container', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped']}}, 'required': ['components', 'identifiers', 'state']}}}, 'required': True}, 'responses': {'default': {'description': 'Submit status update for a specific component. The host will be resolved by agent using the current user.The instanceID must be a valid instance for the current users host.', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['submitComponentStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}