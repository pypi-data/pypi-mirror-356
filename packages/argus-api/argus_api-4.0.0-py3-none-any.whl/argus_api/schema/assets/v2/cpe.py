"""Autogenerated API schema"""
from argus_api import session


get_asset_cpes = {'tags': ['assets/v2/cpe'], 'summary': 'Get CPE by ID or WFN (INTERNAL)', 'description': '', 'operationId': 'getAssetCPE', 'parameters': [{'name': 'idOrWFN', 'in': 'path', 'description': 'CPE ID or WFN', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Get CPE by ID or WFN', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'createdTimestamp': {'type': 'integer', 'format': 'int64'}, 'deprecatedBy': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}, 'uniqueItems': True}, 'deprecates': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}, 'uniqueItems': True}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['deprecated']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'part': {'type': 'string', 'enum': ['a', 'h', 'o']}, 'product': {'type': 'string'}, 'vendor': {'type': 'string'}, 'version': {'type': 'string'}, 'wfn': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAssetCPEs'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_asset_cpes = {'tags': ['assets/v2/cpe'], 'summary': 'Basic CPE search. (INTERNAL)', 'description': '', 'operationId': 'listAssetCPEs', 'parameters': [{'name': 'keywords', 'in': 'query', 'description': 'Match keywords against all available CPE keyword fields', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'vendor', 'in': 'query', 'description': 'CPE Vendor', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'product', 'in': 'query', 'description': 'CPE Product', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'version', 'in': 'query', 'description': 'CPE Version', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'startTimestamp', 'in': 'query', 'description': 'Lower bound timestamp filter value against all available CPE timestamp fields', 'schema': {'type': 'str', 'default': '0'}, 'type': 'str', 'default': '0'}, {'name': 'endTimestamp', 'in': 'query', 'description': 'Upper bound timestamp filter value against all available CPE timestamp fields', 'schema': {'type': 'str', 'default': '0'}, 'type': 'str', 'default': '0'}, {'name': 'includeDeprecated', 'in': 'query', 'description': 'Whether to include deprecated CPEs in the results', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'limit', 'in': 'query', 'description': 'Limit result set', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset result set', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}, {'name': 'sortBy', 'in': 'query', 'description': 'Field(s) to sort by - refer to the search POST endpoint to see which fields are permitted', 'schema': {'type': 'list', 'items': {'type': 'string'}}, 'type': 'list', 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Basic CPE search.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'createdTimestamp': {'type': 'integer', 'format': 'int64'}, 'deprecatedBy': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}, 'uniqueItems': True}, 'deprecates': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}, 'uniqueItems': True}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['deprecated']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'part': {'type': 'string', 'enum': ['a', 'h', 'o']}, 'product': {'type': 'string'}, 'vendor': {'type': 'string'}, 'version': {'type': 'string'}, 'wfn': {'type': 'string'}}}}}}}}}}, 'x-Argus-Required-Permissions': ['viewAssetCPEs'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_cpes = {'tags': ['assets/v2/cpe'], 'summary': 'Search CPEs (INTERNAL)', 'description': '', 'operationId': 'searchCPEs', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'cpe': {'type': 'list', 'description': 'Filter for CPEs matching one of these WFN or ID values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these WFN or ID values'}, 'uniqueItems': True}, 'deprecatedBy': {'type': 'list', 'description': 'Filter for CPEs deprecated by at least one of these CPEs identified by ID or WFN', 'items': {'type': 'str', 'description': 'Filter for CPEs deprecated by at least one of these CPEs identified by ID or WFN'}, 'uniqueItems': True}, 'deprecates': {'type': 'list', 'description': 'Filter for CPEs that deprecate at least one of these CPEs identified by ID or WFN', 'items': {'type': 'str', 'description': 'Filter for CPEs that deprecate at least one of these CPEs identified by ID or WFN'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'excludeFlags': {'type': 'list', 'description': 'Explicitly filter out CPEs that contain these flags', 'items': {'type': 'str', 'description': 'Explicitly filter out CPEs that contain these flags', 'enum': ['deprecated']}, 'uniqueItems': True}, 'includeDeprecated': {'type': 'bool', 'default': False, 'description': 'Whether to include deprecated CPEs'}, 'includeFlags': {'type': 'list', 'description': 'Explicitly search for CPEs that contain these flags', 'items': {'type': 'str', 'description': 'Explicitly search for CPEs that contain these flags', 'enum': ['deprecated']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'enum': ['all', 'name', 'vendor', 'product', 'wfn']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict different keywords should be matched (default match any keywords)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'items': {'type': 'str', 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit the results to the specified amount', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'Skip specified amount of results', 'minimum': 0}, 'part': {'type': 'list', 'description': 'Filter for CPEs matching one of these part values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these part values', 'enum': ['a', 'h', 'o']}, 'uniqueItems': True}, 'product': {'type': 'list', 'description': 'Filter for CPEs matching one of these products values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these products values'}, 'uniqueItems': True}, 'sortBy': {'type': 'list', 'description': 'Field(s) by which to sort the results', 'items': {'type': 'str', 'description': 'Field(s) by which to sort the results', 'enum': ['vendor', 'product', 'version', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', '-vendor', '-product', '-version', '-name', '-createdTimestamp', '-lastUpdatedTimestamp']}}, 'startTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'subCriteria': {'type': 'list', 'description': 'Set additional criteria that are applied with logical OR by default', 'items': {'type': 'dict', 'description': 'Search sub-criteria for searching for Asset CPEs', 'properties': {'cpe': {'type': 'list', 'description': 'Filter for CPEs matching one of these WFN or ID values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these WFN or ID values'}, 'uniqueItems': True}, 'deprecatedBy': {'type': 'list', 'description': 'Filter for CPEs deprecated by at least one of these CPEs identified by ID or WFN', 'items': {'type': 'str', 'description': 'Filter for CPEs deprecated by at least one of these CPEs identified by ID or WFN'}, 'uniqueItems': True}, 'deprecates': {'type': 'list', 'description': 'Filter for CPEs that deprecate at least one of these CPEs identified by ID or WFN', 'items': {'type': 'str', 'description': 'Filter for CPEs that deprecate at least one of these CPEs identified by ID or WFN'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'exclude': {'type': 'bool', 'default': False, 'description': 'If set to true, objects matching these criteria will be excluded'}, 'excludeFlags': {'type': 'list', 'description': 'Explicitly filter out CPEs that contain these flags', 'items': {'type': 'str', 'description': 'Explicitly filter out CPEs that contain these flags', 'enum': ['deprecated']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Explicitly search for CPEs that contain these flags', 'items': {'type': 'str', 'description': 'Explicitly search for CPEs that contain these flags', 'enum': ['deprecated']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'enum': ['all', 'name', 'vendor', 'product', 'wfn']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict different keywords should be matched (default match any keywords)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'items': {'type': 'str', 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy'}, 'uniqueItems': True}, 'part': {'type': 'list', 'description': 'Filter for CPEs matching one of these part values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these part values', 'enum': ['a', 'h', 'o']}, 'uniqueItems': True}, 'product': {'type': 'list', 'description': 'Filter for CPEs matching one of these products values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these products values'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria)'}, 'startTimestamp': {'type': 'str', 'default': '0', 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp).  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.', 'externalDocs': {'description': 'See documentation', 'url': 'https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}}, 'timeFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['any', 'all']}, 'vendor': {'type': 'list', 'description': 'Filter for CPEs matching one of these vendors values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these vendors values'}, 'uniqueItems': True}, 'version': {'type': 'list', 'description': 'Filter for CPEs matching one of these versions values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these versions values'}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['any', 'all']}, 'vendor': {'type': 'list', 'description': 'Filter for CPEs matching one of these vendors values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these vendors values'}, 'uniqueItems': True}, 'version': {'type': 'list', 'description': 'Filter for CPEs matching one of these versions values', 'items': {'type': 'str', 'description': 'Filter for CPEs matching one of these versions values'}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search CPEs', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'createdTimestamp': {'type': 'integer', 'format': 'int64'}, 'deprecatedBy': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}, 'uniqueItems': True}, 'deprecates': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}, 'uniqueItems': True}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['deprecated']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'part': {'type': 'string', 'enum': ['a', 'h', 'o']}, 'product': {'type': 'string'}, 'vendor': {'type': 'string'}, 'version': {'type': 'string'}, 'wfn': {'type': 'string'}}}}}}}}}, '200': {'description': 'Search result', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAssetCPEs'], 'x-Argus-ApiStatus': 'INTERNAL'}