"""Autogenerated API schema"""
from argus_api import session


add_template_comment = {'tags': ['configurationadmin/v1/template'], 'summary': 'Add a comment to a configuration template (INTERNAL)', 'description': '', 'operationId': 'addTemplateComment', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of template to add comment to', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'text/plain': {'schema': {'type': 'string'}}}}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add a comment to a configuration template', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
create_template = {'tags': ['configurationadmin/v1/template'], 'summary': 'Create new configuration template (INTERNAL)', 'description': '', 'operationId': 'createTemplate', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to add a new template', 'properties': {'codeProfile': {'type': 'str', 'description': 'The code profile to use when running this template', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'configuration': {'type': 'str', 'description': 'The configuration XML to use for this template. One of configuration and configurationResource is required. [format:xml]', 'x-Argus-Format': 'xml'}, 'configurationResource': {'type': 'str', 'description': 'Name of configuration resource (class name or classpath to Spring XML. One of configuration and configurationResource is required. The resource must exist in the classpath of the code profile.'}, 'dependsOnID': {'type': 'int', 'description': 'If set, this declares the ID of the template that this template requires as parent. Instances must be created with another instance with template dependsOnID as parent.', 'minimum': 0}, 'information': {'type': 'str', 'description': 'Informational text about this template. Default sanitation.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'mnemonic': {'type': 'str', 'deprecated': True, 'description': 'A unique shortname for this template. Use shortName instead.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'description': 'A unique name for this template', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Configuration properties to use for this template, with default values. Values may be overridden on host or instance'}, 'description': 'Configuration properties to use for this template, with default values. Values may be overridden on host or instance'}, 'shortName': {'type': 'str', 'description': 'A unique shortname for this template', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'startupIndex': {'type': 'int', 'default': 0, 'description': 'Specify the startup order of this component', 'minimum': 0}}, 'required': ['codeProfile', 'name', 'shortName']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create new configuration template', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_template = {'tags': ['configurationadmin/v1/template'], 'summary': 'Delete configuration template (INTERNAL)', 'description': '', 'operationId': 'deleteTemplate', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of template to delete', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Delete configuration template', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
duplicate_template = {'tags': ['configurationadmin/v1/template'], 'summary': 'Create a duplicate of a configuration template (INTERNAL)', 'description': '', 'operationId': 'duplicateTemplate', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of template to duplicate', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create a duplicate of a configuration template', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_template_configuration_data = {'tags': ['configurationadmin/v1/template'], 'summary': 'Fetch configuration template configuration data (INTERNAL)', 'description': '', 'operationId': 'getTemplateConfigurationData', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of template', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch configuration template configuration data', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'data': {'type': 'string'}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['referenced', 'inline']}, 'uniqueItems': True}, 'templateID': {'type': 'integer', 'format': 'int32'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_template_properties = {'tags': ['configurationadmin/v1/template'], 'summary': 'Fetch configuration template properties (INTERNAL)', 'description': '', 'operationId': 'getTemplateProperties', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of template', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch configuration template properties', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'defaultValue': {'type': 'string', 'description': 'Default value of this property'}, 'name': {'type': 'string', 'description': 'Name of this property'}, 'source': {'type': 'string', 'description': 'The origin of this property (the source of the current value)', 'enum': ['config', 'template', 'host', 'instance']}, 'value': {'type': 'string', 'description': 'Set value of this property'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_templates = {'tags': ['configurationadmin/v1/template'], 'summary': 'List configuration templates (INTERNAL)', 'description': '', 'operationId': 'listTemplates', 'parameters': [{'name': 'search', 'in': 'query', 'description': 'Keyword search string', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'includeComments', 'in': 'query', 'description': 'If true, also include comments on every returned search result', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'If true, also include templates marked as deleted', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first matching results', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}, {'name': 'limit', 'in': 'query', 'description': 'Return a limited number of results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'orderBy', 'in': 'query', 'description': 'Sort results', 'schema': {'type': 'str', 'default': 'name', 'enum': ['id', 'name']}, 'type': 'str', 'default': 'name', 'enum': ['id', 'name']}, {'name': 'orderDesc', 'in': 'query', 'description': 'Sort results descending', 'schema': {'type': 'boolean'}, 'type': 'bool'}], 'responses': {'default': {'description': 'List configuration templates', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
promote_all_template_instances = {'tags': ['configurationadmin/v1/template'], 'summary': 'Promote all configuration instances for this template (INTERNAL)', 'description': '', 'operationId': 'promoteAllTemplateInstances', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of template to promote', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to promote all instances of a template to a specific template revision', 'properties': {'instances': {'type': 'list', 'description': 'The instances to promote. Default is to promote all instances.', 'items': {'type': 'int', 'description': 'The instances to promote. Default is to promote all instances.'}, 'uniqueItems': True}, 'templateRevision': {'type': 'int', 'description': 'The template revision to promote to. If not set, this will default to latest revision.', 'minimum': 0}}}}}, 'required': True}, 'responses': {'default': {'description': 'Promote all configuration instances for this template', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_templates = {'tags': ['configurationadmin/v1/template'], 'summary': 'Search configuration templates (INTERNAL)', 'description': '', 'operationId': 'searchTemplates', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'codeProfile': {'type': 'list', 'description': 'If true, filter on templates having any of these code profiles.', 'items': {'type': 'str', 'description': 'If true, filter on templates having any of these code profiles.'}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'If true, filter on templates where name matches these keywords.', 'items': {'type': 'str', 'description': 'If true, filter on templates where name matches these keywords.'}, 'uniqueItems': True}, 'template': {'type': 'list', 'description': 'If set, filter on templates by ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter on templates by ID or shortname.'}, 'uniqueItems': True}, 'dependingOnID': {'type': 'list', 'description': 'If set, filter on templates set to depend on any of the given template IDs.', 'items': {'type': 'int', 'description': 'If set, filter on templates set to depend on any of the given template IDs.'}, 'uniqueItems': True}, 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, also include comments on output.'}, 'includeConfiguration': {'type': 'bool', 'default': True, 'description': 'If true, also include configuration on output.'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, also include properties on output.'}, 'searchString': [], 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'name', '-id', '-name']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'CONTROLLED_VERSION']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'CONTROLLED_VERSION']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'codeProfile': {'type': 'list', 'description': 'If true, filter on templates having any of these code profiles.', 'items': {'type': 'str', 'description': 'If true, filter on templates having any of these code profiles.'}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'If true, filter on templates where name matches these keywords.', 'items': {'type': 'str', 'description': 'If true, filter on templates where name matches these keywords.'}, 'uniqueItems': True}, 'template': {'type': 'list', 'description': 'If set, filter on templates by ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter on templates by ID or shortname.'}, 'uniqueItems': True}, 'dependingOnID': {'type': 'list', 'description': 'If set, filter on templates set to depend on any of the given template IDs.', 'items': {'type': 'int', 'description': 'If set, filter on templates set to depend on any of the given template IDs.'}, 'uniqueItems': True}, 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, also include comments on output.'}, 'includeConfiguration': {'type': 'bool', 'default': True, 'description': 'If true, also include configuration on output.'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, also include properties on output.'}, 'searchString': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'codeProfile': {'type': 'list', 'description': 'If true, filter on templates having any of these code profiles.', 'items': {'type': 'str', 'description': 'If true, filter on templates having any of these code profiles.'}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'If true, filter on templates where name matches these keywords.', 'items': {'type': 'str', 'description': 'If true, filter on templates where name matches these keywords.'}, 'uniqueItems': True}, 'template': {'type': 'list', 'description': 'If set, filter on templates by ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter on templates by ID or shortname.'}, 'uniqueItems': True}, 'dependingOnID': {'type': 'list', 'description': 'If set, filter on templates set to depend on any of the given template IDs.', 'items': {'type': 'int', 'description': 'If set, filter on templates set to depend on any of the given template IDs.'}, 'uniqueItems': True}, 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, also include comments on output.'}, 'includeConfiguration': {'type': 'bool', 'default': True, 'description': 'If true, also include configuration on output.'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, also include properties on output.'}, 'searchString': [], 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'name', '-id', '-name']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'CONTROLLED_VERSION']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'CONTROLLED_VERSION']}, 'uniqueItems': True}}}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'name', '-id', '-name']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'CONTROLLED_VERSION']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'CONTROLLED_VERSION']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search configuration templates', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
template_revisions = {'tags': ['configurationadmin/v1/template'], 'summary': 'List revisions of configuration template (INTERNAL)', 'description': '', 'operationId': 'templateRevisions', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of template', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Max number of revisions to fetch', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}], 'responses': {'default': {'description': 'List revisions of configuration template', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_template = {'tags': ['configurationadmin/v1/template'], 'summary': 'Update configuration template (INTERNAL)', 'description': '', 'operationId': 'updateTemplate', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of template to update', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update a template', 'properties': {'codeProfile': {'type': 'str', 'description': 'If set, update the code profile to use for this template.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'configuration': {'type': 'str', 'description': 'If set, update the configuration of this template. Will clear configurationResource [format:xml]', 'x-Argus-Format': 'xml'}, 'configurationResource': {'type': 'str', 'description': 'Name of configuration resource (class name or classpath to Spring XML. Will clear explicit configuration. The resource must exist in the classpath of the code profile.'}, 'dependsOnID': {'type': 'int', 'description': 'If set, update the parent dependency to the template with this ID'}, 'information': {'type': 'str', 'description': 'If set, update the informational text of this template. Default sanitation.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'mnemonic': {'type': 'str', 'deprecated': True, 'description': 'If set, update the shortname of this template. Use shortName instead', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'description': 'If set, update the name of this template', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'If set, add these properties to the template. Properties with null value will be removed.'}, 'description': 'If set, add these properties to the template. Properties with null value will be removed.'}, 'shortName': {'type': 'str', 'description': 'If set, update the shortname of this template', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'startupIndex': {'type': 'int', 'description': 'If set, change the startup order of this component', 'minimum': 0}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update configuration template', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_template_properties = {'tags': ['configurationadmin/v1/template'], 'summary': 'Update configuration template properties (INTERNAL)', 'description': '', 'operationId': 'updateTemplateProperties', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID of template to update properties on', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update properties on a specified template', 'properties': {'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'The template properties to update to, null value will clear the property'}, 'description': 'The template properties to update to, null value will clear the property'}}, 'required': ['properties']}}}}, 'responses': {'default': {'description': 'Update configuration template properties', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'defaultValue': {'type': 'string', 'description': 'Default value of this property'}, 'name': {'type': 'string', 'description': 'Name of this property'}, 'source': {'type': 'string', 'description': 'The origin of this property (the source of the current value)', 'enum': ['config', 'template', 'host', 'instance']}, 'value': {'type': 'string', 'description': 'Set value of this property'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
view_template = {'tags': ['configurationadmin/v1/template'], 'summary': 'Fetch configuration template (INTERNAL)', 'description': '', 'operationId': 'viewTemplate', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of template', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch configuration template', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': {'type': 'object', 'description': 'Represents a configuration template, defining which code, configuration and default properties an instance should use.', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'configurationData': {'type': 'string', 'description': 'The XML configuration for this template. May be null in search result if includeConfiguration is set to false, or if configurationResource is set.'}, 'configurationResource': {'type': 'string', 'description': 'The configuration resource to load for this template. Is not set if template has explicit configuration data (XML)'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was created.'}, 'dependsOn': [], 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}, 'encodedFlags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}, 'uniqueItems': True}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'information': {'type': 'string', 'description': 'Informational text about this configuration (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this template was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'A unique name for this template'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'description': 'The properties set for this template. May be null in search result if includeProperties is set to false.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}, 'startupIndex': {'type': 'integer', 'format': 'int32', 'description': 'The startup index for this template. When automatically starting instances, the startup ordering is determined by startupIndex.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}