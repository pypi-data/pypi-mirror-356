"""Autogenerated API schema"""
from argus_api import session


create_property_mapper = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': 'Create new property mapper (INTERNAL)', 'description': '', 'operationId': 'createPropertyMapper', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to add a new property mapper', 'properties': {'configuration': {'type': 'str', 'description': 'The JSON configuration'}, 'description': {'type': 'str', 'default': 'null', 'description': 'The property mapper description', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'name': {'type': 'str', 'description': 'Name of the property mapper configuration', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'shortName': {'type': 'str', 'description': 'Unique short name of the property mapper configuration', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}}, 'required': ['configuration', 'name', 'shortName']}}}, 'required': True}, 'responses': {'default': {'description': 'Create new property mapper', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addPropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_property_mapper = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': 'Delete a property mapper by its id or shortname. This creates a revision with the same contents as the primary version at the time the request is made.The new primary is, however, flagged as deleted. NB: You can only delete the current primary and only if it is not already deleted. (INTERNAL)', 'description': '', 'operationId': 'deletePropertyMapper', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or shortname of a property mapper', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete a property mapper by its id or shortname. This creates a revision with the same contents as the primary version at the time the request is made.The new primary is, however, flagged as deleted. NB: You can only delete the current primary and only if it is not already deleted.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deletePropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_property_mapper = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': 'Get a property mapper by its id or shortname.Fetching by short name will always return the master revision.Fetching by ID will return the specifically requested property mapper revision. (INTERNAL)', 'description': '', 'operationId': 'getPropertyMapper', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or shortName of a property mapper', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'includeConfig', 'in': 'query', 'description': 'Whether to include the property mapper config too', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}], 'responses': {'default': {'description': 'Get a property mapper by its id or shortname.Fetching by short name will always return the master revision.Fetching by ID will return the specifically requested property mapper revision.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewPropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_property_mapper_revision = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': 'Get a property mapper by its id or shortname and revision number (INTERNAL)', 'description': '', 'operationId': 'getPropertyMapperRevision', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or shortName of a property mapper', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'revision', 'in': 'path', 'description': 'Property mapper revision number', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}, {'name': 'includeConfig', 'in': 'query', 'description': 'Whether to include the property mapper config too', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}], 'responses': {'default': {'description': 'Get a property mapper by its id or shortname and revision number', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewPropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_property_mapper_revisions = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': "List a property mapper's - retrieved by its id or shortname - revisions. (INTERNAL)", 'description': '', 'operationId': 'listPropertyMapperRevisions', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or shortname of a property mapper', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': "List a property mapper's - retrieved by its id or shortname - revisions.", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewPropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_property_mappers = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': 'List primary property mappers matching the provided criteria (INTERNAL)', 'description': '', 'operationId': 'listPropertyMappers', 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Maximum number of hits to return', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Number of hits to skip in the result set - useful for pagination', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'includeConfig', 'in': 'query', 'description': 'Whether to include the property mapper config too', 'schema': {'type': 'bool', 'default': 'true'}, 'type': 'bool', 'default': 'true'}, {'name': 'keyword', 'in': 'query', 'description': 'Search by keywords', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywordMatch', 'in': 'query', 'description': 'Set match strategy for keyword search', 'schema': {'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, 'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, {'name': 'keywordField', 'in': 'query', 'description': 'Set field strategy for keyword search', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['name', 'shortName', 'description', 'all']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['name', 'shortName', 'description', 'all']}, 'uniqueItems': True}, {'name': 'timestampMatch', 'in': 'query', 'description': 'Set match strategy for timestamp filtering', 'schema': {'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, 'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, {'name': 'timestampField', 'in': 'query', 'description': 'Set field strategy for timestamp filtering', 'schema': {'type': 'list', 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}, 'uniqueItems': True}, {'name': 'start', 'in': 'query', 'description': 'Lower bound timestamp filter value', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'end', 'in': 'query', 'description': 'Upper bound timestamp filter value', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': 'Field(s) to sort by - refer to the search POST endpoint to see which fields are permitted', 'schema': {'type': 'list', 'items': {'type': 'string'}}, 'type': 'list', 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'List primary property mappers matching the provided criteria', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewPropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
restore_property_mapper = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': 'Restore a property mapper by its id or shortname. This creates a revision with the same contents as the primary version at the time the request is made.The new primary is, however, no longer flagged as deleted. NB: You can only restore the current primary and only if it is already deleted. (INTERNAL)', 'description': '', 'operationId': 'restorePropertyMapper', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or shortname of a property mapper', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Restore a property mapper by its id or shortname. This creates a revision with the same contents as the primary version at the time the request is made.The new primary is, however, no longer flagged as deleted. NB: You can only restore the current primary and only if it is already deleted.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deletePropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
rollback_property_mapper = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': 'Rollback a property mapper to the requested revision. Similar to updating a property mapper, this creates a revision based on the contents of the primary version at the time the request is made. The new primary property mapper will contain the same values as the rollback target version.NB: You cannot rollback to a deleted version or to the current primary. (INTERNAL)', 'description': '', 'operationId': 'rollbackPropertyMapper', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or shortname of a property mapper', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'revision', 'in': 'path', 'description': 'Revision to rollback to', 'required': True, 'schema': {'type': 'int', 'minimum': 0}, 'type': 'int', 'minimum': 0}], 'responses': {'default': {'description': 'Rollback a property mapper to the requested revision. Similar to updating a property mapper, this creates a revision based on the contents of the primary version at the time the request is made. The new primary property mapper will contain the same values as the rollback target version.NB: You cannot rollback to a deleted version or to the current primary.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updatePropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_property_mappers = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': 'Search for primary property mappers (INTERNAL)', 'description': '', 'operationId': 'searchPropertyMappers', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'endTimestamp': {'type': 'int', 'default': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp)', 'minimum': 0}, 'idOrShortName': {'type': 'list', 'description': 'Filter by specific property mapper IDs or shortName.', 'items': {'type': 'str', 'description': 'Filter by specific property mapper IDs or shortName.'}, 'uniqueItems': True}, 'includeConfig': {'type': 'bool', 'default': False, 'description': 'Whether to include the property mapper JSON config in the result set'}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'Whether to include deleted property mappers'}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'enum': ['name', 'shortName', 'description', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'all', 'description': 'Defines how strict different keywords should be matched (default match all keywords)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Search for keywords against fields defined by keywordFieldStrategy', 'items': {'type': 'str', 'description': 'Search for keywords against fields defined by keywordFieldStrategy'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit maximum amount of results', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'Skip specified amount of results', 'minimum': 0}, 'sortBy': {'type': 'list', 'items': {'type': 'str', 'enum': ['id', 'shortName', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-id', '-shortName', '-name', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}}, 'startTimestamp': {'type': 'int', 'default': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp)', 'minimum': 0}, 'subCriteria': {'type': 'list', 'description': 'Set additional criteria which are applied with logical OR by default', 'items': {'type': 'dict', 'properties': {'endTimestamp': {'type': 'int', 'default': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp)', 'minimum': 0}, 'exclude': {'type': 'bool', 'default': False, 'description': 'If set to true, objects matching this criteria will be excluded'}, 'idOrShortName': {'type': 'list', 'description': 'Filter by specific property mapper IDs or shortName.', 'items': {'type': 'str', 'description': 'Filter by specific property mapper IDs or shortName.'}, 'uniqueItems': True}, 'includeConfig': {'type': 'bool', 'default': False, 'description': 'Whether to include the property mapper JSON config in the result set'}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'Whether to include deleted property mappers'}, 'keywordFieldStrategy': {'type': 'list', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'items': {'type': 'str', 'default': 'all', 'description': 'Defines which fields will be searched by keywords (default all supported fields)', 'enum': ['name', 'shortName', 'description', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'all', 'description': 'Defines how strict different keywords should be matched (default match all keywords)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Search for keywords against fields defined by keywordFieldStrategy', 'items': {'type': 'str', 'description': 'Search for keywords against fields defined by keywordFieldStrategy'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'default': False, 'description': 'If set to true, objects matching this criteria are required (logical AND-ed together with parent criteria)'}, 'startTimestamp': {'type': 'int', 'default': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp)', 'minimum': 0}, 'timeFieldStrategy': {'type': 'list', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['any', 'all']}}}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}, 'uniqueItems': True}, 'timeMatchStrategy': {'type': 'str', 'default': 'any', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['any', 'all']}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search for primary property mappers', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewPropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_property_mapper = {'tags': ['configurationadmin/v1/propertymapper'], 'summary': "Update a property mapper. This creates a revision based on the contents of the primary version at the time the request is made.The new primary property mapper's contents reflects the update request. (INTERNAL)", 'description': '', 'operationId': 'updatePropertyMapper', 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'ID or shortname of a property mapper', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an existing property mapper', 'properties': {'configuration': {'type': 'str', 'description': 'The JSON configuration'}, 'description': {'type': 'str', 'description': 'The property mapper description', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'name': {'type': 'str', 'description': 'Name of the property mapper configuration', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}}}}}, 'required': True}, 'responses': {'default': {'description': "Update a property mapper. This creates a revision based on the contents of the primary version at the time the request is made.The new primary property mapper's contents reflects the update request.", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'A PropertyMapper is a ruleset for event normalization, defining a set of property mapping rules.', 'properties': {'configuration': {'type': 'string', 'description': 'The JSON configuration'}, 'createdByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was created in milliseconds since epoch'}, 'deletedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was deleted in milliseconds since epoch'}, 'description': {'type': 'string', 'default': 'null', 'description': 'The property mapper description'}, 'flags': {'type': 'array', 'description': 'Flags including deleted and controlledVersion', 'items': {'type': 'string', 'description': 'Flags including deleted and controlledVersion', 'enum': ['deleted', 'controlledVersion']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'lastUpdatedByUser': {'type': 'object', 'default': 'null', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'default': 0, 'description': 'When the property mapper was last updated in milliseconds since epoch'}, 'master': {'type': 'object', 'default': 'null', 'description': 'An info reference object for a PropertyMapper', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}, 'masterID': {'type': 'string', 'format': 'uuid', 'description': 'ID of current version'}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}, 'name': {'type': 'string', 'description': 'Name of the property mapper configuration'}, 'revision': {'type': 'integer', 'format': 'int64', 'description': 'Property mapper version number'}, 'shortName': {'type': 'string', 'description': 'Unique short name of the property mapper configuration'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updatePropertyMapping'], 'x-Argus-ApiStatus': 'INTERNAL'}