"""Autogenerated API schema"""
from argus_api import session


add_instance_comment = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Add a comment to configuration instance (INTERNAL)', 'description': '', 'operationId': 'addInstanceComment', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to comment', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'text/plain': {'schema': {'type': 'string'}}}}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add a comment to configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
create_instance = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Create new configuration instance (INTERNAL)', 'description': '', 'operationId': 'createInstance', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'A request to define a new instance', 'properties': {'codeProfile': {'type': 'str', 'description': 'The code profile to use for this instance.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'daytimeMonitored': {'type': 'bool', 'default': False, 'description': 'If true, mark this instance as a DAYTIME_MONITORED host.'}, 'hostID': {'type': 'int', 'description': 'The ID of the host to run this instance on', 'minimum': 1}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Identifiers to set for this instance. Use this to differentiate between multiple instances of the same template on the same host.'}, 'description': 'Identifiers to set for this instance. Use this to differentiate between multiple instances of the same template on the same host.'}, 'information': {'type': 'str', 'description': 'Informational text. Will be default sanitized.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'parentID': {'type': 'int', 'description': 'If set, define a parent instance ID which this instance should run below.', 'minimum': 0}, 'pinnedTemplateRevision': {'type': 'int', 'description': 'If set, pin this instance to the specified template revision. Revision 0 means use latest revision.', 'minimum': 0}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Configuration properties to set for this instance. Will override any conflicting properties set on host or template.'}, 'description': 'Configuration properties to set for this instance. Will override any conflicting properties set on host or template.'}, 'templateID': {'type': 'int', 'description': 'The ID of the template to use for this instance', 'minimum': 1}}}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Create new configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_instance = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Delete configuration instance (INTERNAL)', 'description': '', 'operationId': 'deleteInstance', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to delete', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Delete configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
disable_instance_monitoring = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Disable monitoring of configuration instance (INTERNAL)', 'description': '', 'operationId': 'disableInstanceMonitoring', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to disable monitoring on', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string'}}, 'required': ['comment']}}}}, 'responses': {'default': {'description': 'Disable monitoring of configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
disable_instance_monitoring_request = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Disable monitoring of configuration instance (INTERNAL)', 'description': '', 'operationId': 'disableInstanceMonitoringRequest', 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to disable monitoring on', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to disable monitoring of configuration instance', 'properties': {'comment': {'type': 'str', 'description': 'Reason for disabling monitoring', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'Disable monitoring of configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
duplicate_instance = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Duplicate a configuration instance (INTERNAL)', 'description': '', 'operationId': 'duplicateInstanceRequest', 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to duplicate', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to duplicate an existing configuration instance', 'properties': {'hostID': {'type': 'int', 'description': 'If set, duplicate the instance onto the specified host'}}}}}}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Duplicate a configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
enable_instance_monitoring = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Enable monitoring of configuration instance (INTERNAL)', 'description': '', 'operationId': 'enableInstanceMonitoring', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to enable monitoring on', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Enable monitoring of configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_instance_configuration_data = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Fetch configuration data which is active for this configuration instance (INTERNAL)', 'description': '', 'operationId': 'getInstanceConfigurationData', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID or shortname of template', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Fetch configuration data which is active for this configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'data': {'type': 'string'}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['referenced', 'inline']}, 'uniqueItems': True}, 'templateID': {'type': 'integer', 'format': 'int32'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_instance_properties = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Fetch configuration instance properties (INTERNAL)', 'description': '', 'operationId': 'getInstanceProperties', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Fetch configuration instance properties', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'defaultValue': {'type': 'string', 'description': 'Default value of this property'}, 'name': {'type': 'string', 'description': 'Name of this property'}, 'source': {'type': 'string', 'description': 'The origin of this property (the source of the current value)', 'enum': ['config', 'template', 'host', 'instance']}, 'value': {'type': 'string', 'description': 'Set value of this property'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
instance_revisions = {'tags': ['configurationadmin/v1/instance'], 'summary': 'List configuration instance revisions (INTERNAL)', 'description': '', 'operationId': 'instanceRevisions', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to fetch revisions for', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'List configuration instance revisions', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_instances = {'tags': ['configurationadmin/v1/instance'], 'summary': 'List configuration instances (INTERNAL)', 'description': '', 'operationId': 'listInstances', 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int'}, 'type': 'int'}, {'name': 'search', 'in': 'query', 'description': 'Limit results to instances matching this searchstring', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'includeComments', 'in': 'query', 'description': 'Include comments in output', 'schema': {'type': 'boolean'}, 'type': 'bool'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted instances', 'schema': {'type': 'boolean'}, 'type': 'bool'}, {'name': 'templateID', 'in': 'query', 'description': 'Limit results to instances with these templates', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'hostID', 'in': 'query', 'description': 'Limit results to instances on these hosts', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}], 'responses': {'default': {'description': 'List configuration instances', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
move_instance = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Move a configuration instance to another host (INTERNAL)', 'description': '', 'operationId': 'moveInstance', 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to move', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to move an existing configuration instance to another host', 'properties': {'hostID': {'type': 'int', 'description': 'Host to move the instance to', 'minimum': 1}}}}}, 'required': True}, 'responses': {'default': {'description': 'Move a configuration instance to another host', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
schedule_instance_monitoring = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Schedule downtime for configuration instance (INTERNAL)', 'description': '', 'operationId': 'scheduleInstanceMonitoring', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to schedule downtime for', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'from': {'type': 'integer', 'format': 'int64'}, 'to': {'type': 'integer', 'format': 'int64'}, 'comment': {'type': 'string'}}, 'required': ['comment']}}}}, 'responses': {'default': {'description': 'Schedule downtime for configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
schedule_instance_monitoring_request = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Schedule downtime for configuration instance (INTERNAL)', 'description': '', 'operationId': 'scheduleInstanceMonitoringRequest', 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to schedule downtime for', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to schedule downtime for configuration instance', 'properties': {'comment': {'type': 'str', 'description': 'Reason for scheduling downtime', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'from': {'type': 'int', 'description': 'Timestamp to schedule downtime from', 'minimum': 0}, 'to': {'type': 'int', 'description': 'Timestamp to schedule downtime to', 'minimum': 0}}, 'required': ['comment']}}}, 'required': True}, 'responses': {'default': {'description': 'Schedule downtime for configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
search_instances = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Search configuration instances (INTERNAL)', 'description': '', 'operationId': 'searchInstances', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, include comments in output.'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, include properties in output.'}, 'template': {'type': 'list', 'description': 'If set, filter instances by template ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter instances by template ID or shortname.'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'If set, filter instances by host customer ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter instances by host customer ID or shortname.'}, 'uniqueItems': True}, 'instance': {'type': 'list', 'description': 'If set, filter instances by ID.', 'items': {'type': 'int', 'description': 'If set, filter instances by ID.'}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, filter instances by host ID or hostname.', 'items': {'type': 'str', 'description': 'If set, filter instances by host ID or hostname.'}, 'uniqueItems': True}, 'parentID': {'type': 'list', 'description': 'If set, filter instances by parent instance ID.', 'items': {'type': 'int', 'description': 'If set, filter instances by parent instance ID.'}, 'uniqueItems': True}, 'codeProfile': {'type': 'list', 'description': 'If set, filter instances by active code profile.', 'items': {'type': 'str', 'description': 'If set, filter instances by active code profile.'}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'If set, filter instances matching these keywords.', 'items': {'type': 'str', 'description': 'If set, filter instances matching these keywords.'}, 'uniqueItems': True}, 'masterID': {'type': 'int', 'description': 'If set, only include instance revisions of given master. If not set, revisions are excluded.'}, 'codeProfileOverride': {'type': 'bool', 'description': 'If true, only return instances with overridden code profile. If false, exclude. If not set, do not filter.'}, 'monitoringDisabled': {'type': 'bool', 'description': 'If true, only return instances with disabled monitoring, or whose host has disabled monitoring. If false, exclude. If not set, do not filter.'}, 'inDowntime': {'type': 'bool', 'description': 'If true, only return instances which are in scheduled downtime, or whose host is in downtime. If false, exclude. If not set, do not filter.'}, 'daytimeMonitored': {'type': 'bool', 'description': 'If true, only return instances which are daytime monitored (either set on the instance, or parent host/instance). If false, exclude. If not set, do not filter.'}, 'hostID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'templateID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'instanceID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'searchString': [], 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'startupIndex', 'hostID', 'hostName', 'templateID', 'templateShortName', 'created', 'lastUpdated', 'revision', '-id', '-startupIndex', '-hostID', '-hostName', '-templateID', '-templateShortName', '-created', '-lastUpdated', '-revision']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}, 'uniqueItems': True}}}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, include comments in output.'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, include properties in output.'}, 'template': {'type': 'list', 'description': 'If set, filter instances by template ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter instances by template ID or shortname.'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'If set, filter instances by host customer ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter instances by host customer ID or shortname.'}, 'uniqueItems': True}, 'instance': {'type': 'list', 'description': 'If set, filter instances by ID.', 'items': {'type': 'int', 'description': 'If set, filter instances by ID.'}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, filter instances by host ID or hostname.', 'items': {'type': 'str', 'description': 'If set, filter instances by host ID or hostname.'}, 'uniqueItems': True}, 'parentID': {'type': 'list', 'description': 'If set, filter instances by parent instance ID.', 'items': {'type': 'int', 'description': 'If set, filter instances by parent instance ID.'}, 'uniqueItems': True}, 'codeProfile': {'type': 'list', 'description': 'If set, filter instances by active code profile.', 'items': {'type': 'str', 'description': 'If set, filter instances by active code profile.'}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'If set, filter instances matching these keywords.', 'items': {'type': 'str', 'description': 'If set, filter instances matching these keywords.'}, 'uniqueItems': True}, 'masterID': {'type': 'int', 'description': 'If set, only include instance revisions of given master. If not set, revisions are excluded.'}, 'codeProfileOverride': {'type': 'bool', 'description': 'If true, only return instances with overridden code profile. If false, exclude. If not set, do not filter.'}, 'monitoringDisabled': {'type': 'bool', 'description': 'If true, only return instances with disabled monitoring, or whose host has disabled monitoring. If false, exclude. If not set, do not filter.'}, 'inDowntime': {'type': 'bool', 'description': 'If true, only return instances which are in scheduled downtime, or whose host is in downtime. If false, exclude. If not set, do not filter.'}, 'daytimeMonitored': {'type': 'bool', 'description': 'If true, only return instances which are daytime monitored (either set on the instance, or parent host/instance). If false, exclude. If not set, do not filter.'}, 'hostID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'templateID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'instanceID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'searchString': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'description': 'Set additional criterias which are applied using a logical OR.', 'items': [], 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'includeComments': {'type': 'bool', 'default': False, 'description': 'If true, include comments in output.'}, 'includeProperties': {'type': 'bool', 'default': True, 'description': 'If true, include properties in output.'}, 'template': {'type': 'list', 'description': 'If set, filter instances by template ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter instances by template ID or shortname.'}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'If set, filter instances by host customer ID or shortname.', 'items': {'type': 'str', 'description': 'If set, filter instances by host customer ID or shortname.'}, 'uniqueItems': True}, 'instance': {'type': 'list', 'description': 'If set, filter instances by ID.', 'items': {'type': 'int', 'description': 'If set, filter instances by ID.'}, 'uniqueItems': True}, 'host': {'type': 'list', 'description': 'If set, filter instances by host ID or hostname.', 'items': {'type': 'str', 'description': 'If set, filter instances by host ID or hostname.'}, 'uniqueItems': True}, 'parentID': {'type': 'list', 'description': 'If set, filter instances by parent instance ID.', 'items': {'type': 'int', 'description': 'If set, filter instances by parent instance ID.'}, 'uniqueItems': True}, 'codeProfile': {'type': 'list', 'description': 'If set, filter instances by active code profile.', 'items': {'type': 'str', 'description': 'If set, filter instances by active code profile.'}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'If set, filter instances matching these keywords.', 'items': {'type': 'str', 'description': 'If set, filter instances matching these keywords.'}, 'uniqueItems': True}, 'masterID': {'type': 'int', 'description': 'If set, only include instance revisions of given master. If not set, revisions are excluded.'}, 'codeProfileOverride': {'type': 'bool', 'description': 'If true, only return instances with overridden code profile. If false, exclude. If not set, do not filter.'}, 'monitoringDisabled': {'type': 'bool', 'description': 'If true, only return instances with disabled monitoring, or whose host has disabled monitoring. If false, exclude. If not set, do not filter.'}, 'inDowntime': {'type': 'bool', 'description': 'If true, only return instances which are in scheduled downtime, or whose host is in downtime. If false, exclude. If not set, do not filter.'}, 'daytimeMonitored': {'type': 'bool', 'description': 'If true, only return instances which are daytime monitored (either set on the instance, or parent host/instance). If false, exclude. If not set, do not filter.'}, 'hostID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'templateID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'instanceID': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'searchString': [], 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'startupIndex', 'hostID', 'hostName', 'templateID', 'templateShortName', 'created', 'lastUpdated', 'revision', '-id', '-startupIndex', '-hostID', '-hostName', '-templateID', '-templateShortName', '-created', '-lastUpdated', '-revision']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}, 'uniqueItems': True}}}, 'sortBy': {'type': 'list', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'enum': ['id', 'startupIndex', 'hostID', 'hostName', 'templateID', 'templateShortName', 'created', 'lastUpdated', 'revision', '-id', '-startupIndex', '-hostID', '-hostName', '-templateID', '-templateShortName', '-created', '-lastUpdated', '-revision']}}, 'includeFlags': {'type': 'list', 'description': 'Only include objects which have includeFlags set.', 'items': {'type': 'str', 'description': 'Only include objects which have includeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects which have excludeFlags set.', 'items': {'type': 'str', 'description': 'Exclude objects which have excludeFlags set.', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search configuration instances', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_instance = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Update configuration instance (INTERNAL)', 'description': '', 'operationId': 'updateInstance', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to update', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update an instance', 'properties': {'codeProfile': {'type': 'str', 'description': 'Name of code profile to use. If null, do not change. If blank, reset to template profile.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'configurationID': {'type': 'int', 'deprecated': True, 'description': 'Deprecated option, it is not allowed to change the template of an existing instance.', 'minimum': 0}, 'daytimeMonitored': {'type': 'bool', 'description': 'If set, change the DAYTIME_MONITORED flag on this instance'}, 'hostID': {'type': 'int', 'deprecated': True, 'description': 'Deprecated option. Use the /move endpoint to move instance to another host.', 'minimum': 0}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'If set, set these identifiers for instance. Identifier with null value will delete existing identifier.'}, 'description': 'If set, set these identifiers for instance. Identifier with null value will delete existing identifier.'}, 'information': {'type': 'str', 'description': 'If set, change information field for instance.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'parentID': {'type': 'int', 'deprecated': True, 'description': 'Deprecated option, it is not allowed to change the parent of an existing instance.'}, 'pinnedTemplateRevision': {'type': 'int', 'description': 'If set, pin this instance to the specified template revision. Revision 0 means use latest revision.'}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'If set, set these properties for instance. Property with null value will delete existing property.'}, 'description': 'If set, set these properties for instance. Property with null value will delete existing property.'}}}}}}, 'responses': {'default': {'description': 'Update configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
update_instance_properties = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Update configuration instance properties (INTERNAL)', 'description': '', 'operationId': 'updateInstanceProperties', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to update properties on', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request to update properties on a specified instance', 'properties': {'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'The properties to update to, null value will clear the property'}, 'description': 'The properties to update to, null value will clear the property'}}, 'required': ['properties']}}}, 'required': True}, 'responses': {'default': {'description': 'Update configuration instance properties', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'defaultValue': {'type': 'string', 'description': 'Default value of this property'}, 'name': {'type': 'string', 'description': 'Name of this property'}, 'source': {'type': 'string', 'description': 'The origin of this property (the source of the current value)', 'enum': ['config', 'template', 'host', 'instance']}, 'value': {'type': 'string', 'description': 'Set value of this property'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}
view_instance = {'tags': ['configurationadmin/v1/instance'], 'summary': 'Fetch configuration instance (INTERNAL)', 'description': '', 'operationId': 'viewInstance', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to fetch', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Fetch configuration instance', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Represents an instance running on a distributed host', 'properties': {'codeProfile': {'type': 'object', 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.', 'properties': {'artifacts': {'type': 'array', 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'object', 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.', 'properties': {'artifactID': {'type': 'string', 'description': 'The MVN artifactID'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was created.'}, 'data': {'type': 'string'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'groupID': {'type': 'string', 'description': 'The MVN groupID'}, 'id': {'type': 'string'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when the artifact was last updated.'}, 'length': {'type': 'integer', 'format': 'int32', 'description': 'The size of this artifact (in bytes).'}, 'status': {'type': 'string', 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'version': {'type': 'string', 'description': 'The MVN version'}}}}, 'created': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'flags': {'type': 'integer', 'format': 'int64'}, 'id': {'type': 'integer', 'format': 'int32'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'name': {'type': 'string', 'description': 'The name of this profile'}}}, 'comments': {'type': 'array', 'description': 'Comments added to this instance.', 'items': {'type': 'object', 'description': 'The comments configuration for this template. Is null in search result unless includeComments is set to true.', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was created.'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}, 'uniqueItems': True}, 'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'identifiers': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.'}, 'information': {'type': 'string', 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this instance was last updated.'}, 'masterID': {'type': 'integer', 'format': 'int32', 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': {'type': 'object', 'description': 'Informational reference model of an instance', 'properties': {'host': {'type': 'object', 'description': 'Informational reference model for a host', 'properties': {'agentUserID': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'labels': {'type': 'array', 'description': 'Labels set for this host. A label may be any string.', 'items': {'type': 'string', 'description': 'Labels set for this host. A label may be any string.'}, 'uniqueItems': True}, 'name': {'type': 'string', 'description': 'The host name'}}}, 'id': {'type': 'integer', 'format': 'int32'}, 'parent': [], 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of this instance'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}, 'pinnedTemplateRevision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'scheduledDowntimeFrom': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'integer', 'format': 'int64', 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'template': {'type': 'object', 'description': 'Informational reference model of a template', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'mnemonic': {'type': 'string', 'deprecated': True, 'description': 'The shortname for this template'}, 'name': {'type': 'string', 'description': 'The template name'}, 'revision': {'type': 'integer', 'format': 'int32', 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.'}, 'shortName': {'type': 'string', 'description': 'The shortname for this template'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewConfiguration'], 'x-Argus-ApiStatus': 'INTERNAL'}