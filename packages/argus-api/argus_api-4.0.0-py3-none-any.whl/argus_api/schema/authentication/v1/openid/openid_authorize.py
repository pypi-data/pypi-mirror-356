"""Autogenerated API schema"""
from argus_api import session


add_openid_group_mapping = {'tags': ['authentication/v1/openid'], 'summary': 'Add a group mapping to a OpenID provider (INTERNAL)', 'description': '', 'operationId': 'addOpenIDGroupMapping', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to update', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'argusGroup': {'type': 'str', 'description': 'The name or ID of the argus group to map to'}, 'externalGroupName': {'type': 'str', 'description': 'The name of the group to map from (as it appears in the ID-token group claim)'}}, 'required': ['argusGroup', 'externalGroupName']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Add a group mapping to a OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'argusGroup': {'type': 'object', 'description': 'SPI GroupInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'externalGroupName': {'type': 'string', 'description': 'The external name expected in the ID token'}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Invalid arguments', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateOpenIDProvider'], 'x-Argus-ApiStatus': 'INTERNAL'}
add_openid_provider = {'tags': ['authentication/v1/openid'], 'summary': 'Define new OpenID provider (INTERNAL)', 'description': '', 'operationId': 'addOpenIDProvider', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'str', 'default': 'login', 'description': 'Define prompt type to request on authorization', 'enum': ['login', 'consent', 'none']}, 'certificate': {'type': 'str', 'maxLength': 2147483647, 'minLength': 1}, 'claimsMapping': {'type': 'dict', 'properties': {'email': {'type': 'str', 'description': 'Specify which claim contains the users email'}, 'firstName': {'type': 'str', 'description': "Specify which claim contains the users first name. When setting this, 'lastName' must also be set, and 'name' cannot be set."}, 'groups': {'type': 'str', 'description': 'Specify which claim contains the users groups'}, 'lastName': {'type': 'str', 'description': "Specify which claim contains the users last name. When setting this, 'firstName' must also be set, and 'name' cannot be set."}, 'name': {'type': 'str', 'description': "Specify which claim contains the users real name (single field). The 'name' cannot be set together with 'firstName' and 'lastName'."}, 'phone': {'type': 'str', 'description': 'Specify which claim contains the users phone'}, 'userName': {'type': 'str', 'description': 'Specify which claim contains the username to map to the external Argus username'}}, 'required': ['userName']}, 'clientID': {'type': 'str', 'description': 'The OAuth ClientID of this provider'}, 'configurationURI': {'type': 'str', 'description': 'The URI to the OpenID autodiscovery document', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'customer': {'type': 'str', 'description': 'The id or shortname of the customer this provider is bound to. If customer is a customer group, subcustomer users are also eligible for this provider. If not set, this provider will be domain global.'}, 'domain': {'type': 'str', 'description': 'The id or shortname of the domain this provider is bound to, if this is a domain-global provider. If not set, customer must be set.'}, 'emailDomains': {'type': 'list', 'description': 'Define email domains for automatic enrollment of users', 'items': {'type': 'str', 'description': 'Define email domains for automatic enrollment of users'}, 'uniqueItems': True}, 'issuer': {'type': 'str', 'description': 'Define a specific issuer to require on id-tokens. If not set, the issuer is expected to be a prefix of the providerURI.'}, 'jwks': {'type': 'str', 'maxLength': 2147483647, 'minLength': 1}, 'jwksURI': {'type': 'str', 'description': 'The URI to the OpenID JWKS document. Exactly one of certificate, jwks and jwksURI can be used. Setting jwksURI will enable automatic refresh of jwks.', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'name': {'type': 'str', 'description': 'The name of this provider', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'newUserMapping': {'type': 'bool', 'description': 'Option to enable automatic mapping of new users. To map new users, the claims mapping for name and email must be set.'}, 'providerURI': {'type': 'str', 'description': 'The URI to redirect to to initiate OpenID authentication flow', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'responseMode': {'type': 'str', 'default': 'none', 'description': 'Define response mode to request from provider', 'enum': ['none', 'query', 'fragment']}, 'responseType': {'type': 'str', 'default': 'idToken', 'description': 'Define response type to request from provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'list', 'description': 'Define extra scopes to request (in addition to openid)', 'items': {'type': 'str', 'description': 'Define extra scopes to request (in addition to openid)'}, 'pattern': '[\\x21\\x5D-\\x7E\\x23-\\x5B]+', 'uniqueItems': True}, 'secret': {'type': 'str', 'description': 'Define secret to use for the token endpoint. Required for responseType=code'}, 'shortName': {'type': 'str', 'description': 'Set a shortname for this provider', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'tokenURI': {'type': 'str', 'description': 'The URI for the token endpoint. Required for responseType=code.', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'updateGroupMapping': {'type': 'bool', 'description': 'Option to enable updates of automatic group mappings. This requires the claims mapping for groups to be set.'}}, 'required': ['authorizationPrompt', 'claimsMapping', 'clientID', 'name', 'providerURI', 'responseMode', 'responseType', 'scope', 'shortName']}}}}, 'responses': {'default': {'description': 'Define new OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'string', 'description': 'The prompt type to request on authorization', 'enum': ['login', 'consent', 'none']}, 'claimsMapping': {'type': 'object', 'description': 'Client mappings for this provider', 'properties': {'email': {'type': 'string', 'description': 'Specifies which claim contains the users email'}, 'firstName': {'type': 'string', 'description': 'Specifies which claim contains the users first name. Claims firstName/lastName are used instead of the name claim.'}, 'groups': {'type': 'string', 'description': 'Specifies which claim contains the list of groups to use for group mapping'}, 'lastName': {'type': 'string', 'description': 'Specifies which claim contains the users last name. Claims firstName/lastName are used instead of the name claim.'}, 'name': {'type': 'string', 'description': 'Specifies which claim contains the users real name'}, 'phone': {'type': 'string', 'description': 'Specifies which claim contains the users phone number'}, 'userName': {'type': 'string', 'description': 'Specifies which claim contains the username to map to the external Argus username'}}, 'required': ['userName']}, 'clientID': {'type': 'string', 'description': 'The OAuth ClientID of this provider'}, 'configurationURI': {'type': 'string', 'description': 'The URI to the OpenID autodiscovery URI'}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was deleted, or 0'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'emailDomains': {'type': 'array', 'description': 'Email domains used for automatic user enrollment', 'items': {'type': 'string', 'description': 'Email domains used for automatic user enrollment'}, 'uniqueItems': True}, 'flags': {'type': 'array', 'description': 'Any flags set on this object', 'items': {'type': 'string', 'description': 'Any flags set on this object', 'enum': ['deleted', 'hasCertificate', 'hasStaticJwks', 'automaticJwksRefresh', 'newUserMapping', 'updateGroupMapping']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this provider'}, 'issuer': {'type': 'string', 'description': 'The expected issuer for this provider. If not set, the issuer is expected to be a prefix of the providerURI.'}, 'jwksURI': {'type': 'string', 'description': 'The URI to the OpenID JWKS'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was last updated'}, 'name': {'type': 'string', 'description': 'The name of this provider'}, 'providerURI': {'type': 'string', 'description': 'The URI to redirect to to initiate OpenID authentication flow'}, 'responseType': {'type': 'string', 'description': 'The configured response type which is requested from the provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'array', 'description': 'Extra scopes configured for this provider', 'items': {'type': 'string', 'description': 'Extra scopes configured for this provider'}, 'uniqueItems': True}, 'shortName': {'type': 'string', 'description': 'The shortname for this provider'}, 'tokenURI': {'type': 'string', 'description': 'The URI to fetch tokens for authorization code flow.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['addOpenIDProvider'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_openid_group_mapping = {'tags': ['authentication/v1/openid'], 'summary': 'Delete a group mapping from an OpenID provider (INTERNAL)', 'description': '', 'operationId': 'deleteOpenIDGroupMapping', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to update', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'mappingID', 'in': 'path', 'description': 'The ID of the mapping to delete', 'required': True, 'schema': {'type': 'str'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete a group mapping from an OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'argusGroup': {'type': 'object', 'description': 'SPI GroupInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'externalGroupName': {'type': 'string', 'description': 'The external name expected in the ID token'}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateOpenIDProvider'], 'x-Argus-ApiStatus': 'INTERNAL'}
delete_openid_provider = {'tags': ['authentication/v1/openid'], 'summary': 'Delete OpenID provider (INTERNAL)', 'description': '', 'operationId': 'deleteOpenIDProvider', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to delete', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'string', 'description': 'The prompt type to request on authorization', 'enum': ['login', 'consent', 'none']}, 'claimsMapping': {'type': 'object', 'description': 'Client mappings for this provider', 'properties': {'email': {'type': 'string', 'description': 'Specifies which claim contains the users email'}, 'firstName': {'type': 'string', 'description': 'Specifies which claim contains the users first name. Claims firstName/lastName are used instead of the name claim.'}, 'groups': {'type': 'string', 'description': 'Specifies which claim contains the list of groups to use for group mapping'}, 'lastName': {'type': 'string', 'description': 'Specifies which claim contains the users last name. Claims firstName/lastName are used instead of the name claim.'}, 'name': {'type': 'string', 'description': 'Specifies which claim contains the users real name'}, 'phone': {'type': 'string', 'description': 'Specifies which claim contains the users phone number'}, 'userName': {'type': 'string', 'description': 'Specifies which claim contains the username to map to the external Argus username'}}, 'required': ['userName']}, 'clientID': {'type': 'string', 'description': 'The OAuth ClientID of this provider'}, 'configurationURI': {'type': 'string', 'description': 'The URI to the OpenID autodiscovery URI'}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was deleted, or 0'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'emailDomains': {'type': 'array', 'description': 'Email domains used for automatic user enrollment', 'items': {'type': 'string', 'description': 'Email domains used for automatic user enrollment'}, 'uniqueItems': True}, 'flags': {'type': 'array', 'description': 'Any flags set on this object', 'items': {'type': 'string', 'description': 'Any flags set on this object', 'enum': ['deleted', 'hasCertificate', 'hasStaticJwks', 'automaticJwksRefresh', 'newUserMapping', 'updateGroupMapping']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this provider'}, 'issuer': {'type': 'string', 'description': 'The expected issuer for this provider. If not set, the issuer is expected to be a prefix of the providerURI.'}, 'jwksURI': {'type': 'string', 'description': 'The URI to the OpenID JWKS'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was last updated'}, 'name': {'type': 'string', 'description': 'The name of this provider'}, 'providerURI': {'type': 'string', 'description': 'The URI to redirect to to initiate OpenID authentication flow'}, 'responseType': {'type': 'string', 'description': 'The configured response type which is requested from the provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'array', 'description': 'Extra scopes configured for this provider', 'items': {'type': 'string', 'description': 'Extra scopes configured for this provider'}, 'uniqueItems': True}, 'shortName': {'type': 'string', 'description': 'The shortname for this provider'}, 'tokenURI': {'type': 'string', 'description': 'The URI to fetch tokens for authorization code flow.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['deleteOpenIDProvider'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_openid_provider = {'tags': ['authentication/v1/openid'], 'summary': 'Fetch OpenID provider (INTERNAL)', 'description': '', 'operationId': 'getOpenIDProvider', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to fetch', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'string', 'description': 'The prompt type to request on authorization', 'enum': ['login', 'consent', 'none']}, 'claimsMapping': {'type': 'object', 'description': 'Client mappings for this provider', 'properties': {'email': {'type': 'string', 'description': 'Specifies which claim contains the users email'}, 'firstName': {'type': 'string', 'description': 'Specifies which claim contains the users first name. Claims firstName/lastName are used instead of the name claim.'}, 'groups': {'type': 'string', 'description': 'Specifies which claim contains the list of groups to use for group mapping'}, 'lastName': {'type': 'string', 'description': 'Specifies which claim contains the users last name. Claims firstName/lastName are used instead of the name claim.'}, 'name': {'type': 'string', 'description': 'Specifies which claim contains the users real name'}, 'phone': {'type': 'string', 'description': 'Specifies which claim contains the users phone number'}, 'userName': {'type': 'string', 'description': 'Specifies which claim contains the username to map to the external Argus username'}}, 'required': ['userName']}, 'clientID': {'type': 'string', 'description': 'The OAuth ClientID of this provider'}, 'configurationURI': {'type': 'string', 'description': 'The URI to the OpenID autodiscovery URI'}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was deleted, or 0'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'emailDomains': {'type': 'array', 'description': 'Email domains used for automatic user enrollment', 'items': {'type': 'string', 'description': 'Email domains used for automatic user enrollment'}, 'uniqueItems': True}, 'flags': {'type': 'array', 'description': 'Any flags set on this object', 'items': {'type': 'string', 'description': 'Any flags set on this object', 'enum': ['deleted', 'hasCertificate', 'hasStaticJwks', 'automaticJwksRefresh', 'newUserMapping', 'updateGroupMapping']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this provider'}, 'issuer': {'type': 'string', 'description': 'The expected issuer for this provider. If not set, the issuer is expected to be a prefix of the providerURI.'}, 'jwksURI': {'type': 'string', 'description': 'The URI to the OpenID JWKS'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was last updated'}, 'name': {'type': 'string', 'description': 'The name of this provider'}, 'providerURI': {'type': 'string', 'description': 'The URI to redirect to to initiate OpenID authentication flow'}, 'responseType': {'type': 'string', 'description': 'The configured response type which is requested from the provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'array', 'description': 'Extra scopes configured for this provider', 'items': {'type': 'string', 'description': 'Extra scopes configured for this provider'}, 'uniqueItems': True}, 'shortName': {'type': 'string', 'description': 'The shortname for this provider'}, 'tokenURI': {'type': 'string', 'description': 'The URI to fetch tokens for authorization code flow.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOpenIDProviders'], 'x-Argus-ApiStatus': 'INTERNAL'}
get_openid_user_link = {'tags': ['authentication/v1/openid'], 'summary': 'Fetch OpenID provider (INTERNAL)', 'description': '', 'operationId': 'getOpenIDUserLink', 'parameters': [{'name': 'email', 'in': 'query', 'description': 'Request a userlink sent to this email address', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'string', 'description': 'The prompt type to request on authorization', 'enum': ['login', 'consent', 'none']}, 'claimsMapping': {'type': 'object', 'description': 'Client mappings for this provider', 'properties': {'email': {'type': 'string', 'description': 'Specifies which claim contains the users email'}, 'firstName': {'type': 'string', 'description': 'Specifies which claim contains the users first name. Claims firstName/lastName are used instead of the name claim.'}, 'groups': {'type': 'string', 'description': 'Specifies which claim contains the list of groups to use for group mapping'}, 'lastName': {'type': 'string', 'description': 'Specifies which claim contains the users last name. Claims firstName/lastName are used instead of the name claim.'}, 'name': {'type': 'string', 'description': 'Specifies which claim contains the users real name'}, 'phone': {'type': 'string', 'description': 'Specifies which claim contains the users phone number'}, 'userName': {'type': 'string', 'description': 'Specifies which claim contains the username to map to the external Argus username'}}, 'required': ['userName']}, 'clientID': {'type': 'string', 'description': 'The OAuth ClientID of this provider'}, 'configurationURI': {'type': 'string', 'description': 'The URI to the OpenID autodiscovery URI'}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was deleted, or 0'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'emailDomains': {'type': 'array', 'description': 'Email domains used for automatic user enrollment', 'items': {'type': 'string', 'description': 'Email domains used for automatic user enrollment'}, 'uniqueItems': True}, 'flags': {'type': 'array', 'description': 'Any flags set on this object', 'items': {'type': 'string', 'description': 'Any flags set on this object', 'enum': ['deleted', 'hasCertificate', 'hasStaticJwks', 'automaticJwksRefresh', 'newUserMapping', 'updateGroupMapping']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this provider'}, 'issuer': {'type': 'string', 'description': 'The expected issuer for this provider. If not set, the issuer is expected to be a prefix of the providerURI.'}, 'jwksURI': {'type': 'string', 'description': 'The URI to the OpenID JWKS'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was last updated'}, 'name': {'type': 'string', 'description': 'The name of this provider'}, 'providerURI': {'type': 'string', 'description': 'The URI to redirect to to initiate OpenID authentication flow'}, 'responseType': {'type': 'string', 'description': 'The configured response type which is requested from the provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'array', 'description': 'Extra scopes configured for this provider', 'items': {'type': 'string', 'description': 'Extra scopes configured for this provider'}, 'uniqueItems': True}, 'shortName': {'type': 'string', 'description': 'The shortname for this provider'}, 'tokenURI': {'type': 'string', 'description': 'The URI to fetch tokens for authorization code flow.'}}}}}}}}, '412': {'description': 'If the request is invalid', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
list_openid_group_mappings = {'tags': ['authentication/v1/openid'], 'summary': 'List group mappings for a OpenID provider (INTERNAL)', 'description': '', 'operationId': 'listOpenIDGroupMappings', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to list mappings for', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'List group mappings for a OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'argusGroup': {'type': 'object', 'description': 'SPI GroupInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'externalGroupName': {'type': 'string', 'description': 'The external name expected in the ID token'}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'ID of the response object.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOpenIDProviders'], 'x-Argus-ApiStatus': 'INTERNAL'}
list_openid_providers = {'tags': ['authentication/v1/openid'], 'summary': 'List OpenID providers (INTERNAL)', 'description': '', 'operationId': 'listOpenIDProviders', 'parameters': [{'name': 'targetCustomer', 'in': 'query', 'description': 'Limit results to providers which apply to users bound to this customer', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'Limit results to providers for this customer (or subcustomers)', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Limit results to providers matching these keywords', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'sortBy', 'in': 'query', 'description': 'Specify sort order', 'schema': {'type': 'list', 'default': 'shortName', 'items': {'type': 'string'}}, 'type': 'list', 'default': 'shortName', 'items': {'type': 'string'}}, {'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'List OpenID providers', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'string', 'description': 'The prompt type to request on authorization', 'enum': ['login', 'consent', 'none']}, 'claimsMapping': {'type': 'object', 'description': 'Client mappings for this provider', 'properties': {'email': {'type': 'string', 'description': 'Specifies which claim contains the users email'}, 'firstName': {'type': 'string', 'description': 'Specifies which claim contains the users first name. Claims firstName/lastName are used instead of the name claim.'}, 'groups': {'type': 'string', 'description': 'Specifies which claim contains the list of groups to use for group mapping'}, 'lastName': {'type': 'string', 'description': 'Specifies which claim contains the users last name. Claims firstName/lastName are used instead of the name claim.'}, 'name': {'type': 'string', 'description': 'Specifies which claim contains the users real name'}, 'phone': {'type': 'string', 'description': 'Specifies which claim contains the users phone number'}, 'userName': {'type': 'string', 'description': 'Specifies which claim contains the username to map to the external Argus username'}}, 'required': ['userName']}, 'clientID': {'type': 'string', 'description': 'The OAuth ClientID of this provider'}, 'configurationURI': {'type': 'string', 'description': 'The URI to the OpenID autodiscovery URI'}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was deleted, or 0'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'emailDomains': {'type': 'array', 'description': 'Email domains used for automatic user enrollment', 'items': {'type': 'string', 'description': 'Email domains used for automatic user enrollment'}, 'uniqueItems': True}, 'flags': {'type': 'array', 'description': 'Any flags set on this object', 'items': {'type': 'string', 'description': 'Any flags set on this object', 'enum': ['deleted', 'hasCertificate', 'hasStaticJwks', 'automaticJwksRefresh', 'newUserMapping', 'updateGroupMapping']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this provider'}, 'issuer': {'type': 'string', 'description': 'The expected issuer for this provider. If not set, the issuer is expected to be a prefix of the providerURI.'}, 'jwksURI': {'type': 'string', 'description': 'The URI to the OpenID JWKS'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was last updated'}, 'name': {'type': 'string', 'description': 'The name of this provider'}, 'providerURI': {'type': 'string', 'description': 'The URI to redirect to to initiate OpenID authentication flow'}, 'responseType': {'type': 'string', 'description': 'The configured response type which is requested from the provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'array', 'description': 'Extra scopes configured for this provider', 'items': {'type': 'string', 'description': 'Extra scopes configured for this provider'}, 'uniqueItems': True}, 'shortName': {'type': 'string', 'description': 'The shortname for this provider'}, 'tokenURI': {'type': 'string', 'description': 'The URI to fetch tokens for authorization code flow.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid arguments', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOpenIDProviders'], 'x-Argus-ApiStatus': 'INTERNAL'}
openid_authentication = {'tags': ['authentication/v1/openid'], 'summary': 'Submit OpenID token for validation to create a new user session (PUBLIC)', 'description': "The submitted authentication request must contain a valid OpenID token signed by the specified provider, which must contain a 'nonce' claim matching the nonce returned from the pre-authentication endpoint.", 'operationId': 'openIDAuthentication', 'parameters': [{'name': 'Origin', 'in': 'header', 'description': 'Origin header', 'schema': {'type': 'string'}}, {'name': 'provider', 'in': 'path', 'description': 'ID or shortname of OpenID provider', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'authorizationCode': {'type': 'str', 'description': 'Authorization code provider. Required for flow authorizationCode.'}, 'flow': {'type': 'str', 'default': 'idToken', 'description': 'The flow to use. If set to authorizationCode, follow the authorization code flow, and the authorizationCode field must be set. If set to idToken, follow the implicit flow, and the idToken must be set (default).', 'enum': ['authorizationCode', 'idToken']}, 'idToken': {'type': 'str', 'description': 'ID token from provider. Required for flow idToken.'}, 'requestedAuthorizations': {'type': 'list', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'items': {'type': 'str', 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set.', 'enum': ['enrollPublicKey', 'setPassword']}, 'uniqueItems': True}}}}}, 'required': True}, 'responses': {'default': {'description': 'Submit OpenID token for validation to create a new user session', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizations': {'type': 'array', 'description': 'Any gratuitous authorization tokens generated during authentication, if requested by the client', 'items': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}, 'uniqueItems': True}, 'credentials': {'type': 'object', 'description': 'The request credentials to use for this session', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'uri': {'type': 'string'}}}, 'sessionKey': {'type': 'string'}}}}}}}}, '221': {'description': 'Session created, password change required', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizations': {'type': 'array', 'description': 'Any gratuitous authorization tokens generated during authentication, if requested by the client', 'items': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}, 'uniqueItems': True}, 'credentials': {'type': 'object', 'description': 'The request credentials to use for this session', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'uri': {'type': 'string'}}}, 'sessionKey': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
openid_pre_authentication = {'tags': ['authentication/v1/openid'], 'summary': 'Request redirect URI to OpenID provider (PUBLIC)', 'description': '', 'operationId': 'openIDPreAuthentication', 'parameters': [{'name': 'provider', 'in': 'path', 'description': 'ID or shortname of OpenID provider', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'state', 'in': 'query', 'description': 'State to retain', 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'Origin', 'in': 'header', 'description': 'Origin header', 'schema': {'type': 'string'}}], 'responses': {'default': {'description': 'Request redirect URI to OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'nonce': {'type': 'string', 'description': 'The random nonce which is also a part of the providerURI'}, 'providerURI': {'type': 'string', 'description': 'The URI that the client should redirect to for authentication'}}}}}}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}, '429': {'description': 'Too many pending requests', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
request_openid_authorization_redirect = {'tags': ['authentication/v1/openid'], 'summary': 'Register a user authorization request, and request a redirect to the OpenID Identity Provider to validate user presence. (INTERNAL)', 'description': 'This endpoint requires that the current user is logged in using OpenID authentication. Even if the user has OPENID authentication enabled, it will not work if the current session was creating using a different authentication method.', 'operationId': 'requestOpenIDAuthorizationRedirect', 'parameters': [{'name': 'Origin', 'in': 'header', 'schema': {'type': 'string'}}], 'requestBody': {'content': {'*/*': {'schema': {'type': 'object', 'properties': {'context': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Context variables to scope this authorization. All context variables required by the executing service must be present and equal to those provided here.'}, 'description': 'Context variables to scope this authorization. All context variables required by the executing service must be present and equal to those provided here.'}, 'nextURI': {'type': 'str', 'description': 'The URI to redirect/route to after successful authorization. The URI will be validated according to policy. The authorization token returned from successful authorization should be appended as a query parameter to this URI.'}, 'operation': {'type': 'str', 'description': 'The name of the operation to authorize'}}, 'required': ['nextURI', 'operation']}}}, 'required': True}, 'responses': {'default': {'description': 'Register a user authorization request, and request a redirect to the OpenID Identity Provider to validate user presence.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'providerURI': {'type': 'string', 'description': 'The providerURI to redirect the user to'}, 'stateID': {'type': 'string', 'description': 'The stateID to pass to the OpenID provider'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
search_openid_providers = {'tags': ['authentication/v1/openid'], 'summary': 'Search OpenID providers (INTERNAL)', 'description': '', 'operationId': 'searchOpenIDProviders', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'description': 'Limit result by customer ID or shortname', 'items': {'type': 'str', 'description': 'Limit result by customer ID or shortname'}, 'uniqueItems': True}, 'keywords': {'type': 'list', 'description': 'Match providers by keywords', 'items': {'type': 'str', 'description': 'Match providers by keywords'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit the number of results', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'Skip the first results, in sort order', 'minimum': 0}, 'sortBy': {'type': 'list', 'default': 'shortName', 'description': 'Specify sort order', 'items': {'type': 'str', 'default': 'shortName', 'description': 'Specify sort order', 'enum': ['id', 'name', 'shortName', 'createdTimestamp', 'lastUpdatedTimestamp', '-id', '-name', '-shortName', '-createdTimestamp', '-lastUpdatedTimestamp']}}, 'targetCustomer': {'type': 'str', 'description': 'Limit result to providers which are usable for users bound to this customer (by customer ID or shortname)'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search OpenID providers', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'string', 'description': 'The prompt type to request on authorization', 'enum': ['login', 'consent', 'none']}, 'claimsMapping': {'type': 'object', 'description': 'Client mappings for this provider', 'properties': {'email': {'type': 'string', 'description': 'Specifies which claim contains the users email'}, 'firstName': {'type': 'string', 'description': 'Specifies which claim contains the users first name. Claims firstName/lastName are used instead of the name claim.'}, 'groups': {'type': 'string', 'description': 'Specifies which claim contains the list of groups to use for group mapping'}, 'lastName': {'type': 'string', 'description': 'Specifies which claim contains the users last name. Claims firstName/lastName are used instead of the name claim.'}, 'name': {'type': 'string', 'description': 'Specifies which claim contains the users real name'}, 'phone': {'type': 'string', 'description': 'Specifies which claim contains the users phone number'}, 'userName': {'type': 'string', 'description': 'Specifies which claim contains the username to map to the external Argus username'}}, 'required': ['userName']}, 'clientID': {'type': 'string', 'description': 'The OAuth ClientID of this provider'}, 'configurationURI': {'type': 'string', 'description': 'The URI to the OpenID autodiscovery URI'}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was deleted, or 0'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'emailDomains': {'type': 'array', 'description': 'Email domains used for automatic user enrollment', 'items': {'type': 'string', 'description': 'Email domains used for automatic user enrollment'}, 'uniqueItems': True}, 'flags': {'type': 'array', 'description': 'Any flags set on this object', 'items': {'type': 'string', 'description': 'Any flags set on this object', 'enum': ['deleted', 'hasCertificate', 'hasStaticJwks', 'automaticJwksRefresh', 'newUserMapping', 'updateGroupMapping']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this provider'}, 'issuer': {'type': 'string', 'description': 'The expected issuer for this provider. If not set, the issuer is expected to be a prefix of the providerURI.'}, 'jwksURI': {'type': 'string', 'description': 'The URI to the OpenID JWKS'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was last updated'}, 'name': {'type': 'string', 'description': 'The name of this provider'}, 'providerURI': {'type': 'string', 'description': 'The URI to redirect to to initiate OpenID authentication flow'}, 'responseType': {'type': 'string', 'description': 'The configured response type which is requested from the provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'array', 'description': 'Extra scopes configured for this provider', 'items': {'type': 'string', 'description': 'Extra scopes configured for this provider'}, 'uniqueItems': True}, 'shortName': {'type': 'string', 'description': 'The shortname for this provider'}, 'tokenURI': {'type': 'string', 'description': 'The URI to fetch tokens for authorization code flow.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid arguments', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOpenIDProviders'], 'x-Argus-ApiStatus': 'INTERNAL'}
submit_openid_authorization = {'tags': ['authentication/v1/openid'], 'summary': 'Receive the ID token redirect response for a pending User Authorization (INTERNAL)', 'description': 'The client must have used the authorize/redirect endpoint first to register the pending authorization request. If successful, this endpoint will return a user authorization token for the registered operation.', 'operationId': 'submitOpenIDAuthorization', 'requestBody': {'content': {'*/*': {'schema': {'type': 'object', 'properties': {'idToken': {'type': 'str', 'description': 'The ID token returned by the OpenID Provider'}, 'stateID': {'type': 'str', 'description': 'The OpenID state identifier'}}, 'required': ['idToken', 'stateID']}}}, 'required': True}, 'responses': {'default': {'description': 'Receive the ID token redirect response for a pending User Authorization', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
update_openid_provider = {'tags': ['authentication/v1/openid'], 'summary': 'Update OpenID provider (INTERNAL)', 'description': '', 'operationId': 'updateOpenIDProvider', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to update', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'str', 'description': 'If set, update the prompt to request from provider on authorization requests', 'enum': ['login', 'consent', 'none']}, 'certificate': {'type': 'str', 'maxLength': 2147483647, 'minLength': 1}, 'claimsMapping': {'type': 'dict', 'properties': {'email': {'type': 'str', 'description': 'If set, specify which claim contains the users email. Blank space will clear the field.'}, 'firstName': {'type': 'str', 'description': "If set, specify which claim contains the users first name. When setting this, 'lastName' must also be set, and 'name' cannot be set. Blank space will clear the field."}, 'groups': {'type': 'str', 'description': 'If set, specify which claim contains the users groups. Blank space will clear the field.'}, 'lastName': {'type': 'str', 'description': "If set, specify which claim contains the users last name.  When setting this, 'firstName' must also be set, and 'name' cannot be set. Blank space will clear the field."}, 'name': {'type': 'str', 'description': "If set, specify which claim contains the users real name (single field). The 'name' cannot be set together with 'firstName' and 'lastName'. Blank space will clear the field."}, 'phone': {'type': 'str', 'description': 'If set, specify which claim contains the users phone. Blank space will clear the field.'}, 'userName': {'type': 'str', 'description': 'If set, specify which claim contains the username to map to the external Argus username'}}}, 'clientID': {'type': 'str', 'description': 'If set, update the OAuth ClientID for this provider'}, 'configurationURI': {'type': 'str', 'description': 'If set, update the URI to the OpenID autodiscovery document', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'emailDomains': {'type': 'list', 'description': 'If set, change the email domains for automatic enrollment of users', 'items': {'type': 'str', 'description': 'If set, change the email domains for automatic enrollment of users'}, 'uniqueItems': True}, 'issuer': {'type': 'str', 'description': 'If set, update the OpenID Issuer to require for this provider. Use blank string "" to reset to default.'}, 'jwks': {'type': 'str', 'maxLength': 2147483647, 'minLength': 1}, 'jwksURI': {'type': 'str', 'description': 'If set, update the URI to the OpenID JWKS document. Exactly one of certificate, jwks and jwksURI can be used. Setting jwksURI will clear certificate and enable automatic refresh of jwks.', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'name': {'type': 'str', 'description': 'If set, update the name for this provider', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'newUserMapping': {'type': 'bool', 'description': 'If set, enable/disable option to enable automatic user mapping. To map new users, the claims mapping for name and email must be set.'}, 'providerURI': {'type': 'str', 'description': 'If set, update the authorization URI for this provider', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'responseMode': {'type': 'str', 'description': 'If set, update the response type to request from provider', 'enum': ['none', 'query', 'fragment']}, 'responseType': {'type': 'str', 'description': 'If set, update the response type to request from provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'list', 'description': 'If set, change the scopes to request from this provider', 'items': {'type': 'str', 'description': 'If set, change the scopes to request from this provider'}, 'pattern': '[\\x21\\x5D-\\x7E\\x23-\\x5B]+', 'uniqueItems': True}, 'secret': {'type': 'str', 'description': 'If set, update the secret for use with the token URI for this provider'}, 'shortName': {'type': 'str', 'description': 'If set, update the shortname for this provider', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}, 'tokenURI': {'type': 'str', 'description': 'If set, update the token URI for this provider', 'pattern': '((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'updateGroupMapping': {'type': 'bool', 'description': 'If set, enable/disable option to enable updates of automatic group mappings. This requires the claims mapping for groups to be set.'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update OpenID provider', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizationPrompt': {'type': 'string', 'description': 'The prompt type to request on authorization', 'enum': ['login', 'consent', 'none']}, 'claimsMapping': {'type': 'object', 'description': 'Client mappings for this provider', 'properties': {'email': {'type': 'string', 'description': 'Specifies which claim contains the users email'}, 'firstName': {'type': 'string', 'description': 'Specifies which claim contains the users first name. Claims firstName/lastName are used instead of the name claim.'}, 'groups': {'type': 'string', 'description': 'Specifies which claim contains the list of groups to use for group mapping'}, 'lastName': {'type': 'string', 'description': 'Specifies which claim contains the users last name. Claims firstName/lastName are used instead of the name claim.'}, 'name': {'type': 'string', 'description': 'Specifies which claim contains the users real name'}, 'phone': {'type': 'string', 'description': 'Specifies which claim contains the users phone number'}, 'userName': {'type': 'string', 'description': 'Specifies which claim contains the username to map to the external Argus username'}}, 'required': ['userName']}, 'clientID': {'type': 'string', 'description': 'The OAuth ClientID of this provider'}, 'configurationURI': {'type': 'string', 'description': 'The URI to the OpenID autodiscovery URI'}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'deletedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was deleted, or 0'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'emailDomains': {'type': 'array', 'description': 'Email domains used for automatic user enrollment', 'items': {'type': 'string', 'description': 'Email domains used for automatic user enrollment'}, 'uniqueItems': True}, 'flags': {'type': 'array', 'description': 'Any flags set on this object', 'items': {'type': 'string', 'description': 'Any flags set on this object', 'enum': ['deleted', 'hasCertificate', 'hasStaticJwks', 'automaticJwksRefresh', 'newUserMapping', 'updateGroupMapping']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'The ID of this provider'}, 'issuer': {'type': 'string', 'description': 'The expected issuer for this provider. If not set, the issuer is expected to be a prefix of the providerURI.'}, 'jwksURI': {'type': 'string', 'description': 'The URI to the OpenID JWKS'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this provider was last updated'}, 'name': {'type': 'string', 'description': 'The name of this provider'}, 'providerURI': {'type': 'string', 'description': 'The URI to redirect to to initiate OpenID authentication flow'}, 'responseType': {'type': 'string', 'description': 'The configured response type which is requested from the provider', 'enum': ['token', 'idToken', 'idTokenAndToken', 'code']}, 'scope': {'type': 'array', 'description': 'Extra scopes configured for this provider', 'items': {'type': 'string', 'description': 'Extra scopes configured for this provider'}, 'uniqueItems': True}, 'shortName': {'type': 'string', 'description': 'The shortname for this provider'}, 'tokenURI': {'type': 'string', 'description': 'The URI to fetch tokens for authorization code flow.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Invalid arguments', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['updateOpenIDProvider'], 'x-Argus-ApiStatus': 'INTERNAL'}