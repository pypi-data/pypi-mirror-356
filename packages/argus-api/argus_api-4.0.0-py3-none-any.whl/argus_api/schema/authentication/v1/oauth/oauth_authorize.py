"""Autogenerated API schema"""
from argus_api import session


authorize = {'tags': ['authentication/v1/oauth'], 'summary': 'Request authorization to a OAuth client (INTERNAL)', 'description': 'This operation authorizes the user to access a specified Oauth client, following the OAuth authorization flow. The endpoint returns an authorization token, which can be used by the client to exchange for an access and/or ID token using the token endpoint.', 'operationId': 'authorize', 'parameters': [{'name': 'Origin', 'in': 'header', 'description': '', 'schema': {'type': 'string'}}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'clientID': {'type': 'str', 'description': 'The clientID of the requesting client.'}, 'nonce': {'type': 'str', 'description': 'A nonce requested by the client. The nonce should pass through unmodified and follow the token issued for this request.'}, 'redirectURI': {'type': 'str', 'description': 'The redirectURI requested by the client.'}, 'responseType': {'type': 'list', 'description': 'Type of response requested.', 'items': {'type': 'str', 'description': 'Type of response requested.', 'enum': ['code', 'id_token', 'token']}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'scope': {'type': 'list', 'description': "The scopes requested by the client. If 'openid' is in scope, this is an OpenID request.", 'items': {'type': 'str', 'description': "The scopes requested by the client. If 'openid' is in scope, this is an OpenID request."}, 'uniqueItems': True}, 'state': {'type': 'str', 'description': 'The state submitted by the client. This state should follow unmodified back to the redirect response after a valid client authorization.'}}, 'required': ['clientID', 'redirectURI', 'responseType']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Request authorization to a OAuth client', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessToken': {'type': 'string', 'description': 'The OAuth access token provided by the authentication service.'}, 'authorizationCode': {'type': 'string', 'description': 'The authorization code provided by the authentication service.'}, 'idToken': {'type': 'string', 'description': 'The OpenID token provided by the authentication service.'}, 'redirectURI': {'type': 'string', 'description': 'The redirectURI of the client. This should correspond to the redirectURI requested by the client.'}, 'state': {'type': 'string', 'description': 'The unmodified state reported by the client in the request..'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
create_oauth2_client = {'tags': ['authentication/v1/oauth'], 'summary': 'Define a new OAuth2 client (PUBLIC)', 'description': 'This operation defines a new OAuth2 client application.', 'operationId': 'createOAuth2Client', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'str', 'description': 'The authentication method required for this client. Default is password.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'description': 'A list of CIDR IP ranges which the client will be permitted from. [format:ip]', 'items': {'type': 'str', 'description': 'A list of CIDR IP ranges which the client will be permitted from.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True, 'x-Argus-Format': 'ip'}, 'clientSecret': {'type': 'str', 'description': 'If authenticationMethod is password, the password must be provided in the clientSecret parameter.'}, 'customer': {'type': 'str', 'description': 'Specifying a customer will restrict this resource to a specific customer. This will limit access to this resource to users having the required function for this specific customer. The resource clients delegated session will also be constrained to this particular customer. If customer is not specified, access to this resource will be given to users having the requiredFunction for any customer.'}, 'description': {'type': 'str', 'description': 'A description of this resource.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'domain': {'type': 'str', 'description': 'Specifies the domain in which this resource is defined. The user must have the required function for this domain. If customer is set, the customer must be defined in this domain. If this field is not set, it defaults to the current users domain.'}, 'hidden': {'type': 'bool', 'description': 'If true, this client is by default excluded in the oauth external client list'}, 'mainURI': {'type': 'str', 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.', 'pattern': 'https://.*'}, 'maxSecurityLevel': {'type': 'str', 'default': 'external', 'description': 'Max security level for this client', 'enum': ['external', 'standard']}, 'name': {'type': 'str', 'description': 'A name describing this resource. This name will show up when listing external resources.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'openIDCustomClaims': {'type': 'list', 'description': 'Optional custom claims configuration. See documentation for valid configuration format per custom claim.', 'items': {'oneOf': [{'allOf': [{'type': 'dict', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'dict', 'properties': {'claimName': {'type': 'dict', 'description': 'The claim name.'}, 'roleMapping': {'type': 'dict', 'additionalProperties': {'type': 'dict', 'description': 'A map of argus functions (id or name) to roles (strings). For each mapping, if the user has the function (key), the claim will contain the mapped role (value)'}, 'description': 'A map of argus functions (id or name) to roles (strings). For each mapping, if the user has the function (key), the claim will contain the mapped role (value)'}, 'provider': {'type': 'str', 'enum': ['functionRoleMapping']}}}], 'description': 'This claim request will generate a custom array claim, containing a set of roles for this user', 'required': ['claimName', 'provider', 'roleMapping']}, {'allOf': [{'type': 'dict', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'dict', 'properties': {'stringified': {'type': 'dict', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'str', 'enum': ['allUserGroups']}}}], 'description': "This claim request will generate a 'groups' claim, containing a set of groups this user is member of", 'required': ['provider']}, {'allOf': [{'type': 'dict', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'dict', 'properties': {'claim': {'type': 'dict', 'description': 'The value selector to use for this claim', 'enum': ['username', 'name', 'picture', 'email', 'clientIP', 'customerID', 'customerShortName', 'customerName', 'domainID', 'phone']}, 'claimName': {'type': 'dict', 'description': 'The claim name'}, 'provider': {'type': 'str', 'enum': ['customClaim']}}}], 'description': 'This claim request will generate a custom claim, containing a value from the selected value selector', 'required': ['claim', 'claimName', 'provider']}, {'allOf': [{'type': 'dict', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'dict', 'properties': {'allowedGroups': {'type': 'dict', 'description': 'List of argus groups (ID or shortname) that are permitted into this claim', 'items': {'type': 'dict', 'description': 'List of argus groups (ID or shortname) that are permitted into this claim'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'stringified': {'type': 'dict', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'str', 'enum': ['userGroups']}}}], 'description': "This claim request will generate a 'groups' claim, containing a set of groups this user is member of (limited to a set of allowed groups)", 'required': ['allowedGroups', 'provider']}]}, 'uniqueItems': True}, 'permissionScope': {'type': 'str', 'description': 'The function/role (id or name) to constrain the delegated client session to, restricting what the resource client will be allowed to do on behalf of the user. The delegated client session will be constrained to the least set of the users current session permissions, and this role.'}, 'permittedScopes': {'type': 'list', 'description': 'A list of scopes the client will be permitted to make claims for. Default is no scopes permitted.', 'items': {'type': 'str', 'description': 'A list of scopes the client will be permitted to make claims for. Default is no scopes permitted.'}, 'uniqueItems': True}, 'redirectURI': {'type': 'str', 'deprecated': True, 'description': 'This field is DEPRECATED. Use redirectURIs instead.'}, 'redirectURIs': {'type': 'list', 'description': 'The redirect URIs to allow when redirecting from the OAuth authorization endpoint.', 'items': {'type': 'str', 'description': 'The redirect URIs to allow when redirecting from the OAuth authorization endpoint.'}, 'maxItems': 2147483647, 'minItems': 1, 'pattern': 'http(s)?://.*'}, 'requiredFunction': {'type': 'str', 'description': 'The function (id or name) required to grant access to this resource. If customer is specified, this function is required for that particular customer.'}, 'shortName': {'type': 'str', 'description': 'A shortname describing this resource. This name will show up when listing external resources.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}}, 'required': ['authenticationMethod', 'clientIPRange', 'description', 'mainURI', 'name', 'permissionScope', 'requiredFunction', 'shortName']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Define a new OAuth2 client', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'string', 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'array', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'description': {'type': 'string', 'description': 'A description of this resource.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': 'Flags set on this client', 'items': {'type': 'string', 'description': 'Flags set on this client', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Client ID'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was last updated'}, 'mainURI': {'type': 'string', 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'maxSecurityLevel': {'type': 'string', 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}, 'name': {'type': 'string', 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'openIDCustomClaims': {'type': 'array', 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['allUserGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'allowedGroups': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim', 'items': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim'}, 'uniqueItems': True}, 'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['userGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claimName': {'type': 'object'}, 'roleMapping': {'type': 'object', 'additionalProperties': {'type': 'object'}}, 'provider': {'type': 'string', 'enum': ['functionRoleMapping']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claim': {'type': 'object', 'enum': ['username', 'name', 'picture', 'email', 'clientIP', 'customerID', 'customerShortName', 'customerName', 'domainID', 'phone']}, 'claimName': {'type': 'object'}, 'provider': {'type': 'string', 'enum': ['customClaim']}}}], 'required': ['provider']}]}}, 'permissionScope': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'permittedScopes': {'type': 'array', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'redirectURI': {'type': 'string', 'deprecated': True, 'description': 'This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'array', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.'}}, 'requiredFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'shortName': {'type': 'string', 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOAuthClients'], 'x-Argus-ApiStatus': 'PUBLIC'}
delete_oauth2_client = {'tags': ['authentication/v1/oauth'], 'summary': 'Delete a OAuth2 client (PUBLIC)', 'description': '', 'operationId': 'deleteOauth2Client', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of client to delete', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Delete a OAuth2 client', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'string', 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'array', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'description': {'type': 'string', 'description': 'A description of this resource.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': 'Flags set on this client', 'items': {'type': 'string', 'description': 'Flags set on this client', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Client ID'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was last updated'}, 'mainURI': {'type': 'string', 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'maxSecurityLevel': {'type': 'string', 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}, 'name': {'type': 'string', 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'openIDCustomClaims': {'type': 'array', 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['allUserGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'allowedGroups': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim', 'items': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim'}, 'uniqueItems': True}, 'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['userGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claimName': {'type': 'object'}, 'roleMapping': {'type': 'object', 'additionalProperties': {'type': 'object'}}, 'provider': {'type': 'string', 'enum': ['functionRoleMapping']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claim': {'type': 'object', 'enum': ['username', 'name', 'picture', 'email', 'clientIP', 'customerID', 'customerShortName', 'customerName', 'domainID', 'phone']}, 'claimName': {'type': 'object'}, 'provider': {'type': 'string', 'enum': ['customClaim']}}}], 'required': ['provider']}]}}, 'permissionScope': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'permittedScopes': {'type': 'array', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'redirectURI': {'type': 'string', 'deprecated': True, 'description': 'This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'array', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.'}}, 'requiredFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'shortName': {'type': 'string', 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Specified object was not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOAuthClients'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_oauth2_client = {'tags': ['authentication/v1/oauth'], 'summary': 'Fetch a OAuth2 client descriptor (PUBLIC)', 'description': '', 'operationId': 'getOauth2Client', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of client to fetch', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch a OAuth2 client descriptor', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'string', 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'array', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'description': {'type': 'string', 'description': 'A description of this resource.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': 'Flags set on this client', 'items': {'type': 'string', 'description': 'Flags set on this client', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Client ID'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was last updated'}, 'mainURI': {'type': 'string', 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'maxSecurityLevel': {'type': 'string', 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}, 'name': {'type': 'string', 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'openIDCustomClaims': {'type': 'array', 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['allUserGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'allowedGroups': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim', 'items': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim'}, 'uniqueItems': True}, 'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['userGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claimName': {'type': 'object'}, 'roleMapping': {'type': 'object', 'additionalProperties': {'type': 'object'}}, 'provider': {'type': 'string', 'enum': ['functionRoleMapping']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claim': {'type': 'object', 'enum': ['username', 'name', 'picture', 'email', 'clientIP', 'customerID', 'customerShortName', 'customerName', 'domainID', 'phone']}, 'claimName': {'type': 'object'}, 'provider': {'type': 'string', 'enum': ['customClaim']}}}], 'required': ['provider']}]}}, 'permissionScope': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'permittedScopes': {'type': 'array', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'redirectURI': {'type': 'string', 'deprecated': True, 'description': 'This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'array', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.'}}, 'requiredFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'shortName': {'type': 'string', 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Specified object was not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOAuthClients'], 'x-Argus-ApiStatus': 'PUBLIC'}
get_token = {'tags': ['authentication/v1/oauth'], 'summary': 'Exchange a OAuth2 authorization code with an access token (PUBLIC)', 'description': 'This operation allows an OAuth2 client to exchange an authorization code with an access token, following the OAuth authorization flow. Following the authorization code flow, a client should perform a www/form-urlencoded form POST request, on the format client_id=xxx&client_secret=yyy&grant_type=authorization_code&redirect_uri=https://my.app/callback&code=myAuthorizationCodeA refresh token request should be a www/form-urlencoded form POST request, on the format client_id=xxx&client_secret=yyy&grant_type=refresh_token&redirect_uri=https://my.app/callback&code=myRefreshToken', 'operationId': 'getToken', 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'clientID': {'type': 'string'}, 'clientSecret': {'type': 'string'}, 'redirectURI': {'type': 'string'}, 'grantType': {'type': 'string'}, 'code': {'type': 'string'}, 'refreshToken': {'type': 'string'}, 'scope': {'type': 'string'}, 'authorization': {'type': 'object', 'properties': {'clientID': {'type': 'string'}, 'clientSecret': {'type': 'string'}, 'redirectURI': {'type': 'string'}, 'grantType': {'type': 'string'}, 'code': {'type': 'string'}, 'refreshToken': {'type': 'string'}, 'scope': {'type': 'string'}, 'authorization': []}}}}}}}, 'responses': {'default': {'description': 'Exchange a OAuth2 authorization code with an access token', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'access_token': {'type': 'string', 'description': 'The authorization code provided by the oauth authorization endpoint.'}, 'expires_in': {'type': 'integer', 'format': 'int32', 'description': 'The number of seconds until this token expires.'}, 'id_token': {'type': 'string', 'description': 'The OpenID token provided by the oauth authorization endpoint.'}, 'refresh_token': {'type': 'string', 'description': 'The refresh token provided by the oauth authorization endpoint.'}, 'token_type': {'type': 'string', 'description': 'The type of the token returned. This value is always Bearer.', 'enum': ['Bearer']}}}}}}}}, '400': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
get_user_info = {'tags': ['authentication/v1/oauth'], 'summary': 'Return OpenID userinfo (PUBLIC)', 'description': '', 'operationId': 'getUserInfo', 'responses': {'default': {'description': 'Return OpenID userinfo', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'email': {'type': 'string'}, 'groups': {'type': 'array', 'items': {'type': 'string'}, 'uniqueItems': True}, 'name': {'type': 'string'}, 'phone': {'type': 'string'}, 'picture': {'type': 'string'}, 'preferred_username': {'type': 'string'}, 'sub': {'type': 'string'}}}}}}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
list_oauth2_clients = {'tags': ['authentication/v1/oauth'], 'summary': 'List available OAuth2 client descriptors (PUBLIC)', 'description': '', 'operationId': 'listOauth2Clients', 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'Limit results to clients for this customer (or subcustomers)', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'domain', 'in': 'query', 'description': 'Limit results to clients for this domain', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'keywords', 'in': 'query', 'description': 'Limit results to clients matching these keywords', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'sortBy', 'in': 'query', 'description': 'Specify sort order', 'schema': {'type': 'list', 'default': 'shortName', 'items': {'type': 'string'}}, 'type': 'list', 'default': 'shortName', 'items': {'type': 'string'}}, {'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'schema': {'type': 'int', 'default': '25'}, 'type': 'int', 'default': '25'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'schema': {'type': 'int', 'default': '0'}, 'type': 'int', 'default': '0'}], 'responses': {'default': {'description': 'List available OAuth2 client descriptors', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'string', 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'array', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'description': {'type': 'string', 'description': 'A description of this resource.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': 'Flags set on this client', 'items': {'type': 'string', 'description': 'Flags set on this client', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Client ID'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was last updated'}, 'mainURI': {'type': 'string', 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'maxSecurityLevel': {'type': 'string', 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}, 'name': {'type': 'string', 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'openIDCustomClaims': {'type': 'array', 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['allUserGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'allowedGroups': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim', 'items': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim'}, 'uniqueItems': True}, 'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['userGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claimName': {'type': 'object'}, 'roleMapping': {'type': 'object', 'additionalProperties': {'type': 'object'}}, 'provider': {'type': 'string', 'enum': ['functionRoleMapping']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claim': {'type': 'object', 'enum': ['username', 'name', 'picture', 'email', 'clientIP', 'customerID', 'customerShortName', 'customerName', 'domainID', 'phone']}, 'claimName': {'type': 'object'}, 'provider': {'type': 'string', 'enum': ['customClaim']}}}], 'required': ['provider']}]}}, 'permissionScope': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'permittedScopes': {'type': 'array', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'redirectURI': {'type': 'string', 'deprecated': True, 'description': 'This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'array', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.'}}, 'requiredFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'shortName': {'type': 'string', 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Specified object was not found', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOAuthClients'], 'x-Argus-ApiStatus': 'PUBLIC'}
post_user_info = {'tags': ['authentication/v1/oauth'], 'summary': 'Return OpenID userinfo (PUBLIC)', 'description': '', 'operationId': 'postUserInfo', 'responses': {'default': {'description': 'Return OpenID userinfo', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'email': {'type': 'string'}, 'groups': {'type': 'array', 'items': {'type': 'string'}, 'uniqueItems': True}, 'name': {'type': 'string'}, 'phone': {'type': 'string'}, 'picture': {'type': 'string'}, 'preferred_username': {'type': 'string'}, 'sub': {'type': 'string'}}}}}}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
search_oauth2_clients = {'tags': ['authentication/v1/oauth'], 'summary': 'Search available OAuth2 client descriptors (PUBLIC)', 'description': '', 'operationId': 'searchOauth2Clients', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'description': 'Match clients bound to any of these customers (by id or shortname)', 'items': {'type': 'str', 'description': 'Match clients bound to any of these customers (by id or shortname)'}, 'uniqueItems': True}, 'domain': {'type': 'list', 'description': 'Match clients bound to any of these domains (by id or shortname)', 'items': {'type': 'str', 'description': 'Match clients bound to any of these domains (by id or shortname)'}, 'uniqueItems': True}, 'excludeFlags': {'type': 'list', 'description': 'Exclude clients having any of these flags', 'items': {'type': 'str', 'description': 'Exclude clients having any of these flags', 'enum': ['deleted', 'hidden']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Include clients having all these flags', 'items': {'type': 'str', 'description': 'Include clients having all these flags', 'enum': ['deleted', 'hidden']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'items': {'type': 'str', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'enum': ['id', 'shortName', 'name', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'Match all keywords (AND)', 'description': 'Search based on all keywords (AND), or based on any keyword (OR)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Match clients by these keywords', 'items': {'type': 'str', 'description': 'Match clients by these keywords'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit the number of results', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'Skip the first results, in sort order', 'minimum': 0}, 'requiredFunction': {'type': 'list', 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction', 'items': {'type': 'str', 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction'}, 'uniqueItems': True}, 'sortBy': {'type': 'list', 'default': 'shortName', 'description': 'Specify sort order', 'items': {'type': 'str', 'default': 'shortName', 'description': 'Specify sort order', 'enum': ['id', 'name', 'shortName', 'createdTimestamp', 'lastUpdatedTimestamp', '-id', '-name', '-shortName', '-createdTimestamp', '-lastUpdatedTimestamp']}}, 'subCriteria': {'type': 'list', 'description': 'Subcriteria for this search request', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'description': 'Match clients bound to any of these customers (by id or shortname)', 'items': {'type': 'str', 'description': 'Match clients bound to any of these customers (by id or shortname)'}, 'uniqueItems': True}, 'domain': {'type': 'list', 'description': 'Match clients bound to any of these domains (by id or shortname)', 'items': {'type': 'str', 'description': 'Match clients bound to any of these domains (by id or shortname)'}, 'uniqueItems': True}, 'exclude': {'type': 'bool', 'description': 'If true, treat this subrequest as NOT criteria'}, 'excludeFlags': {'type': 'list', 'description': 'Exclude clients having any of these flags', 'items': {'type': 'str', 'description': 'Exclude clients having any of these flags', 'enum': ['deleted', 'hidden']}, 'uniqueItems': True}, 'includeFlags': {'type': 'list', 'description': 'Include clients having all these flags', 'items': {'type': 'str', 'description': 'Include clients having all these flags', 'enum': ['deleted', 'hidden']}, 'uniqueItems': True}, 'keywordFieldStrategy': {'type': 'list', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'items': {'type': 'str', 'default': 'All supported fields', 'description': 'Which fields will be searched for the given keyword', 'enum': ['id', 'shortName', 'name', 'all']}, 'uniqueItems': True}, 'keywordMatchStrategy': {'type': 'str', 'default': 'Match all keywords (AND)', 'description': 'Search based on all keywords (AND), or based on any keyword (OR)', 'enum': ['any', 'all']}, 'keywords': {'type': 'list', 'description': 'Match clients by these keywords', 'items': {'type': 'str', 'description': 'Match clients by these keywords'}, 'uniqueItems': True}, 'required': {'type': 'bool', 'description': 'If true, treat this subrequest as AND criteria'}, 'requiredFunction': {'type': 'list', 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction', 'items': {'type': 'str', 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction'}, 'uniqueItems': True}}}, 'uniqueItems': True}}}}}}, 'responses': {'default': {'description': 'Search available OAuth2 client descriptors', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'string', 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'array', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'description': {'type': 'string', 'description': 'A description of this resource.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': 'Flags set on this client', 'items': {'type': 'string', 'description': 'Flags set on this client', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Client ID'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was last updated'}, 'mainURI': {'type': 'string', 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'maxSecurityLevel': {'type': 'string', 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}, 'name': {'type': 'string', 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'openIDCustomClaims': {'type': 'array', 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['allUserGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'allowedGroups': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim', 'items': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim'}, 'uniqueItems': True}, 'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['userGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claimName': {'type': 'object'}, 'roleMapping': {'type': 'object', 'additionalProperties': {'type': 'object'}}, 'provider': {'type': 'string', 'enum': ['functionRoleMapping']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claim': {'type': 'object', 'enum': ['username', 'name', 'picture', 'email', 'clientIP', 'customerID', 'customerShortName', 'customerName', 'domainID', 'phone']}, 'claimName': {'type': 'object'}, 'provider': {'type': 'string', 'enum': ['customClaim']}}}], 'required': ['provider']}]}}, 'permissionScope': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'permittedScopes': {'type': 'array', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'redirectURI': {'type': 'string', 'deprecated': True, 'description': 'This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'array', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.'}}, 'requiredFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'shortName': {'type': 'string', 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Specified object was not found', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOAuthClients'], 'x-Argus-ApiStatus': 'PUBLIC'}
update_oauth2_client = {'tags': ['authentication/v1/oauth'], 'summary': 'Update an existing OAuth2 client (PUBLIC)', 'description': 'This operation updates an existing OAuth2 client application.', 'operationId': 'updateOAuth2Client', 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of OAuth2 client to update', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'str', 'description': 'If set, change the authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'description': 'If set, change the CIDR IP ranges which the client will be permitted from. [format:ip]', 'items': {'type': 'str', 'description': 'If set, change the CIDR IP ranges which the client will be permitted from.'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True, 'x-Argus-Format': 'ip'}, 'clientSecret': {'type': 'str', 'description': 'If set, update the client secret of this OAuth2 client. If changing authenticationMethod to password, the password must be provided in this clientSecret parameter.'}, 'description': {'type': 'str', 'description': 'If set, update the description of this resource.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'hidden': {'type': 'bool', 'description': "If set, change the value of the 'hidden' flag on this client. A hidden client is by default excluded from the oauth client application list."}, 'mainURI': {'type': 'str', 'description': 'If set, update the main landing page for this resource. This will be used to link to the application from Argus.', 'pattern': 'https://.*'}, 'maxSecurityLevel': {'type': 'str', 'description': 'If set, change the max security level for this client', 'enum': ['external', 'standard']}, 'name': {'type': 'str', 'description': 'If set, update the name describing this resource. This name will show up when listing external resources.', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'openIDCustomClaims': {'type': 'list', 'description': 'If set, overwrite any existing custom claims configuration. This would remove any existing providers. Use empty array to remove all existing providers.', 'items': {'oneOf': [{'allOf': [{'type': 'dict', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'dict', 'properties': {'claimName': {'type': 'dict', 'description': 'The claim name.'}, 'roleMapping': {'type': 'dict', 'additionalProperties': {'type': 'dict', 'description': 'A map of argus functions (id or name) to roles (strings). For each mapping, if the user has the function (key), the claim will contain the mapped role (value)'}, 'description': 'A map of argus functions (id or name) to roles (strings). For each mapping, if the user has the function (key), the claim will contain the mapped role (value)'}, 'provider': {'type': 'str', 'enum': ['functionRoleMapping']}}}], 'description': 'This claim request will generate a custom array claim, containing a set of roles for this user', 'required': ['claimName', 'provider', 'roleMapping']}, {'allOf': [{'type': 'dict', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'dict', 'properties': {'stringified': {'type': 'dict', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'str', 'enum': ['allUserGroups']}}}], 'description': "This claim request will generate a 'groups' claim, containing a set of groups this user is member of", 'required': ['provider']}, {'allOf': [{'type': 'dict', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'dict', 'properties': {'claim': {'type': 'dict', 'description': 'The value selector to use for this claim', 'enum': ['username', 'name', 'picture', 'email', 'clientIP', 'customerID', 'customerShortName', 'customerName', 'domainID', 'phone']}, 'claimName': {'type': 'dict', 'description': 'The claim name'}, 'provider': {'type': 'str', 'enum': ['customClaim']}}}], 'description': 'This claim request will generate a custom claim, containing a value from the selected value selector', 'required': ['claim', 'claimName', 'provider']}, {'allOf': [{'type': 'dict', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'dict', 'properties': {'allowedGroups': {'type': 'dict', 'description': 'List of argus groups (ID or shortname) that are permitted into this claim', 'items': {'type': 'dict', 'description': 'List of argus groups (ID or shortname) that are permitted into this claim'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}, 'stringified': {'type': 'dict', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'str', 'enum': ['userGroups']}}}], 'description': "This claim request will generate a 'groups' claim, containing a set of groups this user is member of (limited to a set of allowed groups)", 'required': ['allowedGroups', 'provider']}]}, 'uniqueItems': True}, 'permissionScope': {'type': 'str', 'description': 'If set, change the function/role (id or name) to constrain the delegated client session to, restricting what the resource client will be allowed to do on behalf of the user. The delegated client session will be constrained to the least set of the users current session permissions, and this role.'}, 'permittedScopes': {'type': 'list', 'description': 'If set, change the scopes the scopes the client is restricted to. An empty set will allow all scopes.', 'items': {'type': 'str', 'description': 'If set, change the scopes the scopes the client is restricted to. An empty set will allow all scopes.'}, 'uniqueItems': True}, 'redirectURI': {'type': 'str', 'deprecated': True, 'description': 'This field is DEPRECATED. Use redirectURIs instead.'}, 'redirectURIs': {'type': 'list', 'description': 'If set, update the redirect URIs to allow when redirecting from the OAuth authorization endpoint.', 'items': {'type': 'str', 'description': 'If set, update the redirect URIs to allow when redirecting from the OAuth authorization endpoint.'}, 'pattern': 'http(s)?://.*'}, 'requiredFunction': {'type': 'str', 'description': 'If set, change the function (id or name) required to grant access to this resource. If customer is specified, this function is required for that particular customer.'}, 'shortName': {'type': 'str', 'description': 'If set, update the shortname describing this resource. This name will show up when listing external resources.', 'pattern': '[a-zA-Z0-9_:\\-\\.]*'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Update an existing OAuth2 client', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authenticationMethod': {'type': 'string', 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'array', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was created'}, 'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'description': {'type': 'string', 'description': 'A description of this resource.'}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': 'Flags set on this client', 'items': {'type': 'string', 'description': 'Flags set on this client', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}, 'uniqueItems': True}, 'id': {'type': 'string', 'format': 'uuid', 'description': 'Client ID'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this resource was last updated'}, 'mainURI': {'type': 'string', 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'maxSecurityLevel': {'type': 'string', 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}, 'name': {'type': 'string', 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'openIDCustomClaims': {'type': 'array', 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'oneOf': [{'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['allUserGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'allowedGroups': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim', 'items': {'type': 'object', 'description': 'List of argus group shortnames, for the groups that are permitted into this claim'}, 'uniqueItems': True}, 'stringified': {'type': 'object', 'description': 'If true, output claim as single comma-separated string, instead of as an array of strings'}, 'provider': {'type': 'string', 'enum': ['userGroups']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claimName': {'type': 'object'}, 'roleMapping': {'type': 'object', 'additionalProperties': {'type': 'object'}}, 'provider': {'type': 'string', 'enum': ['functionRoleMapping']}}}], 'required': ['provider']}, {'allOf': [{'type': 'object', 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client', 'discriminator': {'propertyName': 'provider'}, 'properties': {'provider': {'type': 'string'}}, 'required': ['provider']}, {'type': 'object', 'properties': {'claim': {'type': 'object', 'enum': ['username', 'name', 'picture', 'email', 'clientIP', 'customerID', 'customerShortName', 'customerName', 'domainID', 'phone']}, 'claimName': {'type': 'object'}, 'provider': {'type': 'string', 'enum': ['customClaim']}}}], 'required': ['provider']}]}}, 'permissionScope': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'permittedScopes': {'type': 'array', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.'}, 'uniqueItems': True}, 'redirectURI': {'type': 'string', 'deprecated': True, 'description': 'This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'array', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string', 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.'}}, 'requiredFunction': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'shortName': {'type': 'string', 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}}}}}}}}, '220': {'description': 'No update performed', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewOAuthClients'], 'x-Argus-ApiStatus': 'PUBLIC'}