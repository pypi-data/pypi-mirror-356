"""Autogenerated API schema"""
from argus_api import session


initiate_api_key = {'tags': ['authentication/v1/apikey'], 'summary': 'Initiate a new apikey for current user (PUBLIC)', 'description': '', 'operationId': 'initiateApiKey', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'authorization': {'type': 'str', 'description': "User authorization token obtained from the user authorization endpoint. The token must be issued for operation 'apikey.create'"}, 'description': {'type': 'str', 'pattern': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'disableExpiration': {'type': 'bool', 'default': False, 'description': 'Request API-key with unlimited expiration. If unlimited expiration is not permitted, a 412 error will be returned.'}, 'disableSourceRestriction': {'type': 'bool', 'default': False, 'description': 'Request API-key without source restriction. If key without source restriction is not permitted, a 412 error will be returned. Deprecated! Instead set provider in source to ´disabled´'}, 'expirationDays': {'type': 'int', 'description': 'Requested expiration days, 0 means unlimited. Default is 3 months. If user does not have permissions to specify expiration period, an error will be returned.', 'minimum': 0}, 'password': {'type': 'str', 'description': 'User password to verify this request'}, 'sessionConstraints': {'type': 'dict', 'properties': {'customerID': {'type': 'list', 'description': 'List of customers to constrain this session to. Default is all available customers.', 'items': {'type': 'int', 'description': 'List of customers to constrain this session to. Default is all available customers.'}, 'uniqueItems': True}, 'function': {'type': 'list', 'description': 'List of functions (by name) to constrain this session to. Default is all available functions.', 'items': {'type': 'str', 'description': 'List of functions (by name) to constrain this session to. Default is all available functions.'}, 'uniqueItems': True}, 'functionID': {'type': 'list', 'description': 'List of functions (by ID) to constrain this session to. Default is all available functions.', 'items': {'type': 'int', 'description': 'List of functions (by ID) to constrain this session to. Default is all available functions.'}, 'uniqueItems': True}, 'readOnly': {'type': 'bool', 'description': 'If set, this session will be read only'}}}, 'source': {'type': 'dict', 'properties': {'awsOptions': {'type': 'dict', 'description': 'Options when requesting a API key for AWS services', 'properties': {'regions': {'type': 'list', 'description': 'AWS regions the API key should be valid for', 'items': {'type': 'str', 'description': 'AWS regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'list', 'description': 'AWS services the API key should be valid for', 'items': {'type': 'str', 'description': 'AWS services the API key should be valid for'}, 'uniqueItems': True}}}, 'azureOptions': {'type': 'dict', 'description': 'Options when requesting a API key for Azure instances', 'properties': {'regions': {'type': 'list', 'description': 'Azure regions the API key should be valid for', 'items': {'type': 'str', 'description': 'Azure regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'list', 'description': 'Azure services the API key should be valid for', 'items': {'type': 'str', 'description': 'Azure services the API key should be valid for'}, 'uniqueItems': True}}}, 'githubOptions': {'type': 'dict', 'description': 'Request to get API key for Github services', 'properties': {'services': {'type': 'list', 'description': 'Github services the API key should be valid for', 'items': {'type': 'str', 'description': 'Github services the API key should be valid for'}, 'uniqueItems': True}}}, 'provider': {'type': 'str', 'default': 'staticIP', 'description': 'Provider the API key should be valid for. Can be a cloud provider, static for client IP/CIDR networks or disabled for unlimited source', 'enum': ['staticIP', 'disabled', 'azure', 'aws', 'github']}, 'staticOptions': {'type': 'dict', 'properties': {'ipAddresses': {'type': 'list', 'description': 'IP addresses the static API key will be valid for', 'items': {'type': 'str', 'description': 'IP addresses the static API key will be valid for'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}}, 'required': ['ipAddresses']}}, 'required': ['provider']}, 'validSources': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}}, 'required': ['description']}}}, 'required': True}, 'responses': {'default': {'description': 'default response', 'content': {'application/json': {}}}, '201': {'description': 'Initiate a new apikey for current user', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'apiKeyString': {'type': 'string'}, 'keyDescriptor': {'type': 'object', 'description': 'The list of configured API keys', 'properties': {'constraints': {'type': 'object', 'description': 'Permission constraints set for this key.', 'properties': {'customers': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'functions': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'uniqueItems': True}, 'readOnly': {'type': 'boolean'}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was created.'}, 'description': {'type': 'string', 'description': 'Key description'}, 'lastUsedIP': {'type': 'object', 'description': 'IP source from which this key was last used.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'lastUsedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was last used.'}, 'prefix': {'type': 'string', 'description': 'Key prefix'}, 'source': {'type': 'object', 'description': 'Response when requesting an API key for use with cloud providers or static IPs', 'properties': {'awsOptions': {'type': 'object', 'description': 'Response for request to create API key for AWS', 'properties': {'regions': {'type': 'array', 'description': 'AWS regions the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'AWS services the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS services the API key should be valid for'}, 'uniqueItems': True}}}, 'azureOptions': {'type': 'object', 'description': 'Response for request to create API key for Azure instances', 'properties': {'regions': {'type': 'array', 'description': 'Azure regions the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'Azure services the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure services the API key should be valid for'}, 'uniqueItems': True}}}, 'githubOptions': {'type': 'object', 'description': 'Response for creating API key for Github services', 'properties': {'services': {'type': 'array', 'description': 'Github services the API key should be valid for', 'items': {'type': 'string', 'description': 'Github services the API key should be valid for'}, 'uniqueItems': True}}}, 'provider': {'type': 'string', 'description': 'Provider the API key should be valid for. Can be a cloud provider, static for client IP/CIDR networks or disabled for unlimited source', 'enum': ['staticIP', 'azure', 'disabled', 'aws', 'github']}, 'staticOptions': {'type': 'object', 'description': 'Options containing IP addresses for static API key', 'properties': {'ipAddresses': {'type': 'array', 'description': 'IP/CIDR networks the API key should be valid for', 'items': {'type': 'string', 'description': 'IP/CIDR networks the API key should be valid for'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}}, 'required': ['ipAddresses']}}, 'required': ['provider']}, 'validSources': {'type': 'array', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'items': {'type': 'object', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'uniqueItems': True}, 'validUntil': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key expires. If value is 0, key never expires.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
list_api_keys = {'tags': ['authentication/v1/apikey'], 'summary': 'List current user apikeys (PUBLIC)', 'description': '', 'operationId': 'listApiKeys', 'responses': {'default': {'description': 'List current user apikeys', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'keys': {'type': 'array', 'description': 'The list of configured API keys', 'items': {'type': 'object', 'description': 'The list of configured API keys', 'properties': {'constraints': {'type': 'object', 'description': 'Permission constraints set for this key.', 'properties': {'customers': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'functions': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'uniqueItems': True}, 'readOnly': {'type': 'boolean'}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was created.'}, 'description': {'type': 'string', 'description': 'Key description'}, 'lastUsedIP': {'type': 'object', 'description': 'IP source from which this key was last used.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'lastUsedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was last used.'}, 'prefix': {'type': 'string', 'description': 'Key prefix'}, 'source': {'type': 'object', 'description': 'Response when requesting an API key for use with cloud providers or static IPs', 'properties': {'awsOptions': {'type': 'object', 'description': 'Response for request to create API key for AWS', 'properties': {'regions': {'type': 'array', 'description': 'AWS regions the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'AWS services the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS services the API key should be valid for'}, 'uniqueItems': True}}}, 'azureOptions': {'type': 'object', 'description': 'Response for request to create API key for Azure instances', 'properties': {'regions': {'type': 'array', 'description': 'Azure regions the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'Azure services the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure services the API key should be valid for'}, 'uniqueItems': True}}}, 'githubOptions': {'type': 'object', 'description': 'Response for creating API key for Github services', 'properties': {'services': {'type': 'array', 'description': 'Github services the API key should be valid for', 'items': {'type': 'string', 'description': 'Github services the API key should be valid for'}, 'uniqueItems': True}}}, 'provider': {'type': 'string', 'description': 'Provider the API key should be valid for. Can be a cloud provider, static for client IP/CIDR networks or disabled for unlimited source', 'enum': ['staticIP', 'azure', 'disabled', 'aws', 'github']}, 'staticOptions': {'type': 'object', 'description': 'Options containing IP addresses for static API key', 'properties': {'ipAddresses': {'type': 'array', 'description': 'IP/CIDR networks the API key should be valid for', 'items': {'type': 'string', 'description': 'IP/CIDR networks the API key should be valid for'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}}, 'required': ['ipAddresses']}}, 'required': ['provider']}, 'validSources': {'type': 'array', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'items': {'type': 'object', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'uniqueItems': True}, 'validUntil': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key expires. If value is 0, key never expires.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
renew_api_key_by_id = {'tags': ['authentication/v1/apikey'], 'summary': 'Renew existing API-key (PUBLIC)', 'description': '', 'operationId': 'renewApiKeyByID', 'parameters': [{'name': 'keyID', 'in': 'path', 'description': 'Key ID', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'authorization': {'type': 'str', 'description': "User authorization token obtained from the user authorization endpoint. The token must be issued for operation 'apikey.renew'"}, 'disableExpiration': {'type': 'bool', 'default': False, 'description': 'Request API-key with unlimited expiration. If unlimited expiration is not permitted, a 412 error will be returned.'}, 'expirationDays': {'type': 'int', 'description': 'Requested expiration days, 0 means unlimited. Default is 3 months. If user does not have permissions to specify expiration period, an error will be returned.', 'minimum': 0}, 'password': {'type': 'str', 'description': 'User password to verify this request'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Renew existing API-key', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'renewedKey': {'type': 'object', 'description': 'The list of configured API keys', 'properties': {'constraints': {'type': 'object', 'description': 'Permission constraints set for this key.', 'properties': {'customers': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'functions': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'uniqueItems': True}, 'readOnly': {'type': 'boolean'}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was created.'}, 'description': {'type': 'string', 'description': 'Key description'}, 'lastUsedIP': {'type': 'object', 'description': 'IP source from which this key was last used.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'lastUsedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was last used.'}, 'prefix': {'type': 'string', 'description': 'Key prefix'}, 'source': {'type': 'object', 'description': 'Response when requesting an API key for use with cloud providers or static IPs', 'properties': {'awsOptions': {'type': 'object', 'description': 'Response for request to create API key for AWS', 'properties': {'regions': {'type': 'array', 'description': 'AWS regions the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'AWS services the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS services the API key should be valid for'}, 'uniqueItems': True}}}, 'azureOptions': {'type': 'object', 'description': 'Response for request to create API key for Azure instances', 'properties': {'regions': {'type': 'array', 'description': 'Azure regions the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'Azure services the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure services the API key should be valid for'}, 'uniqueItems': True}}}, 'githubOptions': {'type': 'object', 'description': 'Response for creating API key for Github services', 'properties': {'services': {'type': 'array', 'description': 'Github services the API key should be valid for', 'items': {'type': 'string', 'description': 'Github services the API key should be valid for'}, 'uniqueItems': True}}}, 'provider': {'type': 'string', 'description': 'Provider the API key should be valid for. Can be a cloud provider, static for client IP/CIDR networks or disabled for unlimited source', 'enum': ['staticIP', 'azure', 'disabled', 'aws', 'github']}, 'staticOptions': {'type': 'object', 'description': 'Options containing IP addresses for static API key', 'properties': {'ipAddresses': {'type': 'array', 'description': 'IP/CIDR networks the API key should be valid for', 'items': {'type': 'string', 'description': 'IP/CIDR networks the API key should be valid for'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}}, 'required': ['ipAddresses']}}, 'required': ['provider']}, 'validSources': {'type': 'array', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'items': {'type': 'object', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'uniqueItems': True}, 'validUntil': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key expires. If value is 0, key never expires.'}}}}}}}}}}}, 'deprecated': True, 'x-Argus-ApiStatus': 'PUBLIC'}
renew_api_key_by_prefix = {'tags': ['authentication/v1/apikey'], 'summary': 'Renew an apikey for current user (PUBLIC)', 'description': 'API keys have limited validity. This operationallows the user to renew a key, to allow it to remain functional for a new validity period.', 'operationId': 'renewApiKeyByPrefix', 'parameters': [{'name': 'prefix', 'in': 'path', 'description': 'Key prefix on the form 1ab/2c', 'required': True, 'schema': {'type': 'str', 'pattern': '[a-z0-9]+/[a-z0-9]+'}, 'type': 'str', 'pattern': '[a-z0-9]+/[a-z0-9]+'}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'authorization': {'type': 'str', 'description': "User authorization token obtained from the user authorization endpoint. The token must be issued for operation 'apikey.renew'"}, 'disableExpiration': {'type': 'bool', 'default': False, 'description': 'Request API-key with unlimited expiration. If unlimited expiration is not permitted, a 412 error will be returned.'}, 'expirationDays': {'type': 'int', 'description': 'Requested expiration days, 0 means unlimited. Default is 3 months. If user does not have permissions to specify expiration period, an error will be returned.', 'minimum': 0}, 'password': {'type': 'str', 'description': 'User password to verify this request'}}}}}, 'required': True}, 'responses': {'default': {'description': 'Renew an apikey for current user', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'renewedKey': {'type': 'object', 'description': 'The list of configured API keys', 'properties': {'constraints': {'type': 'object', 'description': 'Permission constraints set for this key.', 'properties': {'customers': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'functions': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'uniqueItems': True}, 'readOnly': {'type': 'boolean'}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was created.'}, 'description': {'type': 'string', 'description': 'Key description'}, 'lastUsedIP': {'type': 'object', 'description': 'IP source from which this key was last used.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'lastUsedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was last used.'}, 'prefix': {'type': 'string', 'description': 'Key prefix'}, 'source': {'type': 'object', 'description': 'Response when requesting an API key for use with cloud providers or static IPs', 'properties': {'awsOptions': {'type': 'object', 'description': 'Response for request to create API key for AWS', 'properties': {'regions': {'type': 'array', 'description': 'AWS regions the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'AWS services the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS services the API key should be valid for'}, 'uniqueItems': True}}}, 'azureOptions': {'type': 'object', 'description': 'Response for request to create API key for Azure instances', 'properties': {'regions': {'type': 'array', 'description': 'Azure regions the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'Azure services the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure services the API key should be valid for'}, 'uniqueItems': True}}}, 'githubOptions': {'type': 'object', 'description': 'Response for creating API key for Github services', 'properties': {'services': {'type': 'array', 'description': 'Github services the API key should be valid for', 'items': {'type': 'string', 'description': 'Github services the API key should be valid for'}, 'uniqueItems': True}}}, 'provider': {'type': 'string', 'description': 'Provider the API key should be valid for. Can be a cloud provider, static for client IP/CIDR networks or disabled for unlimited source', 'enum': ['staticIP', 'azure', 'disabled', 'aws', 'github']}, 'staticOptions': {'type': 'object', 'description': 'Options containing IP addresses for static API key', 'properties': {'ipAddresses': {'type': 'array', 'description': 'IP/CIDR networks the API key should be valid for', 'items': {'type': 'string', 'description': 'IP/CIDR networks the API key should be valid for'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}}, 'required': ['ipAddresses']}}, 'required': ['provider']}, 'validSources': {'type': 'array', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'items': {'type': 'object', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'uniqueItems': True}, 'validUntil': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key expires. If value is 0, key never expires.'}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
revoke_api_key_by_prefix = {'tags': ['authentication/v1/apikey'], 'summary': 'Revoke an apikey from current user (PUBLIC)', 'description': '', 'operationId': 'revokeApiKeyByPrefix', 'parameters': [{'name': 'prefix', 'in': 'path', 'description': 'Key prefix on the form 1ab/2c', 'required': True, 'schema': {'type': 'str', 'pattern': '[a-z0-9]+/[a-z0-9]+'}, 'type': 'str', 'pattern': '[a-z0-9]+/[a-z0-9]+'}], 'responses': {'default': {'description': 'Revoke an apikey from current user', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'keys': {'type': 'array', 'description': 'The list of configured API keys', 'items': {'type': 'object', 'description': 'The list of configured API keys', 'properties': {'constraints': {'type': 'object', 'description': 'Permission constraints set for this key.', 'properties': {'customers': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'uniqueItems': True}, 'functions': {'type': 'array', 'items': {'type': 'object', 'description': 'SPI FunctionInfo', 'properties': {'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the function.'}}}, 'uniqueItems': True}, 'readOnly': {'type': 'boolean'}}}, 'createdByUser': {'type': 'object', 'description': 'SPI UserInfo', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'flags': {'type': 'array', 'description': "The subject's flags", 'items': {'type': 'string', 'description': "The subject's flags", 'enum': ['deleted']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': "The subject's name"}, 'shortName': {'type': 'string', 'description': "The subject's short name"}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was created.'}, 'description': {'type': 'string', 'description': 'Key description'}, 'lastUsedIP': {'type': 'object', 'description': 'IP source from which this key was last used.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'lastUsedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key was last used.'}, 'prefix': {'type': 'string', 'description': 'Key prefix'}, 'source': {'type': 'object', 'description': 'Response when requesting an API key for use with cloud providers or static IPs', 'properties': {'awsOptions': {'type': 'object', 'description': 'Response for request to create API key for AWS', 'properties': {'regions': {'type': 'array', 'description': 'AWS regions the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'AWS services the API key should be valid for', 'items': {'type': 'string', 'description': 'AWS services the API key should be valid for'}, 'uniqueItems': True}}}, 'azureOptions': {'type': 'object', 'description': 'Response for request to create API key for Azure instances', 'properties': {'regions': {'type': 'array', 'description': 'Azure regions the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure regions the API key should be valid for'}, 'uniqueItems': True}, 'services': {'type': 'array', 'description': 'Azure services the API key should be valid for', 'items': {'type': 'string', 'description': 'Azure services the API key should be valid for'}, 'uniqueItems': True}}}, 'githubOptions': {'type': 'object', 'description': 'Response for creating API key for Github services', 'properties': {'services': {'type': 'array', 'description': 'Github services the API key should be valid for', 'items': {'type': 'string', 'description': 'Github services the API key should be valid for'}, 'uniqueItems': True}}}, 'provider': {'type': 'string', 'description': 'Provider the API key should be valid for. Can be a cloud provider, static for client IP/CIDR networks or disabled for unlimited source', 'enum': ['staticIP', 'azure', 'disabled', 'aws', 'github']}, 'staticOptions': {'type': 'object', 'description': 'Options containing IP addresses for static API key', 'properties': {'ipAddresses': {'type': 'array', 'description': 'IP/CIDR networks the API key should be valid for', 'items': {'type': 'string', 'description': 'IP/CIDR networks the API key should be valid for'}, 'maxItems': 2147483647, 'minItems': 1, 'uniqueItems': True}}, 'required': ['ipAddresses']}}, 'required': ['provider']}, 'validSources': {'type': 'array', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'items': {'type': 'object', 'description': 'Client IP/CIDR networks which the api key will be valid for.', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'uniqueItems': True}, 'validUntil': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when this key expires. If value is 0, key never expires.'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}