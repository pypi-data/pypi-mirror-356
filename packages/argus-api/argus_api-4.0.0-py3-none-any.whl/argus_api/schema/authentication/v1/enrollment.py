"""Autogenerated API schema"""
from argus_api import session


activate_user_enrollment_flow = {'tags': ['authentication/v1/enrollment'], 'summary': 'Activate enrollment for current user, after receiving activation email (INTERNAL)', 'description': '', 'operationId': 'activateUserEnrollmentFlow', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'User request to activate enrollment, after receiving activation email', 'properties': {'domain': {'type': 'str', 'description': 'Domain id or name for the domain to lookup user in. Typically set by UI client'}, 'enrollmentCode': {'type': 'str', 'description': 'Enrollment code'}, 'userName': {'type': 'str', 'description': 'Username for user to activate enrollment for'}}, 'required': ['domain', 'enrollmentCode', 'userName']}}}, 'required': True}, 'responses': {'default': {'description': 'Activate enrollment for current user, after receiving activation email', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response from user enrollment activation request', 'properties': {'activationCookie': {'type': 'string', 'description': 'A cookie for the current activation session. This is used for the next verification step.'}, 'userID': {'type': 'integer', 'format': 'int64', 'description': 'The userID of the enrolling user. This is used for the next verification step.'}}}}}}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}, '408': {'description': 'Enrollment code expired', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
authenticate_user_enrollment_session = {'tags': ['authentication/v1/enrollment'], 'summary': 'Verify enrollment for current user, after receiving verification code.If successful, it returns a valid session, with authorizations to set password, and enroll other authentication methods. (INTERNAL)', 'description': '', 'operationId': 'authenticateUserEnrollmentSession', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'User request to verify enrollment, after receiving verification code', 'properties': {'activationCookie': {'type': 'str', 'description': 'The activation cookie received in the activation step'}, 'userID': {'type': 'int', 'description': 'Username for user to verify enrollment for', 'minimum': 1}, 'verificationCode': {'type': 'str', 'description': 'Verification code'}}, 'required': ['activationCookie', 'verificationCode']}}}, 'required': True}, 'responses': {'default': {'description': 'Verify enrollment for current user, after receiving verification code.If successful, it returns a valid session, with authorizations to set password, and enroll other authentication methods.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorizations': {'type': 'array', 'description': 'Any gratuitous authorization tokens generated during authentication, if requested by the client', 'items': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}, 'uniqueItems': True}, 'credentials': {'type': 'object', 'description': 'The request credentials to use for this session', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'requestCredentialsData': {'type': 'string'}, 'requestCredentialsType': {'type': 'string', 'enum': ['sessionToken', 'signature', 'apikey']}, 'uri': {'type': 'string'}}}, 'sessionKey': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '412': {'description': 'Invalid argument', 'content': {'application/json': {}}}, '410': {'description': 'Enrollment verification code expired', 'content': {'application/json': {}}}, '408': {'description': 'Enrollment code expired', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
enrollment_user_authorization = {'tags': ['authentication/v1/enrollment'], 'summary': 'Request an authorization token using an Enrollment validation code (INTERNAL)', 'description': 'This endpoint requires that the current user is logged in using Enrollment initial session. Even if the user has Enrollment enabled, it will not work if the current session was creating using a different authentication method.', 'operationId': 'enrollmentUserAuthorization', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'context': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Context variables to scope this authorization. All context variables required by the executing service must be present and equal to those provided here.'}, 'description': 'Context variables to scope this authorization. All context variables required by the executing service must be present and equal to those provided here.'}, 'cookie': {'type': 'str', 'description': 'The cookie returned from the send-sms request'}, 'nextURI': {'type': 'str', 'description': 'The URI to redirect/route to after successful authorization. The URI will be validated according to policy. The authorization token returned from successful authorization should be appended as a query parameter to this URI.'}, 'operation': {'type': 'str', 'description': 'The name of the operation to authorize'}, 'token': {'type': 'str', 'description': 'The token received via SMS'}}, 'required': ['cookie', 'nextURI', 'operation', 'token']}}}, 'required': True}, 'responses': {'default': {'description': 'Request an authorization token using an Enrollment validation code', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'authorization': {'type': 'string', 'description': 'Authorization JWS string'}, 'expires': {'type': 'integer', 'format': 'int64', 'description': 'The timestamp when this authorization expires'}, 'nextURI': {'type': 'string', 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter'}, 'operation': {'type': 'string', 'description': 'Operation which is authorized by this token'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}
send_enrollment_validation_code = {'tags': ['authentication/v1/enrollment'], 'summary': 'Request an SMS validation token to validate user presence. The returned token must be used when requesting authorization token. (INTERNAL)', 'description': 'This endpoint requires that the current user is logged in an Enrollment initial session. Even if the user has Enrollment enabled, it will not work if the current session was creating using a different authentication method.', 'operationId': 'sendEnrollmentValidationCode', 'responses': {'default': {'description': 'Request an SMS validation token to validate user presence. The returned token must be used when requesting authorization token.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'cookie': {'type': 'string', 'description': 'A state cookie bound to the requested SMS'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'INTERNAL'}