"""Autogenerated API schema"""
from argus_api import session


get_profile_picture = {'tags': ['currentuser/v1'], 'summary': "Get current user's profile picture (PUBLIC)", 'description': '', 'operationId': 'getProfilePicture', 'parameters': [{'name': 'default', 'in': 'query', 'description': 'If true, return default avatar image if user picture not set. Default is false.', 'schema': {'type': 'bool', 'default': 'false'}, 'type': 'bool', 'default': 'false'}, {'name': 'width', 'in': 'query', 'description': 'If set, rescale image to the smallest size above this width in pixels (keep aspect ratio)', 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'height', 'in': 'query', 'description': 'If set, rescale image to the smallest size above this height in pixels (keep aspect ratio)', 'schema': {'type': 'int', 'minimum': 1}, 'type': 'int', 'minimum': 1}, {'name': 'size', 'in': 'query', 'description': 'If set, rescale image to this predefined size', 'schema': {'type': 'str', 'enum': ['small', 'medium', 'large', 'xlarge']}, 'type': 'str', 'enum': ['small', 'medium', 'large', 'xlarge']}], 'responses': {'default': {'description': "Get current user's profile picture", 'content': {'image/*': {}}}, '401': {'description': 'Authentication failed', 'content': {'image/*': {}}}, '404': {'description': 'Profile picture not found', 'content': {'image/*': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}
update_profile_picture_json = {'tags': ['currentuser/v1'], 'summary': "Set current user's profile picture (PUBLIC)", 'description': '', 'operationId': 'updateProfilePictureJson', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'image': {'type': 'str', 'maxLength': 10000000, 'minLength': 1}, 'mimeType': {'type': 'str', 'description': 'Image MIME type', 'pattern': 'image/(png|jpe?g)'}}, 'required': ['image', 'mimeType']}}}, 'required': True}, 'responses': {'default': {'description': "Set current user's profile picture", 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'ascendantIDs': {'type': 'array', 'description': 'IDs of ascendants', 'items': {'type': 'integer', 'format': 'int64', 'description': 'IDs of ascendants'}, 'uniqueItems': True}, 'createdByUser': {'type': 'object', 'description': 'User info who last updated the subject', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Created timestamp in ms'}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'email': {'type': 'string', 'description': 'Email of user'}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DISABLED', 'AUTH_SMS', 'AUTH_LDAP', 'AUTH_LOCAL', 'AUTH_OPENID', 'BLOCKED', 'FORCE_PWCHANGE', 'DAEMON_ACCOUNT', 'PASSWORD_NOT_SET', 'AUTH_CRYPTO', 'AUTH_TOTP', 'AUTH_APIKEY', 'ANONYMOUS_USER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of subject'}, 'imageURL': {'type': 'string', 'description': 'User profile picture image url'}, 'language': {'type': 'string', 'description': 'Language of user', 'enum': ['ENGLISH', 'NORWEGIAN']}, 'lastImpersonationTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last impersonation timestamp in ms'}, 'lastLoginIP': {'type': 'string', 'description': 'Last IP the user authenticated from'}, 'lastLoginTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last authentication timestamp in ms'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'User info who last updated the subject', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Last updated timestamp in ms'}, 'mobile': {'type': 'string', 'description': 'Mobile number of user'}, 'name': {'type': 'string', 'description': 'Name of subject'}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Properties of subject'}, 'description': 'Properties of subject'}, 'publicKey': {'type': 'string', 'description': "User's public key"}, 'timeZone': {'type': 'object', 'description': 'Time zone of user', 'properties': {'description': {'type': 'string'}}}, 'userName': {'type': 'string', 'description': 'User name'}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Invalid arguments', 'content': {'application/json': {}}}}, 'x-Argus-ApiStatus': 'PUBLIC'}