"""Autogenerated API schema"""
from argus_api import session


find_nids_events = {'tags': ['events/v1'], 'summary': 'Search for NIDS events (PUBLIC)', 'description': '', 'operationId': 'findNIDSEvents', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}], 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'DEPRECATED! Use customer instead', 'items': {'type': 'int', 'description': 'DEPRECATED! Use customer instead', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'skipFutureEvents': {'type': 'bool', 'default': False, 'description': 'Whether service should generate endTimestamp by current timestamp.'}, 'exclude': {'type': 'bool', 'description': 'Exclude these criteria from the parent criteria.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'eventIdentifier': {'type': 'list', 'description': 'Search for events specified by full ID (type/timestamp/customerID/eventID).', 'items': {'type': 'dict', 'properties': {'customerID': {'type': 'int', 'xml': {'attribute': True}}, 'eventID': {'type': 'str', 'xml': {'attribute': True}}, 'timestamp': {'type': 'int', 'xml': {'attribute': True}}, 'type': 'str'}}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'locationID': {'type': 'list', 'description': 'Search for events having these locations.', 'items': {'type': 'int', 'description': 'Search for events having these locations.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'severity': {'type': 'list', 'description': "Search events with specified severity. Can't be used together with minSeverity/maxSeverity.", 'items': {'type': 'str', 'description': "Search events with specified severity. Can't be used together with minSeverity/maxSeverity.", 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for events by customer (id or shortname).', 'items': {'type': 'str', 'description': 'Search for events by customer (id or shortname).'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'alarmID': {'type': 'list', 'description': 'Search for events having an attack identifier (signature) mapped to any of these alarms.', 'items': {'type': 'int', 'description': 'Search for events having an attack identifier (signature) mapped to any of these alarms.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'attackCategoryID': {'type': 'list', 'description': 'Search for events having an attack identifier (signature) mapped to any of these categories.', 'items': {'type': 'int', 'description': 'Search for events having an attack identifier (signature) mapped to any of these categories.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'sourceGeoCountry': {'type': 'list', 'description': 'Search for events where source IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where source IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'destinationGeoCountry': {'type': 'list', 'description': 'Search for events where destination IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where destination IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'geoCountry': {'type': 'list', 'description': 'Search for events where source or destination IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where source or destination IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'domain': {'type': 'list', 'description': 'Search for events having one of these domains. The domains are not validated', 'items': {'type': 'str', 'description': 'Search for events having one of these domains. The domains are not validated'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Search for events having these properties (logical AND).'}, 'description': 'Search for events having these properties (logical AND).'}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'exactMatchProperties': {'type': 'bool', 'default': True, 'description': 'If set to true, will execute in-memory filtering to only match events that have exact match of properties specified at top level "properties" field of search request. WARN: The count of response would not be reliable, as the filtering is applied in-memory of application server, but the count was done by search engine.'}, 'multivaluePropertySeparator': {'type': 'str', 'default': 'comma', 'description': 'Separator that is going to be used when formatting the multi-value properties of the found events.', 'enum': ['comma', 'newline']}, 'sensorID': {'type': 'list', 'description': 'List of sensor IDs that must have a match in the retrieved event.', 'items': {'type': 'int', 'description': 'List of sensor IDs that must have a match in the retrieved event.'}, 'uniqueItems': True}, 'subCriteria': {'type': 'list', 'description': 'Subcriterias used to refine the search by including or excluding events.', 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'DEPRECATED! Use customer instead', 'items': {'type': 'int', 'description': 'DEPRECATED! Use customer instead', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'skipFutureEvents': {'type': 'bool', 'default': False, 'description': 'Whether service should generate endTimestamp by current timestamp.'}, 'exclude': {'type': 'bool', 'description': 'Exclude these criteria from the parent criteria.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'eventIdentifier': {'type': 'list', 'description': 'Search for events specified by full ID (type/timestamp/customerID/eventID).', 'items': {'type': 'dict', 'properties': {'customerID': {'type': 'int', 'xml': {'attribute': True}}, 'eventID': {'type': 'str', 'xml': {'attribute': True}}, 'timestamp': {'type': 'int', 'xml': {'attribute': True}}, 'type': 'str'}}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'locationID': {'type': 'list', 'description': 'Search for events having these locations.', 'items': {'type': 'int', 'description': 'Search for events having these locations.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'severity': {'type': 'list', 'description': "Search events with specified severity. Can't be used together with minSeverity/maxSeverity.", 'items': {'type': 'str', 'description': "Search events with specified severity. Can't be used together with minSeverity/maxSeverity.", 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for events by customer (id or shortname).', 'items': {'type': 'str', 'description': 'Search for events by customer (id or shortname).'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'alarmID': {'type': 'list', 'description': 'Search for events having an attack identifier (signature) mapped to any of these alarms.', 'items': {'type': 'int', 'description': 'Search for events having an attack identifier (signature) mapped to any of these alarms.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'attackCategoryID': {'type': 'list', 'description': 'Search for events having an attack identifier (signature) mapped to any of these categories.', 'items': {'type': 'int', 'description': 'Search for events having an attack identifier (signature) mapped to any of these categories.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'sourceGeoCountry': {'type': 'list', 'description': 'Search for events where source IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where source IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'destinationGeoCountry': {'type': 'list', 'description': 'Search for events where destination IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where destination IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'geoCountry': {'type': 'list', 'description': 'Search for events where source or destination IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where source or destination IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'domain': {'type': 'list', 'description': 'Search for events having one of these domains. The domains are not validated', 'items': {'type': 'str', 'description': 'Search for events having one of these domains. The domains are not validated'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Search for events having these properties (logical AND).'}, 'description': 'Search for events having these properties (logical AND).'}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'exactMatchProperties': {'type': 'bool', 'default': True, 'description': 'If set to true, will execute in-memory filtering to only match events that have exact match of properties specified at top level "properties" field of search request. WARN: The count of response would not be reliable, as the filtering is applied in-memory of application server, but the count was done by search engine.'}, 'multivaluePropertySeparator': {'type': 'str', 'default': 'comma', 'description': 'Separator that is going to be used when formatting the multi-value properties of the found events.', 'enum': ['comma', 'newline']}, 'sensorID': {'type': 'list', 'description': 'List of sensor IDs that must have a match in the retrieved event.', 'items': {'type': 'int', 'description': 'List of sensor IDs that must have a match in the retrieved event.'}, 'uniqueItems': True}, 'subCriteria': {'type': 'list', 'description': 'Subcriterias used to refine the search by including or excluding events.', 'items': [], 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search, will default to timestamp.', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search, will default to timestamp.', 'enum': ['timestamp', 'startTimestamp', 'endTimestamp', 'all']}, 'uniqueItems': True}, 'signature': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': [], 'includeFlag': [], 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'lastUpdatedTimestamp': {'type': 'int', 'description': 'Match only with events marked with a last updated time greater or equal to this.'}, 'indexStartTime': {'type': 'int', 'description': 'Earliest created time of the indices searched.', 'minimum': 0}, 'indexEndTime': {'type': 'int', 'description': 'Last created time of the indices searched.', 'minimum': 0}, 'destinationIP': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'sourceIP': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'ip': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'destinationPort': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'sourcePort': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'port': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'minSeverity': {'type': 'str', 'enum': ['low', 'medium', 'high', 'critical']}, 'maxSeverity': {'type': 'str', 'enum': ['low', 'medium', 'high', 'critical']}}}, 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search, will default to timestamp.', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search, will default to timestamp.', 'enum': ['timestamp', 'startTimestamp', 'endTimestamp', 'all']}, 'uniqueItems': True}, 'signature': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'DEPRECATED! Use customer instead', 'items': {'type': 'int', 'description': 'DEPRECATED! Use customer instead', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'skipFutureEvents': {'type': 'bool', 'default': False, 'description': 'Whether service should generate endTimestamp by current timestamp.'}, 'exclude': {'type': 'bool', 'description': 'Exclude these criteria from the parent criteria.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'eventIdentifier': {'type': 'list', 'description': 'Search for events specified by full ID (type/timestamp/customerID/eventID).', 'items': {'type': 'dict', 'properties': {'customerID': {'type': 'int', 'xml': {'attribute': True}}, 'eventID': {'type': 'str', 'xml': {'attribute': True}}, 'timestamp': {'type': 'int', 'xml': {'attribute': True}}, 'type': 'str'}}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'locationID': {'type': 'list', 'description': 'Search for events having these locations.', 'items': {'type': 'int', 'description': 'Search for events having these locations.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'severity': {'type': 'list', 'description': "Search events with specified severity. Can't be used together with minSeverity/maxSeverity.", 'items': {'type': 'str', 'description': "Search events with specified severity. Can't be used together with minSeverity/maxSeverity.", 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for events by customer (id or shortname).', 'items': {'type': 'str', 'description': 'Search for events by customer (id or shortname).'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'alarmID': {'type': 'list', 'description': 'Search for events having an attack identifier (signature) mapped to any of these alarms.', 'items': {'type': 'int', 'description': 'Search for events having an attack identifier (signature) mapped to any of these alarms.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'attackCategoryID': {'type': 'list', 'description': 'Search for events having an attack identifier (signature) mapped to any of these categories.', 'items': {'type': 'int', 'description': 'Search for events having an attack identifier (signature) mapped to any of these categories.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'sourceGeoCountry': {'type': 'list', 'description': 'Search for events where source IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where source IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'destinationGeoCountry': {'type': 'list', 'description': 'Search for events where destination IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where destination IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'geoCountry': {'type': 'list', 'description': 'Search for events where source or destination IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where source or destination IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'domain': {'type': 'list', 'description': 'Search for events having one of these domains. The domains are not validated', 'items': {'type': 'str', 'description': 'Search for events having one of these domains. The domains are not validated'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Search for events having these properties (logical AND).'}, 'description': 'Search for events having these properties (logical AND).'}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'exactMatchProperties': {'type': 'bool', 'default': True, 'description': 'If set to true, will execute in-memory filtering to only match events that have exact match of properties specified at top level "properties" field of search request. WARN: The count of response would not be reliable, as the filtering is applied in-memory of application server, but the count was done by search engine.'}, 'multivaluePropertySeparator': {'type': 'str', 'default': 'comma', 'description': 'Separator that is going to be used when formatting the multi-value properties of the found events.', 'enum': ['comma', 'newline']}, 'sensorID': {'type': 'list', 'description': 'List of sensor IDs that must have a match in the retrieved event.', 'items': {'type': 'int', 'description': 'List of sensor IDs that must have a match in the retrieved event.'}, 'uniqueItems': True}, 'subCriteria': {'type': 'list', 'description': 'Subcriterias used to refine the search by including or excluding events.', 'items': [], 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search, will default to timestamp.', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search, will default to timestamp.', 'enum': ['timestamp', 'startTimestamp', 'endTimestamp', 'all']}, 'uniqueItems': True}, 'signature': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': [], 'includeFlag': [], 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'lastUpdatedTimestamp': {'type': 'int', 'description': 'Match only with events marked with a last updated time greater or equal to this.'}, 'indexStartTime': {'type': 'int', 'description': 'Earliest created time of the indices searched.', 'minimum': 0}, 'indexEndTime': {'type': 'int', 'description': 'Last created time of the indices searched.', 'minimum': 0}, 'destinationIP': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'sourceIP': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'ip': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'destinationPort': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'sourcePort': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'port': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'minSeverity': {'type': 'str', 'enum': ['low', 'medium', 'high', 'critical']}, 'maxSeverity': {'type': 'str', 'enum': ['low', 'medium', 'high', 'critical']}}}, 'includeFlag': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'description': 'Limit results', 'xml': {'attribute': True}}, 'offset': {'type': 'int', 'description': 'Offset results', 'xml': {'attribute': True}}, 'includeDeleted': {'type': 'bool', 'description': 'Also include deleted objects (where implemented)', 'xml': {'attribute': True}}, 'customerID': {'type': 'list', 'description': 'DEPRECATED! Use customer instead', 'items': {'type': 'int', 'description': 'DEPRECATED! Use customer instead', 'xml': {'name': 'CustomerID'}}, 'uniqueItems': True, 'xml': {'name': 'Customers', 'wrapped': True}}, 'skipFutureEvents': {'type': 'bool', 'default': False, 'description': 'Whether service should generate endTimestamp by current timestamp.'}, 'exclude': {'type': 'bool', 'description': 'Exclude these criteria from the parent criteria.'}, 'required': {'type': 'bool', 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'eventIdentifier': {'type': 'list', 'description': 'Search for events specified by full ID (type/timestamp/customerID/eventID).', 'items': {'type': 'dict', 'properties': {'customerID': {'type': 'int', 'xml': {'attribute': True}}, 'eventID': {'type': 'str', 'xml': {'attribute': True}}, 'timestamp': {'type': 'int', 'xml': {'attribute': True}}, 'type': 'str'}}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'locationID': {'type': 'list', 'description': 'Search for events having these locations.', 'items': {'type': 'int', 'description': 'Search for events having these locations.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'severity': {'type': 'list', 'description': "Search events with specified severity. Can't be used together with minSeverity/maxSeverity.", 'items': {'type': 'str', 'description': "Search events with specified severity. Can't be used together with minSeverity/maxSeverity.", 'enum': ['low', 'medium', 'high', 'critical']}, 'uniqueItems': True}, 'customer': {'type': 'list', 'description': 'Search for events by customer (id or shortname).', 'items': {'type': 'str', 'description': 'Search for events by customer (id or shortname).'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'alarmID': {'type': 'list', 'description': 'Search for events having an attack identifier (signature) mapped to any of these alarms.', 'items': {'type': 'int', 'description': 'Search for events having an attack identifier (signature) mapped to any of these alarms.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'attackCategoryID': {'type': 'list', 'description': 'Search for events having an attack identifier (signature) mapped to any of these categories.', 'items': {'type': 'int', 'description': 'Search for events having an attack identifier (signature) mapped to any of these categories.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'sourceGeoCountry': {'type': 'list', 'description': 'Search for events where source IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where source IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'destinationGeoCountry': {'type': 'list', 'description': 'Search for events where destination IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where destination IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'geoCountry': {'type': 'list', 'description': 'Search for events where source or destination IP is registered in any of these countries.', 'items': {'type': 'str', 'description': 'Search for events where source or destination IP is registered in any of these countries.'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'domain': {'type': 'list', 'description': 'Search for events having one of these domains. The domains are not validated', 'items': {'type': 'str', 'description': 'Search for events having one of these domains. The domains are not validated'}, 'maxItems': 1024, 'minItems': 0, 'uniqueItems': True}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'str', 'description': 'Search for events having these properties (logical AND).'}, 'description': 'Search for events having these properties (logical AND).'}, 'productionCustomers': {'type': 'bool', 'description': "If set, apply a customer filter for customers marked as 'not in production'. If true, EXCLUDE customers 'not in production'. If false, REQUIRE customers 'not in production'. Default is unset (no filter on production customers)."}, 'exactMatchProperties': {'type': 'bool', 'default': True, 'description': 'If set to true, will execute in-memory filtering to only match events that have exact match of properties specified at top level "properties" field of search request. WARN: The count of response would not be reliable, as the filtering is applied in-memory of application server, but the count was done by search engine.'}, 'multivaluePropertySeparator': {'type': 'str', 'default': 'comma', 'description': 'Separator that is going to be used when formatting the multi-value properties of the found events.', 'enum': ['comma', 'newline']}, 'sensorID': {'type': 'list', 'description': 'List of sensor IDs that must have a match in the retrieved event.', 'items': {'type': 'int', 'description': 'List of sensor IDs that must have a match in the retrieved event.'}, 'uniqueItems': True}, 'subCriteria': {'type': 'list', 'description': 'Subcriterias used to refine the search by including or excluding events.', 'items': [], 'uniqueItems': True}, 'timeFieldStrategy': {'type': 'list', 'description': 'Defines which timestamps will be included in the search, will default to timestamp.', 'items': {'type': 'str', 'description': 'Defines which timestamps will be included in the search, will default to timestamp.', 'enum': ['timestamp', 'startTimestamp', 'endTimestamp', 'all']}, 'uniqueItems': True}, 'signature': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'endTimestamp': {'type': 'int', 'description': 'Search objects until this timestamp', 'xml': {'attribute': True}}, 'startTimestamp': {'type': 'int', 'description': 'Search objects from this timestamp', 'xml': {'attribute': True}}, 'sortBy': {'type': 'list', 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'str', 'description': 'Order results by these properties (prefix with - to sort descending)'}}, 'excludeFlag': [], 'includeFlag': [], 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'lastUpdatedTimestamp': {'type': 'int', 'description': 'Match only with events marked with a last updated time greater or equal to this.'}, 'indexStartTime': {'type': 'int', 'description': 'Earliest created time of the indices searched.', 'minimum': 0}, 'indexEndTime': {'type': 'int', 'description': 'Last created time of the indices searched.', 'minimum': 0}, 'destinationIP': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'sourceIP': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'ip': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'destinationPort': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'sourcePort': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'port': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'minSeverity': {'type': 'str', 'enum': ['low', 'medium', 'high', 'critical']}, 'maxSeverity': {'type': 'str', 'enum': ['low', 'medium', 'high', 'critical']}}}, 'includeFlags': {'type': 'list', 'description': 'Search objects with these flags set', 'items': {'type': 'str', 'description': 'Search objects with these flags set', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'excludeFlags': {'type': 'list', 'description': 'Exclude objects with these flags set', 'items': {'type': 'str', 'description': 'Exclude objects with these flags set', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True, 'xml': {'attribute': True}}, 'lastUpdatedTimestamp': {'type': 'int', 'description': 'Match only with events marked with a last updated time greater or equal to this.'}, 'indexStartTime': {'type': 'int', 'description': 'Earliest created time of the indices searched.', 'minimum': 0}, 'indexEndTime': {'type': 'int', 'description': 'Last created time of the indices searched.', 'minimum': 0}, 'destinationIP': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'sourceIP': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'ip': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'destinationPort': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'sourcePort': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'port': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'minSeverity': {'type': 'str', 'enum': ['low', 'medium', 'high', 'critical']}, 'maxSeverity': {'type': 'str', 'enum': ['low', 'medium', 'high', 'critical']}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search for NIDS events', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'attackInfo': {'type': 'object', 'description': 'Information on the attack type for the event', 'properties': {'alarmDescription': {'type': 'string'}, 'alarmID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryName': {'type': 'string'}, 'signature': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'User, or agent, generated comments for the event', 'items': {'type': 'object', 'description': 'User, or agent, generated comments for the event', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'count': {'type': 'integer', 'format': 'int32', 'description': 'Number of observations of this event, always 1 for NIDS/RAW events'}, 'customerInfo': {'type': 'object', 'description': 'The customer information related to the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'destination': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'destinationAddress': {'type': 'string', 'writeOnly': True}, 'destinationAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'destinationPort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'domain': {'type': 'object', 'description': 'The Fully Qualified Domain Name', 'properties': {'fqdn': {'type': 'string'}}}, 'engineTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the event was received by the engine'}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'xml': {'attribute': True}}, 'intruderAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'location': {'type': 'object', 'description': 'Information on the location of the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Dynamic list of properties related to the event'}, 'description': 'Dynamic list of properties related to the event'}, 'protocolID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the protocol used in the event'}, 'sensor': {'type': 'object', 'description': 'Information on sensor that observed the event.', 'properties': {'hostIpAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'hostIpString': {'type': 'string'}, 'hostName': {'type': 'string'}, 'sensorID': {'type': 'integer', 'format': 'int64'}}}, 'severity': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'source': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'sourceAddress': {'type': 'string', 'writeOnly': True}, 'sourceAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'sourcePort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time the event happened.'}, 'uri': {'type': 'string', 'description': 'URI of the event'}, 'victimAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'attackInfo': {'type': 'object', 'description': 'Information on the attack type for the event', 'properties': {'alarmDescription': {'type': 'string'}, 'alarmID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryName': {'type': 'string'}, 'signature': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'User, or agent, generated comments for the event', 'items': {'type': 'object', 'description': 'User, or agent, generated comments for the event', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'count': {'type': 'integer', 'format': 'int32', 'description': 'Number of observations of this event, always 1 for NIDS/RAW events'}, 'customerInfo': {'type': 'object', 'description': 'The customer information related to the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'destination': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'destinationAddress': {'type': 'string', 'writeOnly': True}, 'destinationAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'destinationPort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'domain': {'type': 'object', 'description': 'The Fully Qualified Domain Name', 'properties': {'fqdn': {'type': 'string'}}}, 'engineTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the event was received by the engine'}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'xml': {'attribute': True}}, 'intruderAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'location': {'type': 'object', 'description': 'Information on the location of the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Dynamic list of properties related to the event'}, 'description': 'Dynamic list of properties related to the event'}, 'protocolID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the protocol used in the event'}, 'sensor': {'type': 'object', 'description': 'Information on sensor that observed the event.', 'properties': {'hostIpAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'hostIpString': {'type': 'string'}, 'hostName': {'type': 'string'}, 'sensorID': {'type': 'integer', 'format': 'int64'}}}, 'severity': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'source': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'sourceAddress': {'type': 'string', 'writeOnly': True}, 'sourceAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'sourcePort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time the event happened.'}, 'uri': {'type': 'string', 'description': 'URI of the event'}, 'victimAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}}}}}}}, 'application/jsonl': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'attackInfo': {'type': 'object', 'description': 'Information on the attack type for the event', 'properties': {'alarmDescription': {'type': 'string'}, 'alarmID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryName': {'type': 'string'}, 'signature': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'User, or agent, generated comments for the event', 'items': {'type': 'object', 'description': 'User, or agent, generated comments for the event', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'count': {'type': 'integer', 'format': 'int32', 'description': 'Number of observations of this event, always 1 for NIDS/RAW events'}, 'customerInfo': {'type': 'object', 'description': 'The customer information related to the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'destination': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'destinationAddress': {'type': 'string', 'writeOnly': True}, 'destinationAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'destinationPort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'domain': {'type': 'object', 'description': 'The Fully Qualified Domain Name', 'properties': {'fqdn': {'type': 'string'}}}, 'engineTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the event was received by the engine'}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'xml': {'attribute': True}}, 'intruderAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'location': {'type': 'object', 'description': 'Information on the location of the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Dynamic list of properties related to the event'}, 'description': 'Dynamic list of properties related to the event'}, 'protocolID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the protocol used in the event'}, 'sensor': {'type': 'object', 'description': 'Information on sensor that observed the event.', 'properties': {'hostIpAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'hostIpString': {'type': 'string'}, 'hostName': {'type': 'string'}, 'sensorID': {'type': 'integer', 'format': 'int64'}}}, 'severity': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'source': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'sourceAddress': {'type': 'string', 'writeOnly': True}, 'sourceAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'sourcePort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time the event happened.'}, 'uri': {'type': 'string', 'description': 'URI of the event'}, 'victimAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/jsonl': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}, 'application/jsonl': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/jsonl': {}}}}, 'x-Argus-Required-Permissions': ['eventLookup'], 'x-Argus-ApiStatus': 'PUBLIC'}
list_nids_events = {'tags': ['events/v1'], 'summary': 'Simple search for NIDS events (PUBLIC)', 'description': '', 'operationId': 'listNIDSEvents', 'parameters': [{'name': 'Accept', 'in': 'header', 'schema': {'type': 'string'}}, {'name': 'customerID', 'in': 'query', 'description': 'Limit to customerID', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'signature', 'in': 'query', 'description': 'Limit to signature', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'ip', 'in': 'query', 'description': 'Limit to ip/network', 'schema': {'type': 'list', 'items': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'dict', 'properties': {'address': {'type': 'str', 'xml': {'attribute': True}}, 'host': {'type': 'bool', 'xml': {'attribute': True}}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'uniqueItems': True}, {'name': 'startTimestamp', 'in': 'query', 'description': 'Limit to events after this timestamp (default is last 24 hours).', 'schema': {'type': 'str', 'default': '-24hours'}, 'type': 'str', 'default': '-24hours'}, {'name': 'endTimestamp', 'in': 'query', 'description': 'Limit to events before this timestamp.', 'schema': {'type': 'str', 'default': 'now'}, 'type': 'str', 'default': 'now'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'Simple search for NIDS events', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'attackInfo': {'type': 'object', 'description': 'Information on the attack type for the event', 'properties': {'alarmDescription': {'type': 'string'}, 'alarmID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryName': {'type': 'string'}, 'signature': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'User, or agent, generated comments for the event', 'items': {'type': 'object', 'description': 'User, or agent, generated comments for the event', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'count': {'type': 'integer', 'format': 'int32', 'description': 'Number of observations of this event, always 1 for NIDS/RAW events'}, 'customerInfo': {'type': 'object', 'description': 'The customer information related to the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'destination': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'destinationAddress': {'type': 'string', 'writeOnly': True}, 'destinationAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'destinationPort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'domain': {'type': 'object', 'description': 'The Fully Qualified Domain Name', 'properties': {'fqdn': {'type': 'string'}}}, 'engineTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the event was received by the engine'}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'xml': {'attribute': True}}, 'intruderAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'location': {'type': 'object', 'description': 'Information on the location of the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Dynamic list of properties related to the event'}, 'description': 'Dynamic list of properties related to the event'}, 'protocolID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the protocol used in the event'}, 'sensor': {'type': 'object', 'description': 'Information on sensor that observed the event.', 'properties': {'hostIpAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'hostIpString': {'type': 'string'}, 'hostName': {'type': 'string'}, 'sensorID': {'type': 'integer', 'format': 'int64'}}}, 'severity': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'source': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'sourceAddress': {'type': 'string', 'writeOnly': True}, 'sourceAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'sourcePort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time the event happened.'}, 'uri': {'type': 'string', 'description': 'URI of the event'}, 'victimAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}}}}}}}, 'text/csv': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'attackInfo': {'type': 'object', 'description': 'Information on the attack type for the event', 'properties': {'alarmDescription': {'type': 'string'}, 'alarmID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryName': {'type': 'string'}, 'signature': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'User, or agent, generated comments for the event', 'items': {'type': 'object', 'description': 'User, or agent, generated comments for the event', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'count': {'type': 'integer', 'format': 'int32', 'description': 'Number of observations of this event, always 1 for NIDS/RAW events'}, 'customerInfo': {'type': 'object', 'description': 'The customer information related to the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'destination': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'destinationAddress': {'type': 'string', 'writeOnly': True}, 'destinationAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'destinationPort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'domain': {'type': 'object', 'description': 'The Fully Qualified Domain Name', 'properties': {'fqdn': {'type': 'string'}}}, 'engineTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the event was received by the engine'}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'xml': {'attribute': True}}, 'intruderAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'location': {'type': 'object', 'description': 'Information on the location of the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Dynamic list of properties related to the event'}, 'description': 'Dynamic list of properties related to the event'}, 'protocolID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the protocol used in the event'}, 'sensor': {'type': 'object', 'description': 'Information on sensor that observed the event.', 'properties': {'hostIpAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'hostIpString': {'type': 'string'}, 'hostName': {'type': 'string'}, 'sensorID': {'type': 'integer', 'format': 'int64'}}}, 'severity': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'source': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'sourceAddress': {'type': 'string', 'writeOnly': True}, 'sourceAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'sourcePort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time the event happened.'}, 'uri': {'type': 'string', 'description': 'URI of the event'}, 'victimAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}}}}}}}, 'application/jsonl': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'attackInfo': {'type': 'object', 'description': 'Information on the attack type for the event', 'properties': {'alarmDescription': {'type': 'string'}, 'alarmID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryID': {'type': 'integer', 'format': 'int64'}, 'attackCategoryName': {'type': 'string'}, 'signature': {'type': 'string'}}}, 'comments': {'type': 'array', 'description': 'User, or agent, generated comments for the event', 'items': {'type': 'object', 'description': 'User, or agent, generated comments for the event', 'properties': {'comment': {'type': 'string', 'description': "The comment's text."}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the comment was added.'}, 'user': {'type': 'object', 'description': 'Who added the comment.', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}}}}, 'count': {'type': 'integer', 'format': 'int32', 'description': 'Number of observations of this event, always 1 for NIDS/RAW events'}, 'customerInfo': {'type': 'object', 'description': 'The customer information related to the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'destination': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'destinationAddress': {'type': 'string', 'writeOnly': True}, 'destinationAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'destinationPort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'domain': {'type': 'object', 'description': 'The Fully Qualified Domain Name', 'properties': {'fqdn': {'type': 'string'}}}, 'engineTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the event was received by the engine'}, 'flags': {'type': 'array', 'items': {'type': 'string', 'enum': ['ESTABLISHED', 'BLOCKED', 'SNAPSHOT', 'FINALIZED', 'SOURCE_IS_CUSTOMERNET', 'DESTINATION_IS_CUSTOMERNET', 'SOURCE_IS_PARTIAL_CUSTOMERNET', 'DESTINATION_IS_PARTIAL_CUSTOMERNET', 'INTRUDER_IS_CUSTOMERNET', 'VICTIM_IS_CUSTOMERNET', 'INTRUDER_IS_PARTIAL_CUSTOMERNET', 'VICTIM_IS_PARTIAL_CUSTOMERNET', 'PARTIALLY_BLOCKED', 'FALSE_POSITIVE', 'NOT_A_THREAT', 'TUNING_CANDIDATE', 'NOTIFIED', 'PARTIALLY_NOTIFIED', 'FOLLOWUP', 'IDENTIFIED_THREAT', 'THREAT_CANDIDATE', 'ACKNOWLEDGED', 'PARTIALLY_ACKNOWLEDGED', 'SEVERITY_ADJUSTED', 'COMMENTED', 'FILTERED', 'CHECKED', 'INCOMPLETE_DETAILS', 'AGGREGATED_BASE_EVENT', 'REMOTE_STORAGE', 'CUSTOM_SOURCE_AGGREGATION', 'CUSTOM_DESTINATION_AGGREGATION', 'CUSTOM_INTRUDER_AGGREGATION', 'CUSTOM_VICTIM_AGGREGATION', 'HAS_DETAILS', 'HAS_PAYLOAD', 'HAS_PCAP', 'ASSOCIATED_TO_CASE_BY_FILTER', 'SEVERITY_INCREASED_BY_FILTER', 'SEVERITY_REDUCED_BY_FILTER', 'CREATED_BY_ANALYSIS_FILTER', 'EXTEND_EVENT_TTL', 'INITIAL_TUNING', 'POST_ANALYSIS', 'PARTIAL_SSL_TERMINATED', 'SSL_TERMINATED', 'AUTO_REPORT', 'MISSING_TIMESTAMP', 'CLOCK_OUT_OF_SYNC', 'DROP_ANALYSIS', 'ESCALATED_BY_REPUTATION', 'HAS_SAMPLE', 'STORE_EVENT', 'STORE_AGGREGATED', 'SOURCE_IS_MANAGED_BY_SOC', 'DESTINATION_IS_MANAGED_BY_SOC', 'HANDLED_BY_ANALYST', 'SLA_VIOLATION', 'PAYLOAD_TRUNCATED', 'HAS_STRING_PAYLOAD', 'REASSESSED', 'NOTIFIED_UNPUBLISHED', 'NOTIFIED_DELETED', 'EVENT_FROM_OT_ENVIRONMENT', 'EVENT_FROM_RESTRICTED_IT_ENVIRONMENT']}, 'uniqueItems': True}, 'id': {'type': 'string', 'xml': {'attribute': True}}, 'intruderAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'location': {'type': 'object', 'description': 'Information on the location of the event', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'properties': {'type': 'object', 'additionalProperties': {'type': 'string', 'description': 'Dynamic list of properties related to the event'}, 'description': 'Dynamic list of properties related to the event'}, 'protocolID': {'type': 'integer', 'format': 'int32', 'description': 'The ID of the protocol used in the event'}, 'sensor': {'type': 'object', 'description': 'Information on sensor that observed the event.', 'properties': {'hostIpAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'hostIpString': {'type': 'string'}, 'hostName': {'type': 'string'}, 'sensorID': {'type': 'integer', 'format': 'int64'}}}, 'severity': {'type': 'string', 'enum': ['low', 'medium', 'high', 'critical']}, 'source': {'type': 'object', 'description': 'Information regarding the destination endpoint', 'properties': {'geoLocation': {'type': 'object', 'properties': {'countryCode': {'type': 'string'}, 'countryName': {'type': 'string'}, 'latitude': {'type': 'number', 'format': 'double'}, 'locationName': {'type': 'string'}, 'longitude': {'type': 'number', 'format': 'double'}}}, 'networkAddress': {'type': 'object', 'properties': {'address': {'type': 'string', 'xml': {'attribute': True}}, 'host': {'type': 'boolean', 'xml': {'attribute': True}}, 'ipv6': {'type': 'boolean', 'xml': {'attribute': True}}, 'maskBits': {'type': 'integer', 'format': 'int32'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}}}, 'port': {'type': 'integer', 'format': 'int32'}}}, 'sourceAddress': {'type': 'string', 'writeOnly': True}, 'sourceAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'sourcePort': {'type': 'integer', 'format': 'int32', 'writeOnly': True}, 'timestamp': {'type': 'integer', 'format': 'int64', 'description': 'The time the event happened.'}, 'uri': {'type': 'string', 'description': 'URI of the event'}, 'victimAggregationBits': {'type': 'integer', 'format': 'int32', 'writeOnly': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/jsonl': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}, 'text/csv': {}, 'application/jsonl': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}, 'text/csv': {}, 'application/jsonl': {}}}}, 'x-Argus-Required-Permissions': ['eventLookup'], 'x-Argus-ApiStatus': 'PUBLIC'}