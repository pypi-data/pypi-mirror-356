"""Autogenerated API schema"""
from argus_api import session


get_customer_root_folder = {'tags': ['documents/v1'], 'summary': 'Fetch customer root folder. This endpoint is deprecated, suggest to use /folder/path/meta/?customer=<customer> instead. (PUBLIC)', 'description': '', 'operationId': 'getCustomerRootFolder', 'parameters': [{'name': 'customer', 'in': 'path', 'description': 'ID of customer to fetch root folder for', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch customer root folder. This endpoint is deprecated, suggest to use /folder/path/meta/?customer=<customer> instead.', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accessMode': {'type': 'string', 'description': 'General access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'createdByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was created'}, 'currentUserAccessLevel': {'type': 'string', 'description': 'Access level granted to the user viewing the folder/document', 'enum': ['none', 'folder', 'read', 'write']}, 'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'effectiveAccessMode': {'type': 'string', 'description': 'Effective access mode of the folder/document', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'elementType': {'type': 'string', 'description': "Will be 'folder'", 'enum': ['document', 'folder']}, 'flags': {'type': 'array', 'description': 'Flags assigned to the object.', 'items': {'type': 'string', 'description': 'Flags assigned to the object.', 'enum': ['DELETED', 'ROOT_FOLDER']}, 'uniqueItems': True}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder/document'}, 'lastUpdatedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'When the folder/document was last updated'}, 'name': {'type': 'string', 'description': 'Name of the folder/document'}, 'ownedByUser': {'type': 'object', 'description': 'Who updated the folder/document last', 'properties': {'customer': {'type': 'object', 'properties': {'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}}}, 'customerID': {'type': 'integer', 'format': 'int64'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'type': {'type': 'string', 'description': 'Type of the subject', 'enum': ['user', 'group'], 'readOnly': True}, 'userName': {'type': 'string'}}}, 'parentElements': {'type': 'array', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'items': {'type': 'object', 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder)", 'properties': {'accessMode': {'type': 'string', 'description': 'The configured access mode set on this folder', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'Unique identifier of the folder'}, 'name': {'type': 'string', 'description': 'Name of the folder'}}}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'deprecated': True, 'x-Argus-Required-Permissions': ['viewDocuments'], 'x-Argus-ApiStatus': 'PUBLIC'}