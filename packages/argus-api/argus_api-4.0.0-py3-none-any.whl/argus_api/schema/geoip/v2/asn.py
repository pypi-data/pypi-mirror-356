"""Autogenerated API schema"""
from argus_api import session


get_autonomous_system = {'tags': ['geoip/v2'], 'summary': 'Fetch an autonomous system by ASN or IP (DEV)', 'description': '', 'operationId': 'getAutonomousSystem', 'parameters': [{'name': 'asnOrIP', 'in': 'path', 'description': 'The ASN or IP of the autonomous system to fetch', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}], 'responses': {'default': {'description': 'Fetch an autonomous system by ASN or IP', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'Response model representing an autonomous system', 'properties': {'asn': {'type': 'integer', 'format': 'int64', 'description': 'The autonomous system number'}, 'name': {'type': 'string', 'description': 'The name of the autonomous system'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was removed from the database'}, 'flags': {'type': 'array', 'description': 'Flags defined for the autonomous system', 'items': {'type': 'string', 'description': 'Flags defined for the autonomous system', 'enum': ['deleted']}, 'uniqueItems': True}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAutonomousSystems'], 'x-Argus-ApiStatus': 'DEV'}
get_autonomous_system_networks = {'tags': ['geoip/v2'], 'summary': 'Fetch autonomous system networks for a single autonomous system by ASN or IP (DEV)', 'description': '', 'operationId': 'getAutonomousSystemNetworks', 'parameters': [{'name': 'asnOrIP', 'in': 'path', 'description': 'Identifier of the AS', 'required': True, 'schema': {'type': 'string'}, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit the amount of returned networks', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first $offset networks', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}], 'responses': {'default': {'description': 'Fetch autonomous system networks for a single autonomous system by ASN or IP', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response model representing an autonomous system network', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Argus-specific unique identifier'}, 'autonomousSystem': {'type': 'object', 'description': 'Compact representation of an autonomous system', 'properties': {'asn': {'type': 'integer', 'format': 'int64', 'description': 'The autonomous system number'}, 'name': {'type': 'string', 'description': 'The name of the autonomous system'}}}, 'network': {'type': 'object', 'description': 'Response model representing a network IP', 'properties': {'address': {'type': 'string', 'description': 'Start IP of the network'}, 'mask': {'type': 'integer', 'format': 'int32', 'description': 'Net mask (CIDR)'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was removed from the database'}, 'flags': {'type': 'array', 'description': 'Flags defined for the autonomous system network', 'items': {'type': 'string', 'description': 'Flags defined for the autonomous system network', 'enum': ['deleted']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAutonomousSystems'], 'x-Argus-ApiStatus': 'DEV'}
list_autonomous_system_networks = {'tags': ['geoip/v2'], 'summary': 'Search for autonomous system networks with query parameters (DEV)', 'description': '', 'operationId': 'listAutonomousSystemNetworks', 'parameters': [{'name': 'asn', 'in': 'query', 'description': 'Only return networks matching the given ASNs', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'ip', 'in': 'query', 'description': 'Only return networks where one of the provided IPs belongs to the network', 'schema': {'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'string'}, 'uniqueItems': True}, {'name': 'limit', 'in': 'query', 'description': 'Limit the amount of returned networks', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first $offset networks', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'If true include networks marked as deleted', 'schema': {'type': 'bool', 'default': 'false', 'enum': ['true', 'false']}, 'type': 'bool', 'default': 'false', 'enum': ['true', 'false']}, {'name': 'sortBy', 'in': 'query', 'description': "Sort the returned entries. Prefix with '-' to sort descending", 'schema': {'type': 'list', 'default': 'ip', 'enum': ['asn', 'ip', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-ip', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp'], 'items': {'type': 'string'}}, 'type': 'list', 'default': 'ip', 'enum': ['asn', 'ip', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-ip', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp'], 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Search for autonomous system networks with query parameters', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response model representing an autonomous system network', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Argus-specific unique identifier'}, 'autonomousSystem': {'type': 'object', 'description': 'Compact representation of an autonomous system', 'properties': {'asn': {'type': 'integer', 'format': 'int64', 'description': 'The autonomous system number'}, 'name': {'type': 'string', 'description': 'The name of the autonomous system'}}}, 'network': {'type': 'object', 'description': 'Response model representing a network IP', 'properties': {'address': {'type': 'string', 'description': 'Start IP of the network'}, 'mask': {'type': 'integer', 'format': 'int32', 'description': 'Net mask (CIDR)'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was removed from the database'}, 'flags': {'type': 'array', 'description': 'Flags defined for the autonomous system network', 'items': {'type': 'string', 'description': 'Flags defined for the autonomous system network', 'enum': ['deleted']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAutonomousSystems'], 'x-Argus-ApiStatus': 'DEV'}
list_autonomous_systems = {'tags': ['geoip/v2'], 'summary': 'Search for autonomous system with query parameters (DEV)', 'description': '', 'operationId': 'listAutonomousSystems', 'parameters': [{'name': 'asn', 'in': 'query', 'description': 'Only return AS matching the given ASNs', 'schema': {'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, 'type': 'list', 'items': {'type': 'int'}, 'uniqueItems': True}, {'name': 'limit', 'in': 'query', 'description': 'Limit the amount of returned AS', 'schema': {'type': 'int', 'default': '25', 'minimum': 0}, 'type': 'int', 'default': '25', 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first $offset AS', 'schema': {'type': 'int', 'default': '0', 'minimum': 0}, 'type': 'int', 'default': '0', 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'If true include AS marked as deleted', 'schema': {'type': 'bool', 'default': 'false', 'enum': ['true', 'false']}, 'type': 'bool', 'default': 'false', 'enum': ['true', 'false']}, {'name': 'sortBy', 'in': 'query', 'description': "Sort the returned entries. Prefix with '-' to sort descending", 'schema': {'type': 'list', 'default': 'asn', 'enum': ['asn', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-name', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp'], 'items': {'type': 'string'}}, 'type': 'list', 'default': 'asn', 'enum': ['asn', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-name', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp'], 'items': {'type': 'string'}}], 'responses': {'default': {'description': 'Search for autonomous system with query parameters', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response model representing an autonomous system', 'properties': {'asn': {'type': 'integer', 'format': 'int64', 'description': 'The autonomous system number'}, 'name': {'type': 'string', 'description': 'The name of the autonomous system'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was removed from the database'}, 'flags': {'type': 'array', 'description': 'Flags defined for the autonomous system', 'items': {'type': 'string', 'description': 'Flags defined for the autonomous system', 'enum': ['deleted']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAutonomousSystems'], 'x-Argus-ApiStatus': 'DEV'}
search_autonomous_system_networks = {'tags': ['geoip/v2'], 'summary': 'Search for autonomous system networks with an AutonomousSystemNetworkSearchRequest (DEV)', 'description': '', 'operationId': 'searchAutonomousSystemNetworks', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request used for autonomous system network search', 'properties': {'asn': {'type': 'list', 'description': 'Only return networks matching the given ASNs', 'items': {'type': 'int', 'description': 'Only return networks matching the given ASNs'}, 'uniqueItems': True}, 'ip': {'type': 'list', 'description': 'Only return networks where one of the provided IPs belongs to the network [format:ip]', 'items': {'type': 'str', 'description': 'Only return networks where one of the provided IPs belongs to the network'}, 'uniqueItems': True, 'x-Argus-Format': 'ip'}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit the amount of returned networks', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'Skip the first $offset networks', 'minimum': 0}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'If true include networks marked as deleted'}, 'sortBy': {'type': 'list', 'default': 'ip', 'description': "Sort the returned entries. Prefix with '-' to sort descending", 'items': {'type': 'str', 'default': 'ip', 'description': "Sort the returned entries. Prefix with '-' to sort descending", 'enum': ['asn', 'ip', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-ip', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search for autonomous system networks with an AutonomousSystemNetworkSearchRequest', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response model representing an autonomous system network', 'properties': {'id': {'type': 'string', 'format': 'uuid', 'description': 'Argus-specific unique identifier'}, 'autonomousSystem': {'type': 'object', 'description': 'Compact representation of an autonomous system', 'properties': {'asn': {'type': 'integer', 'format': 'int64', 'description': 'The autonomous system number'}, 'name': {'type': 'string', 'description': 'The name of the autonomous system'}}}, 'network': {'type': 'object', 'description': 'Response model representing a network IP', 'properties': {'address': {'type': 'string', 'description': 'Start IP of the network'}, 'mask': {'type': 'integer', 'format': 'int32', 'description': 'Net mask (CIDR)'}}}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the network was removed from the database'}, 'flags': {'type': 'array', 'description': 'Flags defined for the autonomous system network', 'items': {'type': 'string', 'description': 'Flags defined for the autonomous system network', 'enum': ['deleted']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAutonomousSystems'], 'x-Argus-ApiStatus': 'DEV'}
search_autonomous_systems = {'tags': ['geoip/v2'], 'summary': 'Search for autonomous systems with an AutonomousSystemSearchRequest (DEV)', 'description': '', 'operationId': 'searchAutonomousSystems', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'Request used for autonomous system search', 'properties': {'asn': {'type': 'list', 'description': 'Only return AS matching the given ASNs', 'items': {'type': 'int', 'description': 'Only return AS matching the given ASNs'}, 'uniqueItems': True}, 'limit': {'type': 'int', 'default': 25, 'description': 'Limit the amount of returned AS', 'minimum': 0}, 'offset': {'type': 'int', 'default': 0, 'description': 'Skip the first $offset AS', 'minimum': 0}, 'includeDeleted': {'type': 'bool', 'default': False, 'description': 'If true include AS marked as deleted'}, 'sortBy': {'type': 'list', 'default': 'asn', 'description': "Sort the returned entries. Prefix with '-' to sort descending", 'items': {'type': 'str', 'default': 'asn', 'description': "Sort the returned entries. Prefix with '-' to sort descending", 'enum': ['asn', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-name', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}}}}}}, 'required': True}, 'responses': {'default': {'description': 'Search for autonomous systems with an AutonomousSystemSearchRequest', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'array', 'items': {'type': 'object', 'description': 'Response model representing an autonomous system', 'properties': {'asn': {'type': 'integer', 'format': 'int64', 'description': 'The autonomous system number'}, 'name': {'type': 'string', 'description': 'The name of the autonomous system'}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'description': 'Timestamp when the AS was removed from the database'}, 'flags': {'type': 'array', 'description': 'Flags defined for the autonomous system', 'items': {'type': 'string', 'description': 'Flags defined for the autonomous system', 'enum': ['deleted']}, 'uniqueItems': True}}}}}}}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation error', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewAutonomousSystems'], 'x-Argus-ApiStatus': 'DEV'}