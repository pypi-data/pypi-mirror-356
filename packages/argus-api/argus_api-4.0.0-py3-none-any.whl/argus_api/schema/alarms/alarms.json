{
  "openapi": "3.1.0",
  "info": {
    "title": "Argus API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.mnemonic.no"
    }
  ],
  "security": [
    {
      "ApiKeyScheme": []
    }
  ],
  "paths": {
    "/alarms/v1/alarm/{id}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get an alarm by ID (PUBLIC)",
        "description": "",
        "operationId": "getAlarmById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the alarm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get an alarm by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.Alarm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAlarm"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Update an existing alarm (INTERNAL)",
        "description": "",
        "operationId": "updateAlarm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the alarm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.service.request.alarm.AlarmUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Update an existing alarm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.Alarm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "updateAlarm"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Delete an existing alarm (INTERNAL)",
        "description": "",
        "operationId": "deleteAlarm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the alarm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Delete an existing alarm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.Alarm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "deleteAlarm"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/alarms/v1/alarm": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all alarms (PUBLIC)",
        "description": "",
        "operationId": "getAlarms",
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "Search by keywords",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "keywordMatch",
            "in": "query",
            "description": "Set match strategy for keyword search",
            "schema": {
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "any"
              ]
            }
          },
          {
            "name": "keywordField",
            "in": "query",
            "description": "Set field strategy for keyword search",
            "schema": {
              "type": "array",
              "default": "all",
              "items": {
                "type": "string",
                "enum": [
                  "reference",
                  "description",
                  "label",
                  "signature",
                  "attackIdentifier",
                  "id",
                  "shortName",
                  "all"
                ]
              },
              "uniqueItems": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of alarms",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned alarms",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get all alarms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.Alarm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAlarm"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Add a new alarm (INTERNAL)",
        "description": "",
        "operationId": "addAlarm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.service.request.alarm.AlarmAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Add a new alarm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.Alarm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addAlarm"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/alarms/v1/alarm/{idOrShortName}/mitre": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "List relationships between an alarm and MITRE categories (DEV)",
        "description": "",
        "operationId": "listAlarmMitreRelationships",
        "parameters": [
          {
            "name": "idOrShortName",
            "in": "path",
            "description": "ID or short name of the alarm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryType",
            "in": "query",
            "description": "Type(s) of the MITRE categories (all by default)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tactic",
                  "technique",
                  "subtechnique",
                  "mitigation",
                  "threatActor",
                  "malware",
                  "tool",
                  "campaign"
                ]
              },
              "uniqueItems": true
            }
          },
          {
            "name": "categoryModel",
            "in": "query",
            "description": "The threat model(s) of the MITRE categories (all by default)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "capec",
                  "enterprise",
                  "ics",
                  "mobile",
                  "preAttack"
                ]
              },
              "uniqueItems": true
            }
          },
          {
            "name": "categoryVersion",
            "in": "query",
            "description": "The version(s) of the MITRE categories (all by default)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "To include deleted relationships or not (not included by default)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field(s) to sort results by (without sign is ascending, with '-' sign is descending)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max amount of items to return (25 by default, 0 means no limit)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning (0 by default)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List relationships between an alarm and MITRE categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAlarm",
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Adds a new relationship between an alarm and a MITRE category (DEV)",
        "description": "",
        "operationId": "addAlarmMitreRelationship",
        "parameters": [
          {
            "name": "idOrShortName",
            "in": "path",
            "description": "ID or short name of the alarm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.AlarmMitreRelationshipAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Adds a new relationship between an alarm and a MITRE category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addAlarmMitreRelationship"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/alarm/mitre/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Searches for relationships between alarms and MITRE categories (DEV)",
        "description": "",
        "operationId": "searchAlarmMitreRelationships",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.AlarmMitreRelationshipSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Searches for relationships between alarms and MITRE categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAlarm",
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/alarm/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all alarms matching a given search criteria (PUBLIC)",
        "description": "",
        "operationId": "searchAlarms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.criteria.event.AlarmSearchCriteria"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Get all alarms matching a given search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.Alarm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAlarm"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      }
    },
    "/alarms/v1/category": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all attack categories (PUBLIC)",
        "description": "",
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of attack categories",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned attack categories",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "Filter attack categories by keywords",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "keywordMatch",
            "in": "query",
            "description": "Set match strategy for keyword search",
            "schema": {
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "any"
              ]
            }
          },
          {
            "name": "keywordField",
            "in": "query",
            "description": "Set field strategy for keyword search (default value is 'name' in order to be compatible with the old manual implementation)",
            "schema": {
              "type": "array",
              "default": "name",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "shortName",
                  "name",
                  "info",
                  "all"
                ]
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get all attack categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.AttackCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAttackCategory"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Add a new attack category (INTERNAL)",
        "description": "",
        "operationId": "addCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.service.request.alarm.AttackCategoryAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Add a new attack category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.AttackCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addAttackCategory"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/alarms/v1/category/{id}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get an attack category by ID (PUBLIC)",
        "description": "",
        "operationId": "getCategoryByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the attack category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get an attack category by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.AttackCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "deprecated": true,
        "x-Argus-Required-Permissions": [
          "viewAttackCategory"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Update an existing attack category (INTERNAL)",
        "description": "",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the attack category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.service.request.alarm.AttackCategoryUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Update an existing attack category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.AttackCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "updateAttackCategory"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Delete an existing attack category (INTERNAL)",
        "description": "",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the attack category",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Delete an existing attack category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.AttackCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "deleteAttackCategory"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/alarms/v1/category/{idOrShortName}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get an attack category by ID or shortName (PUBLIC)",
        "description": "",
        "operationId": "getCategoryByIdOrShortName",
        "parameters": [
          {
            "name": "idOrShortName",
            "in": "path",
            "description": "ID or shortName of the attack category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get an attack category by ID or shortName",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.AttackCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAttackCategory"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      }
    },
    "/alarms/v1/category/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all attack categories matching a given search criteria (PUBLIC)",
        "description": "",
        "operationId": "searchCategories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.criteria.event.AttackCategorySearchCriteria"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Get all attack categories matching a given search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.AttackCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAttackCategory"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      }
    },
    "/alarms/v1/signature": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all signatures within your access scope. Alarm data is included if signature is mapped. (PUBLIC)",
        "description": "",
        "operationId": "getSignatures",
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "Search by keywords",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "keywordMatch",
            "in": "query",
            "description": "Set match strategy for keyword search",
            "schema": {
              "type": "string",
              "default": "all",
              "enum": [
                "all",
                "any"
              ]
            }
          },
          {
            "name": "keywordField",
            "in": "query",
            "description": "Set field strategy for keyword search",
            "schema": {
              "type": "array",
              "default": "all",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "signature",
                  "signatureMessage",
                  "all"
                ]
              },
              "uniqueItems": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of signatures",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned signatures",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "25",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get all signatures within your access scope. Alarm data is included if signature is mapped.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.AlarmMapping"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAlarmMapping"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Delete signatures. They must not be mapped to any alarms. (INTERNAL)",
        "description": "",
        "operationId": "deleteSignatures",
        "parameters": [
          {
            "name": "signature",
            "in": "query",
            "description": "Signatures to delete",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Delete signatures. They must not be mapped to any alarms.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.AlarmMapping"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "deleteAlarmMapping"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/alarms/v1/signature/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all signatures matching a given search criteria within your access scope (PUBLIC)",
        "description": "",
        "operationId": "searchSignatures",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.criteria.event.AlarmMappingSearchCriteria"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Get all signatures matching a given search criteria within your access scope",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.jargus.model.AlarmMapping"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewAlarmMapping"
        ],
        "x-Argus-ApiStatus": "PUBLIC"
      }
    },
    "/alarms/v1/mitre": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "List MITRE categories (DEV)",
        "description": "",
        "operationId": "listMitreCategories",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type(s) of the included MITRE categories (all by default)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tactic",
                  "technique",
                  "subtechnique",
                  "mitigation",
                  "threatActor",
                  "malware",
                  "tool",
                  "campaign"
                ]
              },
              "uniqueItems": true
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Threat model(s) of the included MITRE categories (all by default)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "capec",
                  "enterprise",
                  "ics",
                  "mobile",
                  "preAttack"
                ]
              },
              "uniqueItems": true
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version(s) of the included MITRE categories (all by default)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Whether to include deleted MITRE categories or not (not included by default)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeDeprecated",
            "in": "query",
            "description": "Whether to include deprecated MITRE categories or not (not included by default)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeRelationships",
            "in": "query",
            "description": "Whether to include MITRE category relationships or not (not included by default)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field(s) to sort results by (without sign is ascending, with '-' sign is descending)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max amount of items to return (25 by default, 0 means no limit)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning (0 by default)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List MITRE categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.alarm.spi.response.MitreCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Adds a new MITRE category (DEV)",
        "description": "",
        "operationId": "addMitreCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.MitreCategoryAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Adds a new MITRE category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/mitre/{idOrExtId}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Gets an existing MITRE category by ID or external ID (DEV)",
        "description": "",
        "operationId": "getMitreCategory",
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category (external ID requires additional query parameters: model, version)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Which threat model to use with external ID",
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeRelationships",
            "in": "query",
            "description": "Whether to include MITRE category relationships or not (not included by default)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Gets an existing MITRE category by ID or external ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Updates an existing MITRE category (DEV)",
        "description": "",
        "operationId": "updateMitreCategory",
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category (external ID requires additional query parameters: model, version)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Which threat model to use with external ID",
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.MitreCategoryUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Updates an existing MITRE category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategory"
                }
              }
            }
          },
          "220": {
            "description": "No update was performed",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "updateMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Deletes an existing MITRE category (DEV)",
        "description": "",
        "operationId": "deleteMitreCategory",
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category (external ID requires additional query parameters: model, version)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Which threat model to use with external ID",
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Deletes an existing MITRE category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "deleteMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/mitre/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Searches for MITRE categories (DEV)",
        "description": "",
        "operationId": "searchMitreCategories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.MitreCategorySearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Searches for MITRE categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.alarm.spi.response.MitreCategory"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/mitre/{idOrExtId}/relations": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "List MITRE category relationships (DEV)",
        "description": "",
        "operationId": "listMitreCategoryRelationships",
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the source or target MITRE category (external ID requires additional query parameters: model, version)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Which threat model to use with external ID of the MITRE category",
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID of the MITRE category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Whether to include deleted MITRE category relationships or not (not included by default)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field(s) to sort results by (without sign is ascending, with '-' sign is descending)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max amount of items to return (25 by default, 0 means no limit)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning (0 by default)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List MITRE category relationships",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Adds a new MITRE category relationship (DEV)",
        "description": "",
        "operationId": "addMitreCategoryRelationship",
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the source MITRE category (external ID requires an additional query parameter: sourceCategoryModel; version is already part of the request payload)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sourceCategoryModel",
            "in": "query",
            "description": "Which threat model to use with external ID of the source MITRE category",
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.MitreCategoryRelationshipAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Adds a new MITRE category relationship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addMitreCategoryRelationship"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/mitre/relations/{idOrExtId}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Gets an existing MITRE category relationship by ID or external ID (DEV)",
        "description": "",
        "operationId": "getMitreCategoryRelationship",
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category relationship (external ID requires an additional query parameter: version)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Gets an existing MITRE category relationship by ID or external ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Updates an existing MITRE category relationship (DEV)",
        "description": "",
        "operationId": "updateMitreCategoryRelationship",
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category relationship (external ID requires an additional query parameter: version)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.MitreCategoryRelationshipUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Updates an existing MITRE category relationship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship"
                }
              }
            }
          },
          "220": {
            "description": "No update was performed",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "updateMitreCategoryRelationship"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Deletes an existing MITRE category relationship (DEV)",
        "description": "",
        "operationId": "deleteMitreCategoryRelationship",
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category relationship (external ID requires an additional query parameter: version)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Deletes an existing MITRE category relationship",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "deleteMitreCategoryRelationship"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/mitre/model/{model}/versions/{version}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Gets MITRE model version info by model and version (DEV)",
        "description": "",
        "operationId": "getMitreModelVersion",
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "description": "Threat model of the MITRE category",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the MITRE ATT&CK release",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Gets MITRE model version info by model and version",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreModelVersion"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Adds or updates MITRE model version info (DEV)",
        "description": "",
        "operationId": "addOrUpdateMitreModelVersion",
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "description": "Threat model of the MITRE category",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the MITRE ATT&CK release",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.MitreModelVersionAddOrUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Adds or updates MITRE model version info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.MitreModelVersion"
                }
              }
            }
          },
          "220": {
            "description": "No update was performed",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "updateMitreModelVersion"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/mitre/model/{model}/versions": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Lists available MITRE model versions' info by model (DEV)",
        "description": "",
        "operationId": "listMitreModelVersions",
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "description": "Threat model of the MITRE category",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Lists available MITRE model versions' info by model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-list-no.mnemonic.services.alarm.spi.response.MitreModelVersion"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "viewMitreCategory"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/alarm/{id}/comment": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Add a comment to an alarm (INTERNAL)",
        "description": "",
        "operationId": "addAlarmComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the alarm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.service.request.alarm.AlarmCommentAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Add a comment to an alarm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.Comment"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addAlarmComment"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/alarms/v1/alarm/{id}/comment/{timestamp}": {
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Delete an existing comment from an alarm (INTERNAL)",
        "description": "",
        "operationId": "deleteAlarmComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the alarm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "timestamp",
            "in": "path",
            "description": "Timestamp of the comment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Delete an existing comment from an alarm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.Comment"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "removeAlarmComment"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/alarms/v1/alarm/{idOrShortName}/mitre/{idOrExtId}": {
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Deletes an existing relationship between an alarm and a MITRE category (DEV)",
        "description": "",
        "operationId": "deleteAlarmMitreRelationship",
        "parameters": [
          {
            "name": "idOrShortName",
            "in": "path",
            "description": "ID or short name of the alarm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category (external ID requires additional query parameters: categoryModel, categoryVersion)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "categoryModel",
            "in": "query",
            "description": "Which threat model to use with external ID of the MITRE category",
            "schema": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            }
          },
          {
            "name": "categoryVersion",
            "in": "query",
            "description": "Which version to use with external ID of the MITRE category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Deletes an existing relationship between an alarm and a MITRE category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Object not found",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "deleteAlarmMitreRelationship"
        ],
        "x-Argus-ApiStatus": "DEV"
      }
    },
    "/alarms/v1/alarm/{id}/map": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Map signatures to an alarm (INTERNAL)",
        "description": "",
        "operationId": "mapToAlarm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the alarm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/no.mnemonic.jargus.service.request.alarm.AlarmMappingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Map signatures to an alarm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.Alarm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "addAlarmMapping"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    },
    "/alarms/v1/alarm/{id}/unmap": {
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Unmap signatures from an alarm (INTERNAL)",
        "description": "",
        "operationId": "unmap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the alarm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signatures to unmap",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unmap signatures from an alarm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultStash-no.mnemonic.jargus.model.Alarm"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {}
            }
          },
          "412": {
            "description": "Validation error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-Argus-Required-Permissions": [
          "removeAlarmMapping"
        ],
        "x-Argus-ApiStatus": "INTERNAL"
      }
    }
  },
  "components": {
    "schemas": {
      "no.mnemonic.jargus.model.Alarm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "shortName": {
            "type": "string",
            "description": "Short name of the alarm."
          },
          "attackCategory": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.AttackCategory"
          },
          "mappings": {
            "type": "array",
            "description": "Signatures mapped to the alarm.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.AlarmMapping"
            },
            "uniqueItems": true
          },
          "comments": {
            "type": "array",
            "description": "Comments added to the alarm.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.Comment"
            }
          },
          "references": {
            "type": "array",
            "description": "Further references to the alarm.",
            "items": {
              "type": "string",
              "description": "Further references to the alarm."
            },
            "uniqueItems": true
          },
          "labels": {
            "type": "array",
            "description": "Label assigned to the alarm.",
            "items": {
              "type": "string",
              "description": "Label assigned to the alarm."
            },
            "uniqueItems": true
          },
          "info": {
            "type": "string",
            "description": "Verbose information about the alarm.  (@SafeHTML)",
            "x-safe-html": true
          },
          "description": {
            "type": "string",
            "description": "Short description about the alarm."
          },
          "internalReference": {
            "type": "string",
            "description": "An internal link with info about the alarm. Will be omitted if user does not have required permissions"
          },
          "internalInformation": {
            "type": "string",
            "description": "Internal information about handling the alarm. Describes how the alarm should be handled by SOC.  (@SafeHTML)",
            "x-safe-html": true
          },
          "links": {
            "type": "array",
            "description": "Links added to the alarm.",
            "items": {
              "type": "string",
              "description": "Links added to the alarm."
            },
            "uniqueItems": true
          },
          "createdByUser": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.UserInfo"
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the alarm was created."
          },
          "lastUpdatedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.UserInfo"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the alarm was last updated."
          },
          "lastCheckedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.UserInfo"
          },
          "lastCheckTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the alarm was last checked."
          },
          "nextCheckTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the alarm should be checked next."
          },
          "flag": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          },
          "flags": {
            "type": "array",
            "description": "Flags assigned to the object.",
            "items": {
              "type": "string",
              "description": "Flags assigned to the object.",
              "enum": [
                "DISABLED",
                "DELETED"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.jargus.model.AlarmMapping": {
        "type": "object",
        "description": "Signatures mapped to the alarm.",
        "properties": {
          "alarm": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.Alarm"
          },
          "lastUpdatedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.UserInfo"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the mapping was last updated."
          },
          "comments": {
            "type": "array",
            "description": "Comments added to the mapping.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.Comment"
            }
          },
          "mappedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the signature was mapped."
          },
          "mappedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.UserInfo"
          },
          "firstTriggeredTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the signature was first triggered."
          },
          "lastTriggeredTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the signature was last triggered."
          },
          "triggerAmount": {
            "type": "integer",
            "format": "int64",
            "description": "How often the signature was triggered."
          },
          "signature": {
            "type": "string",
            "description": "Signature mapped to alarm."
          },
          "flag": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          },
          "flags": {
            "type": "array",
            "description": "Flags assigned to the object.",
            "items": {
              "type": "string",
              "description": "Flags assigned to the object.",
              "enum": [
                "DELETED",
                "DEFAULT_BLOCK",
                "SNORT",
                "ISS_SIGNATURE"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.jargus.model.AttackCategory": {
        "type": "object",
        "description": "Category of the alarm.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "shortName": {
            "type": "string",
            "description": "Short name of the category."
          },
          "info": {
            "type": "string",
            "description": "Short information about the category."
          },
          "name": {
            "type": "string",
            "description": "Name of the category."
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the category created."
          },
          "createdByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the category updated."
          },
          "lastUpdatedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "deletedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the category deleted."
          },
          "deletedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "flag": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          },
          "flags": {
            "type": "array",
            "description": "Flags assigned to the object.",
            "items": {
              "type": "string",
              "description": "Flags assigned to the object.",
              "enum": [
                "DISABLED",
                "RECONNAISSANCE",
                "DELETED"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.jargus.model.Comment": {
        "type": "object",
        "description": "Comments added to the mapping.",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When the comment was added."
          },
          "user": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.UserInfo"
          },
          "comment": {
            "type": "string",
            "description": "The comment's text."
          }
        }
      },
      "no.mnemonic.jargus.model.CustomerInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "domain": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.DomainInfo"
          }
        }
      },
      "no.mnemonic.jargus.model.DomainInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "no.mnemonic.jargus.model.UserInfo": {
        "type": "object",
        "description": "Who mapped the signature.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "customer": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.CustomerInfo"
          },
          "domain": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.DomainInfo"
          },
          "userName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "customerID": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "Type of the subject",
            "enum": [
              "user",
              "group"
            ],
            "readOnly": true
          }
        }
      },
      "no.mnemonic.services.argus.common.spi.response.CustomerInfo": {
        "type": "object",
        "description": "SPI CustomerInfo",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the response object."
          },
          "name": {
            "type": "string",
            "description": "Name of the customer."
          },
          "shortName": {
            "type": "string",
            "description": "Shortname of the customer."
          },
          "domain": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.DomainInfo"
          }
        }
      },
      "no.mnemonic.services.argus.common.spi.response.DomainInfo": {
        "type": "object",
        "description": "SPI DomainInfo",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the response object."
          },
          "name": {
            "type": "string",
            "description": "Name of the domain."
          }
        }
      },
      "no.mnemonic.services.argus.common.spi.response.UserInfo": {
        "type": "object",
        "description": "SPI UserInfo",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the response object."
          },
          "shortName": {
            "type": "string",
            "description": "The subject's short name"
          },
          "name": {
            "type": "string",
            "description": "The subject's name"
          },
          "domain": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.DomainInfo"
          },
          "customer": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
          },
          "flags": {
            "type": "array",
            "description": "The subject's flags",
            "items": {
              "type": "string",
              "description": "The subject's flags",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "type": {
            "type": "string",
            "description": "Type of the subject",
            "enum": [
              "user",
              "group"
            ],
            "readOnly": true
          }
        }
      },
      "no.mnemonic.services.alarm.spi.response.AlarmInfo": {
        "type": "object",
        "description": "Info object of the alarm that is part of the relationship",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the response object."
          },
          "shortName": {
            "type": "string",
            "description": "Short name of the alarm."
          },
          "description": {
            "type": "string",
            "description": "Short description about the alarm"
          }
        }
      },
      "no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the response object."
          },
          "alarm": {
            "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.AlarmInfo"
          },
          "mitreCategory": {
            "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreCategoryInfo"
          },
          "flags": {
            "type": "array",
            "description": "Enumerated flags reflecting the state of the relationship between alarm and MITRE category",
            "items": {
              "type": "string",
              "description": "Enumerated flags reflecting the state of the relationship between alarm and MITRE category",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the relationship between alarm and MITRE category created"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the relationship between alarm and MITRE category updated"
          },
          "lastUpdatedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "deletedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the relationship between alarm and MITRE category deleted"
          },
          "deletedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          }
        }
      },
      "no.mnemonic.services.alarm.spi.response.MitreCategoryInfo": {
        "type": "object",
        "description": "Info object of the MITRE category that is part of the relationship",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the response object."
          },
          "externalId": {
            "type": "string",
            "format": "uuid",
            "description": "External ID of the MITRE category"
          },
          "shortName": {
            "type": "string",
            "description": "Short name of the MITRE category"
          },
          "name": {
            "type": "string",
            "description": "Detailed name of the MITRE category"
          },
          "type": {
            "type": "string",
            "description": "Enumerated type of the MITRE category",
            "enum": [
              "tactic",
              "technique",
              "subtechnique",
              "mitigation",
              "threatActor",
              "malware",
              "tool",
              "campaign"
            ]
          },
          "model": {
            "type": "string",
            "description": "Enumerated threat model of the MITRE category",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          "version": {
            "type": "string",
            "description": "Version of the MITRE category (MITRE ATT&CK release)"
          }
        }
      },
      "no.mnemonic.services.alarm.spi.request.AlarmMitreRelationshipSearchRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "description": "A set of IDs of the searched relationships",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "A set of IDs of the searched relationships"
            },
            "uniqueItems": true
          },
          "alarm": {
            "type": "array",
            "description": "A set of IDs or short names of the alarms that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of IDs or short names of the alarms that take part in the relationships"
            },
            "uniqueItems": true
          },
          "category": {
            "type": "array",
            "description": "A set of IDs, external IDs or short names of the MITRE categories that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of IDs, external IDs or short names of the MITRE categories that take part in the relationships"
            },
            "uniqueItems": true
          },
          "categoryType": {
            "type": "array",
            "description": "A set of enumerated types of the MITRE categories that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of enumerated types of the MITRE categories that take part in the relationships",
              "enum": [
                "tactic",
                "technique",
                "subtechnique",
                "mitigation",
                "threatActor",
                "malware",
                "tool",
                "campaign"
              ]
            },
            "uniqueItems": true
          },
          "categoryModel": {
            "type": "array",
            "description": "A set of enumerated threat models of the MITRE categories that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of enumerated threat models of the MITRE categories that take part in the relationships",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            },
            "uniqueItems": true
          },
          "categoryVersion": {
            "type": "array",
            "description": "A set of versions of the MITRE categories that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of versions of the MITRE categories that take part in the relationships"
            },
            "uniqueItems": true
          },
          "includeFlags": {
            "type": "array",
            "description": "A set of included enumerated flags of the searched relationships",
            "items": {
              "type": "string",
              "description": "A set of included enumerated flags of the searched relationships",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "A set of excluded enumerated flags of the searched relationships",
            "items": {
              "type": "string",
              "description": "A set of excluded enumerated flags of the searched relationships",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "subCriteria": {
            "type": "array",
            "description": "Set additional search criteria with AND, OR or AND NOT",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.AlarmMitreRelationshipSearchSubCriteria"
            },
            "uniqueItems": true
          },
          "sortBy": {
            "type": "array",
            "default": "mitreCategoryShortName, -createdTimestamp",
            "description": "Fields to sort results by (without sign is ascending, with '-' sign is descending)",
            "items": {
              "type": "string",
              "default": "mitreCategoryShortName, -createdTimestamp",
              "description": "Fields to sort results by (without sign is ascending, with '-' sign is descending)",
              "enum": [
                "id",
                "alarmId",
                "alarmShortName",
                "mitreCategoryId",
                "mitreCategoryExternalId",
                "mitreCategoryShortName",
                "mitreCategoryType",
                "mitreCategoryModel",
                "mitreCategoryVersion",
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "-id",
                "-alarmId",
                "-alarmShortName",
                "-mitreCategoryId",
                "-mitreCategoryExternalId",
                "-mitreCategoryShortName",
                "-mitreCategoryType",
                "-mitreCategoryModel",
                "-mitreCategoryVersion",
                "-createdTimestamp",
                "-lastUpdatedTimestamp",
                "-deletedTimestamp"
              ]
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 25,
            "description": "The max amount of items to return",
            "minimum": 0
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "The amount of items to skip from the beginning",
            "minimum": 0
          }
        }
      },
      "no.mnemonic.services.alarm.spi.request.AlarmMitreRelationshipSearchSubCriteria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "description": "A set of IDs of the searched relationships",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "A set of IDs of the searched relationships"
            },
            "uniqueItems": true
          },
          "alarm": {
            "type": "array",
            "description": "A set of IDs or short names of the alarms that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of IDs or short names of the alarms that take part in the relationships"
            },
            "uniqueItems": true
          },
          "category": {
            "type": "array",
            "description": "A set of IDs, external IDs or short names of the MITRE categories that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of IDs, external IDs or short names of the MITRE categories that take part in the relationships"
            },
            "uniqueItems": true
          },
          "categoryType": {
            "type": "array",
            "description": "A set of enumerated types of the MITRE categories that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of enumerated types of the MITRE categories that take part in the relationships",
              "enum": [
                "tactic",
                "technique",
                "subtechnique",
                "mitigation",
                "threatActor",
                "malware",
                "tool",
                "campaign"
              ]
            },
            "uniqueItems": true
          },
          "categoryModel": {
            "type": "array",
            "description": "A set of enumerated threat models of the MITRE categories that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of enumerated threat models of the MITRE categories that take part in the relationships",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            },
            "uniqueItems": true
          },
          "categoryVersion": {
            "type": "array",
            "description": "A set of versions of the MITRE categories that take part in the relationships",
            "items": {
              "type": "string",
              "description": "A set of versions of the MITRE categories that take part in the relationships"
            },
            "uniqueItems": true
          },
          "includeFlags": {
            "type": "array",
            "description": "A set of included enumerated flags of the searched relationships",
            "items": {
              "type": "string",
              "description": "A set of included enumerated flags of the searched relationships",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "A set of excluded enumerated flags of the searched relationships",
            "items": {
              "type": "string",
              "description": "A set of excluded enumerated flags of the searched relationships",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "required": {
            "type": "boolean",
            "default": false,
            "description": "Is this sub-criteria required? If false it is OR-ed, if true it is AND-ed"
          },
          "exclude": {
            "type": "boolean",
            "default": false,
            "description": "Exclude objects matching sub-criteria? If true, the criteria is NOT-ed."
          }
        }
      },
      "no.mnemonic.jargus.criteria.event.AlarmSearchCriteria": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Max number of results."
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Skip the first (offset) objects. By default, return result from first object."
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "Set to true to include deleted objects. By default, exclude deleted objects."
          },
          "subCriteria": {
            "type": "array",
            "description": "Set additional criterias which are applied using a logical OR.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.criteria.event.AlarmSearchCriteria"
            },
            "uniqueItems": true
          },
          "exclude": {
            "type": "boolean",
            "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded."
          },
          "required": {
            "type": "boolean",
            "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria)."
          },
          "attackCategoryID": {
            "type": "array",
            "description": "A set of IDs for attack categories (alarm category).",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "A set of IDs for attack categories (alarm category)."
            },
            "uniqueItems": true
          },
          "alarmID": {
            "type": "array",
            "description": "A set of IDs for alarms.",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "A set of IDs for alarms."
            },
            "uniqueItems": true
          },
          "alarm": {
            "type": "array",
            "description": "A set of IDs or short names for alarms.",
            "items": {
              "type": "string",
              "description": "A set of IDs or short names for alarms."
            },
            "uniqueItems": true
          },
          "alarmReferences": {
            "type": "array",
            "description": "A set of references. It does an exact match.",
            "items": {
              "type": "string",
              "description": "A set of references. It does an exact match."
            },
            "uniqueItems": true
          },
          "labels": {
            "type": "array",
            "description": "A set of labels. It does an exact match.",
            "items": {
              "type": "string",
              "description": "A set of labels. It does an exact match."
            },
            "uniqueItems": true
          },
          "includeMappings": {
            "type": "boolean",
            "default": false,
            "description": "Set to include mappings in the search result."
          },
          "includeComments": {
            "type": "boolean",
            "default": false,
            "description": "Set to include comments in the search result."
          },
          "startTimestamp": {
            "type": "string",
            "description": "Only include alarms based on the set TimeFieldStrategy and TimeMatchStrategy (start timestamp)\nTimestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp.\nSee the general integration guide for more details.\n  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.",
            "externalDocs": {
              "description": "See documentation",
              "url": "https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search"
            }
          },
          "endTimestamp": {
            "type": "string",
            "description": "Only include alarms based on the set TimeFieldStrategy and TimeMatchStrategy (end timestamp)\nTimestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp.\nSee the general integration guide for more details.\n  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.",
            "externalDocs": {
              "description": "See documentation",
              "url": "https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search"
            }
          },
          "timeFieldStrategy": {
            "type": "array",
            "default": "lastUpdatedTimestamp",
            "description": "TimeFieldStrategy to define which timestamp field(s) to match.",
            "items": {
              "type": "string",
              "default": "lastUpdatedTimestamp",
              "description": "TimeFieldStrategy to define which timestamp field(s) to match.",
              "enum": [
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "lastCheckTimestamp",
                "nextCheckTimestamp",
                "all"
              ]
            },
            "uniqueItems": true
          },
          "timeMatchStrategy": {
            "type": "string",
            "default": "any",
            "description": "TimeMatchStrategy to define how to match startTimestamp and endTimestamp with fields.",
            "enum": [
              "all",
              "any"
            ]
          },
          "keywords": {
            "type": "array",
            "description": "A set of keywords matched against alarms based on the set KeywordFieldStrategy and KeywordMatchStrategy.",
            "items": {
              "type": "string",
              "description": "A set of keywords matched against alarms based on the set KeywordFieldStrategy and KeywordMatchStrategy."
            },
            "uniqueItems": true
          },
          "keywordFieldStrategy": {
            "type": "array",
            "default": "all",
            "description": "KeywordFieldStrategy to define which field(s) to match against keywords.",
            "items": {
              "type": "string",
              "default": "all",
              "description": "KeywordFieldStrategy to define which field(s) to match against keywords.",
              "enum": [
                "reference",
                "description",
                "label",
                "signature",
                "attackIdentifier",
                "id",
                "shortName",
                "all"
              ]
            },
            "uniqueItems": true
          },
          "keywordMatchStrategy": {
            "type": "string",
            "default": "all",
            "description": "KeywordMatchStrategy to define how to match keywords with fields.",
            "enum": [
              "all",
              "any"
            ]
          },
          "signature": {
            "type": "array",
            "description": "A set of signatures. It does an exact match.",
            "items": {
              "type": "string",
              "description": "A set of signatures. It does an exact match."
            },
            "uniqueItems": true
          },
          "sortBy": {
            "type": "array",
            "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
            "items": {
              "type": "string",
              "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
              "enum": [
                "id",
                "lastUpdatedTimestamp",
                "description",
                "attackCategory",
                "-id",
                "-lastUpdatedTimestamp",
                "-description",
                "-attackCategory"
              ]
            }
          },
          "includeFlags": {
            "type": "array",
            "description": "Only include objects which have includeFlags set.",
            "items": {
              "type": "string",
              "description": "Only include objects which have includeFlags set.",
              "enum": [
                "DISABLED",
                "DELETED"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "Exclude objects which have excludeFlags set.",
            "items": {
              "type": "string",
              "description": "Exclude objects which have excludeFlags set.",
              "enum": [
                "DISABLED",
                "DELETED"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.jargus.criteria.event.AttackCategorySearchCriteria": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Max number of results."
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Skip the first (offset) objects. By default, return result from first object."
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "Set to true to include deleted objects. By default, exclude deleted objects."
          },
          "subCriteria": {
            "type": "array",
            "description": "Set additional criterias which are applied using a logical OR.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.criteria.event.AttackCategorySearchCriteria"
            },
            "uniqueItems": true
          },
          "exclude": {
            "type": "boolean",
            "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded."
          },
          "required": {
            "type": "boolean",
            "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria)."
          },
          "attackCategoryID": {
            "type": "array",
            "description": "A set of IDs for attack categories (alarm category).",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "A set of IDs for attack categories (alarm category)."
            },
            "uniqueItems": true
          },
          "attackCategory": {
            "type": "array",
            "description": "A set of IDs or short names for attack categories.",
            "items": {
              "type": "string",
              "description": "A set of IDs or short names for attack categories."
            },
            "uniqueItems": true
          },
          "startTimestamp": {
            "type": "string",
            "description": "Only include attack categories based on the specified TimeFieldStrategy and TimeMatchStrategy (start timestamp)\nTimestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp.\nSee the general integration guide for more details.,\n  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.",
            "externalDocs": {
              "description": "See documentation",
              "url": "https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search"
            }
          },
          "endTimestamp": {
            "type": "string",
            "description": "Only include attack categories based on the specified TimeFieldStrategy and TimeMatchStrategy (end timestamp)\nTimestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp.\nSee the general integration guide for more details.\n  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.",
            "externalDocs": {
              "description": "See documentation",
              "url": "https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search"
            }
          },
          "timeFieldStrategy": {
            "type": "array",
            "default": "lastUpdatedTimestamp",
            "description": "TimeFieldStrategy to define which timestamp field(s) to match.",
            "items": {
              "type": "string",
              "default": "lastUpdatedTimestamp",
              "description": "TimeFieldStrategy to define which timestamp field(s) to match.",
              "enum": [
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "all"
              ]
            },
            "uniqueItems": true
          },
          "timeMatchStrategy": {
            "type": "string",
            "default": "any",
            "description": "TimeMatchStrategy to define how to match startTimestamp and endTimestamp with fields.",
            "enum": [
              "all",
              "any"
            ]
          },
          "keywords": {
            "type": "array",
            "description": "A set of keywords matched against categories based on the set KeywordFieldStrategy and KeywordMatchStrategy.",
            "items": {
              "type": "string",
              "description": "A set of keywords matched against categories based on the set KeywordFieldStrategy and KeywordMatchStrategy."
            },
            "uniqueItems": true
          },
          "keywordFieldStrategy": {
            "type": "array",
            "default": "all",
            "description": "KeywordFieldStrategy to define which field(s) to match against keywords.",
            "items": {
              "type": "string",
              "default": "all",
              "description": "KeywordFieldStrategy to define which field(s) to match against keywords.",
              "enum": [
                "id",
                "shortName",
                "name",
                "info",
                "all"
              ]
            },
            "uniqueItems": true
          },
          "keywordMatchStrategy": {
            "type": "string",
            "default": "all",
            "description": "KeywordMatchStrategy to define how to match keywords with fields.",
            "enum": [
              "all",
              "any"
            ]
          },
          "sortBy": {
            "type": "array",
            "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
            "items": {
              "type": "string",
              "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
              "enum": [
                "id",
                "shortName",
                "name",
                "info",
                "-id",
                "-shortName",
                "-name",
                "-info"
              ]
            }
          },
          "includeFlags": {
            "type": "array",
            "description": "Only include objects which have includeFlags set.",
            "items": {
              "type": "string",
              "description": "Only include objects which have includeFlags set.",
              "enum": [
                "DISABLED",
                "RECONNAISSANCE",
                "DELETED"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "Exclude objects which have excludeFlags set.",
            "items": {
              "type": "string",
              "description": "Exclude objects which have excludeFlags set.",
              "enum": [
                "DISABLED",
                "RECONNAISSANCE",
                "DELETED"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.jargus.criteria.event.AlarmMappingSearchCriteria": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Max number of results."
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Skip the first (offset) objects. By default, return result from first object."
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "Set to true to include deleted objects. By default, exclude deleted objects."
          },
          "includeFlags": {
            "type": "integer",
            "format": "int64",
            "description": "Only include objects which have includeFlags set."
          },
          "excludeFlags": {
            "type": "integer",
            "format": "int64",
            "description": "Exclude objects which have excludeFlags set."
          },
          "subCriteria": {
            "type": "array",
            "description": "Set additional criterias which are applied using a logical OR.",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.criteria.event.AlarmMappingSearchCriteria"
            },
            "uniqueItems": true
          },
          "exclude": {
            "type": "boolean",
            "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded."
          },
          "required": {
            "type": "boolean",
            "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria)."
          },
          "attackCategoryID": {
            "type": "array",
            "description": "A set of IDs for attack categories (alarm category).",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "A set of IDs for attack categories (alarm category)."
            },
            "uniqueItems": true
          },
          "alarmID": {
            "type": "array",
            "description": "A set of IDs for alarms.",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "A set of IDs for alarms."
            },
            "uniqueItems": true
          },
          "signature": {
            "type": "array",
            "description": "A set of signatures. It does an exact match.",
            "items": {
              "type": "string",
              "description": "A set of signatures. It does an exact match."
            },
            "uniqueItems": true
          },
          "minTriggerAmount": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum trigger amount, default 0 means disabled"
          },
          "maxTriggerAmount": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum trigger amount, default 0 means disabled"
          },
          "startTimestamp": {
            "type": "string",
            "description": "Only include mappings based on the set TimeFieldStrategy and TimeMatchStrategy (start timestamp)\nTimestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp.\nSee the general integration guide for more details.\n  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.",
            "externalDocs": {
              "description": "See documentation",
              "url": "https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search"
            }
          },
          "endTimestamp": {
            "type": "string",
            "description": "Only include mappings based on the set TimeFieldStrategy and TimeMatchStrategy (end timestamp).\nTimestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp.\nSee the general integration guide for more details.\n  Allows to specify a unix timestamp (milliseconds), ISO timestamp, or relative time.",
            "externalDocs": {
              "description": "See documentation",
              "url": "https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search"
            }
          },
          "timeFieldStrategy": {
            "type": "array",
            "default": "lastTriggeredTimestamp",
            "description": "TimeFieldStrategy to define which timestamp field(s) to match.",
            "items": {
              "type": "string",
              "default": "lastTriggeredTimestamp",
              "description": "TimeFieldStrategy to define which timestamp field(s) to match.",
              "enum": [
                "firstTriggeredTimestamp",
                "lastTriggeredTimestamp",
                "mappedTimestamp",
                "lastUpdatedTimestamp",
                "all"
              ]
            },
            "uniqueItems": true
          },
          "timeMatchStrategy": {
            "type": "string",
            "default": "any",
            "description": "TimeMatchStrategy to define how to match startTimestamp and endTimestamp with fields.",
            "enum": [
              "all",
              "any"
            ]
          },
          "keywords": {
            "type": "array",
            "description": "A set of keywords matched against mappings based on the set KeywordFieldStrategy and KeywordMatchStrategy.",
            "items": {
              "type": "string",
              "description": "A set of keywords matched against mappings based on the set KeywordFieldStrategy and KeywordMatchStrategy."
            },
            "uniqueItems": true
          },
          "keywordFieldStrategy": {
            "type": "array",
            "default": "all",
            "description": "KeywordFieldStrategy to define which field(s) to match against keywords.",
            "items": {
              "type": "string",
              "default": "all",
              "description": "KeywordFieldStrategy to define which field(s) to match against keywords.",
              "enum": [
                "description",
                "signature",
                "signatureMessage",
                "all"
              ]
            },
            "uniqueItems": true
          },
          "keywordMatchStrategy": {
            "type": "string",
            "default": "all",
            "description": "KeywordMatchStrategy to define how to match keywords with fields.",
            "enum": [
              "all",
              "any"
            ]
          },
          "attackIdentifier": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.criteria.event.AlarmMappingSearchCriteria",
            "writeOnly": true
          },
          "sortBy": {
            "type": "array",
            "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
            "items": {
              "type": "string",
              "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
              "enum": [
                "signature",
                "signatureMessage",
                "firstTriggeredTimestamp",
                "lastTriggeredTimestamp",
                "lastUpdatedTimestamp",
                "mappedTimestamp",
                "triggerAmount",
                "-signature",
                "-signatureMessage",
                "-firstTriggeredTimestamp",
                "-lastTriggeredTimestamp",
                "-lastUpdatedTimestamp",
                "-mappedTimestamp",
                "-triggerAmount"
              ]
            }
          }
        }
      },
      "no.mnemonic.services.alarm.spi.response.MitreCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the response object."
          },
          "externalId": {
            "type": "string",
            "format": "uuid",
            "description": "External ID of the MITRE category"
          },
          "shortName": {
            "type": "string",
            "description": "Short name of the MITRE category"
          },
          "name": {
            "type": "string",
            "description": "Detailed name of the MITRE category"
          },
          "type": {
            "type": "string",
            "description": "Enumerated type of the MITRE category",
            "enum": [
              "tactic",
              "technique",
              "subtechnique",
              "mitigation",
              "threatActor",
              "malware",
              "tool",
              "campaign"
            ]
          },
          "model": {
            "type": "string",
            "description": "Enumerated threat model of the MITRE category",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          "version": {
            "type": "string",
            "description": "Version of the MITRE category (MITRE ATT&CK release)"
          },
          "url": {
            "type": "string",
            "description": "URL of the external MITRE category page"
          },
          "flags": {
            "type": "array",
            "description": "Enumerated flags reflecting the state of the MITRE category",
            "items": {
              "type": "string",
              "description": "Enumerated flags reflecting the state of the MITRE category",
              "enum": [
                "deprecated",
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "relationships": {
            "type": "array",
            "description": "Relationships that this MITRE category is participating in",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship"
            }
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the MITRE category created"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the MITRE category updated"
          },
          "lastUpdatedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "deletedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the MITRE category deleted"
          },
          "deletedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          }
        }
      },
      "no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the response object."
          },
          "externalId": {
            "type": "string",
            "format": "uuid",
            "description": "External ID of the relationship between MITRE categories"
          },
          "sourceCategory": {
            "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreCategoryInfo"
          },
          "targetCategory": {
            "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreCategoryInfo"
          },
          "type": {
            "type": "string",
            "description": "Enumerated type of the relationship between MITRE categories",
            "enum": [
              "subtechniqueOf",
              "revokedBy",
              "mitigates",
              "uses"
            ]
          },
          "version": {
            "type": "string",
            "description": "Version of the relationship (MITRE ATT&CK release), has to match the version of the related MITRE categories"
          },
          "flags": {
            "type": "array",
            "description": "Enumerated flags reflecting the state of the relationship between MITRE categories",
            "items": {
              "type": "string",
              "description": "Enumerated flags reflecting the state of the relationship between MITRE categories",
              "enum": [
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the relationship between MITRE categories created"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "lastUpdatedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the relationship between MITRE categories updated"
          },
          "lastUpdatedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          },
          "deletedTimestamp": {
            "type": "integer",
            "format": "int64",
            "description": "When was the relationship between MITRE categories deleted"
          },
          "deletedByUser": {
            "$ref": "#/components/schemas/no.mnemonic.services.argus.common.spi.response.UserInfo"
          }
        }
      },
      "no.mnemonic.services.alarm.spi.request.MitreCategoryAddRequest": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "format": "uuid",
            "description": "External ID of the MITRE category"
          },
          "shortName": {
            "type": "string",
            "description": "Short name of the MITRE category"
          },
          "name": {
            "type": "string",
            "description": "Detailed name of the MITRE category"
          },
          "type": {
            "type": "string",
            "description": "Enumerated type of the MITRE category",
            "enum": [
              "tactic",
              "technique",
              "subtechnique",
              "mitigation",
              "threatActor",
              "malware",
              "tool",
              "campaign"
            ]
          },
          "model": {
            "type": "string",
            "description": "Enumerated threat model of the MITRE category",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          "version": {
            "type": "string",
            "description": "Version of the MITRE ATT&CK release"
          },
          "url": {
            "type": "string",
            "description": "URL of the external MITRE category page",
            "pattern": "((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)"
          }
        },
        "required": [
          "externalId",
          "model",
          "name",
          "shortName",
          "type",
          "url",
          "version"
        ]
      },
      "no.mnemonic.services.alarm.spi.request.MitreCategorySearchRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "description": "A set of IDs of the searched MITRE categories",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "A set of IDs of the searched MITRE categories"
            },
            "uniqueItems": true
          },
          "externalId": {
            "type": "array",
            "description": "A set of external IDs of the searched MITRE categories",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "A set of external IDs of the searched MITRE categories"
            },
            "uniqueItems": true
          },
          "shortName": {
            "type": "array",
            "description": "A set of short names of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of short names of the searched MITRE categories"
            },
            "uniqueItems": true
          },
          "type": {
            "type": "array",
            "description": "A set of enumerated types of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of enumerated types of the searched MITRE categories",
              "enum": [
                "tactic",
                "technique",
                "subtechnique",
                "mitigation",
                "threatActor",
                "malware",
                "tool",
                "campaign"
              ]
            },
            "uniqueItems": true
          },
          "model": {
            "type": "array",
            "description": "A set of enumerated threat models of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of enumerated threat models of the searched MITRE categories",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            },
            "uniqueItems": true
          },
          "version": {
            "type": "array",
            "description": "A set of versions of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of versions of the searched MITRE categories"
            },
            "uniqueItems": true
          },
          "includeFlags": {
            "type": "array",
            "description": "A set of included enumerated flags of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of included enumerated flags of the searched MITRE categories",
              "enum": [
                "deprecated",
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "A set of excluded enumerated flags of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of excluded enumerated flags of the searched MITRE categories",
              "enum": [
                "deprecated",
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "keywords": {
            "type": "array",
            "description": "Keywords that are searched for in the fields of MITRE categories",
            "items": {
              "type": "string",
              "description": "Keywords that are searched for in the fields of MITRE categories"
            }
          },
          "keywordFieldStrategy": {
            "type": "array",
            "default": "all",
            "description": "A set of fields of the MITRE categories where the keywords are searched",
            "items": {
              "type": "string",
              "default": "all",
              "description": "A set of fields of the MITRE categories where the keywords are searched",
              "enum": [
                "id",
                "externalId",
                "shortName",
                "name",
                "all"
              ]
            },
            "uniqueItems": true
          },
          "keywordMatchStrategy": {
            "type": "string",
            "default": "all",
            "description": "Selected keyword matching strategy for searching in the fields of MITRE categories",
            "enum": [
              "all",
              "any"
            ]
          },
          "subCriteria": {
            "type": "array",
            "description": "Set additional search criteria with AND, OR or AND NOT",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.request.MitreCategorySearchSubCriteria"
            },
            "uniqueItems": true
          },
          "includeRelationships": {
            "type": "boolean",
            "default": false,
            "description": "Whether to include MITRE category relationships in search results or not"
          },
          "sortBy": {
            "type": "array",
            "default": "shortName, -createdTimestamp",
            "description": "Fields to sort results by (without sign is ascending, with '-' sign is descending)",
            "items": {
              "type": "string",
              "default": "shortName, -createdTimestamp",
              "description": "Fields to sort results by (without sign is ascending, with '-' sign is descending)",
              "enum": [
                "id",
                "externalId",
                "shortName",
                "name",
                "type",
                "model",
                "version",
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "-id",
                "-externalId",
                "-shortName",
                "-name",
                "-type",
                "-model",
                "-version",
                "-createdTimestamp",
                "-lastUpdatedTimestamp",
                "-deletedTimestamp"
              ]
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "default": 25,
            "description": "The max amount of items to return",
            "minimum": 0
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "default": 0,
            "description": "The amount of items to skip from the beginning",
            "minimum": 0
          }
        }
      },
      "no.mnemonic.services.alarm.spi.request.MitreCategorySearchSubCriteria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "description": "A set of IDs of the searched MITRE categories",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "A set of IDs of the searched MITRE categories"
            },
            "uniqueItems": true
          },
          "externalId": {
            "type": "array",
            "description": "A set of external IDs of the searched MITRE categories",
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "A set of external IDs of the searched MITRE categories"
            },
            "uniqueItems": true
          },
          "shortName": {
            "type": "array",
            "description": "A set of short names of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of short names of the searched MITRE categories"
            },
            "uniqueItems": true
          },
          "type": {
            "type": "array",
            "description": "A set of enumerated types of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of enumerated types of the searched MITRE categories",
              "enum": [
                "tactic",
                "technique",
                "subtechnique",
                "mitigation",
                "threatActor",
                "malware",
                "tool",
                "campaign"
              ]
            },
            "uniqueItems": true
          },
          "model": {
            "type": "array",
            "description": "A set of enumerated threat models of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of enumerated threat models of the searched MITRE categories",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            },
            "uniqueItems": true
          },
          "version": {
            "type": "array",
            "description": "A set of versions of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of versions of the searched MITRE categories"
            },
            "uniqueItems": true
          },
          "includeFlags": {
            "type": "array",
            "description": "A set of included enumerated flags of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of included enumerated flags of the searched MITRE categories",
              "enum": [
                "deprecated",
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "excludeFlags": {
            "type": "array",
            "description": "A set of excluded enumerated flags of the searched MITRE categories",
            "items": {
              "type": "string",
              "description": "A set of excluded enumerated flags of the searched MITRE categories",
              "enum": [
                "deprecated",
                "deleted"
              ]
            },
            "uniqueItems": true
          },
          "keywords": {
            "type": "array",
            "description": "Keywords that are searched for in the fields of MITRE categories",
            "items": {
              "type": "string",
              "description": "Keywords that are searched for in the fields of MITRE categories"
            }
          },
          "keywordFieldStrategy": {
            "type": "array",
            "default": "all",
            "description": "A set of fields of the MITRE categories where the keywords are searched",
            "items": {
              "type": "string",
              "default": "all",
              "description": "A set of fields of the MITRE categories where the keywords are searched",
              "enum": [
                "id",
                "externalId",
                "shortName",
                "name",
                "all"
              ]
            },
            "uniqueItems": true
          },
          "keywordMatchStrategy": {
            "type": "string",
            "default": "all",
            "description": "Selected keyword matching strategy for searching in the fields of MITRE categories",
            "enum": [
              "all",
              "any"
            ]
          },
          "required": {
            "type": "boolean",
            "default": false,
            "description": "Is this sub-criteria required? If false it is OR-ed, if true it is AND-ed"
          },
          "exclude": {
            "type": "boolean",
            "default": false,
            "description": "Exclude objects matching sub-criteria? If true, the criteria is NOT-ed."
          }
        }
      },
      "no.mnemonic.services.alarm.spi.request.MitreCategoryUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Detailed name of the MITRE category"
          },
          "type": {
            "type": "string",
            "description": "Enumerated type of the MITRE category",
            "enum": [
              "tactic",
              "technique",
              "subtechnique",
              "mitigation",
              "threatActor",
              "malware",
              "tool",
              "campaign"
            ]
          },
          "url": {
            "type": "string",
            "description": "URL of the external MITRE category page",
            "pattern": "((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)"
          },
          "deprecated": {
            "type": "boolean",
            "description": "A boolean flag indicating if the MITRE category is deprecated"
          }
        }
      },
      "no.mnemonic.services.alarm.spi.request.MitreCategoryRelationshipAddRequest": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "format": "uuid",
            "description": "External ID of the MITRE category relationship"
          },
          "targetCategory": {
            "type": "string",
            "format": "uuid",
            "description": "ID or external ID of target MITRE category (external ID requires setting an additional attribute: targetCategoryModel)"
          },
          "targetCategoryModel": {
            "type": "string",
            "description": "Which threat model to use with target MITRE category external ID",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          "type": {
            "type": "string",
            "description": "Enumerated type of the MITRE category relationship",
            "enum": [
              "subtechniqueOf",
              "revokedBy",
              "mitigates",
              "uses"
            ]
          },
          "version": {
            "type": "string",
            "description": "Version of the MITRE ATT&CK release, has to match the version of the related categories"
          }
        },
        "required": [
          "externalId",
          "targetCategory",
          "type",
          "version"
        ]
      },
      "no.mnemonic.services.alarm.spi.request.MitreCategoryRelationshipUpdateRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Enumerated type of the MITRE category relationship",
            "enum": [
              "subtechniqueOf",
              "revokedBy",
              "mitigates",
              "uses"
            ]
          }
        }
      },
      "no.mnemonic.services.alarm.spi.response.MitreModelVersion": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Enumerated threat model of the MITRE category",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          "version": {
            "type": "string",
            "description": "Version of the MITRE ATT&CK release"
          },
          "flags": {
            "type": "array",
            "description": "Enumerated flags reflecting the state of the MITRE model version",
            "items": {
              "type": "string",
              "description": "Enumerated flags reflecting the state of the MITRE model version",
              "enum": [
                "default"
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "no.mnemonic.services.alarm.spi.request.MitreModelVersionAddOrUpdateRequest": {
        "type": "object",
        "properties": {
          "markAsDefault": {
            "type": "boolean",
            "description": "A boolean flag indicating whether this version should be marked as the default one for this model (default value is null, meaning no change)"
          }
        }
      },
      "no.mnemonic.jargus.service.request.alarm.AlarmAddRequest": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string",
            "description": "Short name of the alarm",
            "pattern": "[a-zA-Z0-9_:\\-\\.]*"
          },
          "description": {
            "type": "string",
            "description": "Alarm description",
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
          },
          "attackCategoryID": {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Alarm attack category ID",
            "minimum": 1
          },
          "info": {
            "type": "string",
            "description": "Alarm verbose information [format:html]",
            "x-Argus-Format": "html"
          },
          "references": {
            "type": "array",
            "description": "Alarm vulnerability references (CVE-numbers, BID-numbers, URLs etc)",
            "items": {
              "type": "string",
              "description": "Alarm vulnerability references (CVE-numbers, BID-numbers, URLs etc)"
            },
            "pattern": "^((?!(https?|ftp|gopher|telnet|file|javascript|mailto):))([\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=])*|((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)",
            "uniqueItems": true
          },
          "links": {
            "type": "array",
            "description": "Links to external descriptions of this alarm",
            "items": {
              "type": "string",
              "description": "Links to external descriptions of this alarm"
            },
            "pattern": "((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)",
            "uniqueItems": true
          },
          "labels": {
            "type": "array",
            "description": "Tag an alarm with labels",
            "items": {
              "type": "string",
              "description": "Tag an alarm with labels"
            },
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*",
            "uniqueItems": true
          },
          "internalReference": {
            "type": "string",
            "description": "A link to an internal reference for the alarm",
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
          },
          "internalInformation": {
            "type": "string",
            "description": "Internal information about handling the alarm. Describes how the alarm should be handled by SOC. Contents may be HTML, which will be sanitized."
          },
          "signatures": {
            "type": "array",
            "description": "List of signatures to map to this alarm",
            "items": {
              "type": "string",
              "description": "List of signatures to map to this alarm"
            },
            "pattern": "[a-zA-Z0-9_/:@~!\\+\\-\\.\\?]*",
            "uniqueItems": true
          }
        },
        "required": [
          "description"
        ]
      },
      "no.mnemonic.jargus.service.request.alarm.AlarmCommentAddRequest": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment content. Html is allowed, will be sanitized. [format:html]",
            "x-Argus-Format": "html"
          }
        },
        "required": [
          "comment"
        ]
      },
      "no.mnemonic.services.alarm.spi.request.AlarmMitreRelationshipAddRequest": {
        "type": "object",
        "properties": {
          "mitreCategory": {
            "type": "string",
            "format": "uuid",
            "description": "ID or external ID of the MITRE category (external ID requires setting additional attributes: categoryModel, categoryVersion)"
          },
          "categoryModel": {
            "type": "string",
            "description": "Which threat model to use with external ID of the MITRE category",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          "categoryVersion": {
            "type": "string",
            "description": "Which version to use with external ID of the MITRE category"
          }
        },
        "required": [
          "mitreCategory"
        ]
      },
      "no.mnemonic.jargus.service.request.alarm.AlarmUpdateRequest": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string",
            "description": "If set, update short name of the alarm",
            "pattern": "[a-zA-Z0-9_:\\-\\.]*"
          },
          "description": {
            "type": "string",
            "description": "If set, update description of alarm",
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
          },
          "attackCategoryID": {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Update category of alarm (unchanged if set to 0)",
            "minimum": 0
          },
          "info": {
            "type": "string",
            "description": "If set, update verbose information of alarm [format:html]",
            "x-Argus-Format": "html"
          },
          "disabled": {
            "type": "boolean",
            "description": "If set, disable or enable alarm (unchanged if not set)"
          },
          "addReferences": {
            "type": "array",
            "description": "Vulnerability references to be added to the alarm (CVE-numbers, BID-numbers, URLs etc)",
            "items": {
              "type": "string",
              "description": "Vulnerability references to be added to the alarm (CVE-numbers, BID-numbers, URLs etc)"
            },
            "pattern": "^((?!(https?|ftp|gopher|telnet|file|javascript|mailto):))([\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=])*|((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)",
            "uniqueItems": true
          },
          "deleteReferences": {
            "type": "array",
            "description": "Vulnerability references to be removed from the alarm",
            "items": {
              "type": "string",
              "description": "Vulnerability references to be removed from the alarm"
            },
            "uniqueItems": true
          },
          "addLinks": {
            "type": "array",
            "description": "External links to be added to the alarm",
            "items": {
              "type": "string",
              "description": "External links to be added to the alarm"
            },
            "pattern": "((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)",
            "uniqueItems": true
          },
          "deleteLinks": {
            "type": "array",
            "description": "External links to be removed from the alarm",
            "items": {
              "type": "string",
              "description": "External links to be removed from the alarm"
            },
            "uniqueItems": true
          },
          "addLabels": {
            "type": "array",
            "description": "Labels to be added to the alarm",
            "items": {
              "type": "string",
              "description": "Labels to be added to the alarm"
            },
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*",
            "uniqueItems": true
          },
          "deleteLabels": {
            "type": "array",
            "description": "Labels to be removed from the alarm",
            "items": {
              "type": "string",
              "description": "Labels to be removed from the alarm"
            },
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*",
            "uniqueItems": true
          },
          "internalReference": {
            "type": "string",
            "description": "If set, update link to an internal reference for the alarm",
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
          },
          "internalInformation": {
            "type": "string",
            "description": "If set, update internal information about handling the alarm. Describes how the alarm should be handled by SOC. Contents may be HTML, which will be sanitized."
          }
        }
      },
      "no.mnemonic.jargus.service.request.alarm.AttackCategoryAddRequest": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string",
            "description": "Short name of added category.",
            "pattern": "[a-zA-Z0-9_:\\-\\.]*"
          },
          "name": {
            "type": "string",
            "description": "Name of added category.",
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
          },
          "info": {
            "type": "string",
            "description": "Description of added category.",
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
          }
        },
        "required": [
          "info",
          "name"
        ]
      },
      "no.mnemonic.jargus.service.request.alarm.AttackCategoryUpdateRequest": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string",
            "description": "Update short name of category.",
            "pattern": "[a-zA-Z0-9_:\\-\\.]*"
          },
          "name": {
            "type": "string",
            "description": "Update name of category.",
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
          },
          "info": {
            "type": "string",
            "description": "Update description of category.",
            "pattern": "[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
          },
          "disabled": {
            "type": "boolean",
            "description": "Disable or enable category (unchanged if not set)"
          }
        }
      },
      "no.mnemonic.jargus.service.request.alarm.AlarmMappingRequest": {
        "type": "object",
        "properties": {
          "signatures": {
            "type": "array",
            "description": "Signatures (exist/new) to be mapped to the alarm",
            "items": {
              "type": "string",
              "description": "Signatures (exist/new) to be mapped to the alarm"
            },
            "maxItems": 2147483647,
            "minItems": 1,
            "pattern": "[a-zA-Z0-9_/:@~!\\+\\-\\.\\?]*",
            "uniqueItems": true
          }
        },
        "required": [
          "signatures"
        ]
      },
      "no.mnemonic.services.argus.common.rest.model.ResultMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message text"
          },
          "messageTemplate": {
            "type": "string",
            "description": "Message template"
          },
          "type": {
            "type": "string",
            "description": "Message type",
            "enum": [
              "FIELD_ERROR",
              "ACTION_ERROR",
              "WARNING",
              "NOTIFICATION",
              "INFO"
            ]
          },
          "field": {
            "type": "string",
            "description": "Field which this message applies to"
          },
          "parameter": {
            "type": "string",
            "description": "The affected parameter"
          }
        }
      },
      "no.mnemonic.services.argus.common.rest.model.ResultStash": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "object",
            "description": "Returned results (might be an array or a single object)"
          }
        }
      },
      "ResultStash-no.mnemonic.jargus.model.Alarm": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.Alarm"
          }
        }
      },
      "ResultStash-list-no.mnemonic.jargus.model.Alarm": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.Alarm"
            }
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship"
            }
          }
        }
      },
      "ResultStash-no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.AlarmMitreRelationship"
          }
        }
      },
      "ResultStash-list-no.mnemonic.jargus.model.AttackCategory": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.AttackCategory"
            }
          }
        }
      },
      "ResultStash-no.mnemonic.jargus.model.AttackCategory": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.AttackCategory"
          }
        }
      },
      "ResultStash-list-no.mnemonic.jargus.model.AlarmMapping": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.jargus.model.AlarmMapping"
            }
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.alarm.spi.response.MitreCategory": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreCategory"
            }
          }
        }
      },
      "ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategory": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreCategory"
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship"
            }
          }
        }
      },
      "ResultStash-no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreCategoryRelationship"
          }
        }
      },
      "ResultStash-no.mnemonic.services.alarm.spi.response.MitreModelVersion": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreModelVersion"
          }
        }
      },
      "ResultStash-list-no.mnemonic.services.alarm.spi.response.MitreModelVersion": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/no.mnemonic.services.alarm.spi.response.MitreModelVersion"
            }
          }
        }
      },
      "ResultStash-no.mnemonic.jargus.model.Comment": {
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code returned from API"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of returned results"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "description": "Number of skipped results"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Number of available results on server"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Actual number of returned results"
          },
          "metaData": {
            "type": "object",
            "description": "Additional unstructured meta data associated with response"
          },
          "messages": {
            "type": "array",
            "description": "Contains messages returned from the API, usually error messages",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/no.mnemonic.services.argus.common.rest.model.ResultMessage"
            }
          },
          "data": {
            "$ref": "#/components/schemas/no.mnemonic.jargus.model.Comment"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyScheme": {
        "type": "apiKey",
        "name": "Argus-API-Key",
        "in": "header"
      }
    }
  },
  "x-ResultStash-converted": true
}