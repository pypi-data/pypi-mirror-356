"""Autogenerated API schema"""
from argus_api import session


get_filter_type = {'tags': ['eventfilters/v2'], 'summary': 'Gets filter type (INTERNAL)', 'description': '', 'operationId': 'getFilterType', 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of filter', 'required': True, 'schema': {'type': 'int'}, 'type': 'int'}], 'responses': {'default': {'description': 'Gets filter type', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'description': 'An object that contains the id and the type of the filter', 'properties': {'customer': {'type': 'object', 'description': 'SPI CustomerInfo', 'properties': {'domain': {'type': 'object', 'description': 'SPI DomainInfo', 'properties': {'id': {'type': 'integer', 'format': 'int32', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the domain.'}}}, 'id': {'type': 'integer', 'format': 'int64', 'description': 'ID of the response object.'}, 'name': {'type': 'string', 'description': 'Name of the customer.'}, 'shortName': {'type': 'string', 'description': 'Shortname of the customer.'}}}, 'filterID': {'type': 'integer', 'format': 'int64', 'description': 'The ID of the filter to get the type of'}, 'filterType': {'type': 'string', 'description': 'The type of the filter', 'enum': ['annotation', 'analysis', 'match']}}}}}}}}, '200': {'description': 'Filter type returned', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '404': {'description': 'Object not found', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['viewEventFilter'], 'x-Argus-ApiStatus': 'INTERNAL'}