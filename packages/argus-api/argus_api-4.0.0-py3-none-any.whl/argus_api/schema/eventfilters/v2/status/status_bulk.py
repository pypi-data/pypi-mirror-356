"""Autogenerated API schema"""
from argus_api import session


submit_event_filter_status_bulk = {'tags': ['eventfilters/v2/status'], 'summary': 'Submit eventFilter status records in a bulk operation (INTERNAL)', 'description': '', 'operationId': 'submitEventFilterStatusBulk', 'requestBody': {'content': {'application/json': {'schema': {'type': 'object', 'description': 'The bulk submission request of eventFilter status records', 'properties': {'errorMode': {'type': 'str', 'default': 'ErrorMode.rejectAll', 'description': 'Error mode of the status updates', 'enum': ['dropInvalid', 'rejectAll']}, 'records': {'type': 'list', 'description': 'Filters update statuses', 'items': {'type': 'dict', 'description': 'Individual eventFilter status record request, part of the bulk submission request', 'properties': {'componentName': {'type': 'str', 'description': 'Name of the component the instance is running on'}, 'errorMessage': {'type': 'str', 'description': 'The error message reported by the filter, if there was an error'}, 'filterCustomerID': {'type': 'int', 'description': 'ID of the customer the filter belongs to'}, 'filterID': {'type': 'int', 'description': 'The ID of the filter to receive status update from'}, 'filterStatus': {'type': 'str', 'description': 'The current running status of the filter', 'enum': ['ok', 'error', 'disabled', 'disabledByCircuitBreaker', 'disabledByError']}, 'instanceID': {'type': 'int', 'description': 'The ID of the running instance'}, 'loggingStatus': {'type': 'str', 'description': 'The current log level of the filter', 'enum': ['debug', 'info']}, 'revision': {'type': 'int', 'description': 'The revision of the running filter', 'minimum': 1}}, 'required': ['componentName', 'filterStatus', 'loggingStatus']}, 'maxItems': 2147483647, 'minItems': 1}}, 'required': ['records']}}}, 'required': True}, 'responses': {'default': {'description': 'Submit eventFilter status records in a bulk operation', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string', 'description': 'Message text'}, 'messageTemplate': {'type': 'string', 'description': 'Message template'}, 'type': {'type': 'string', 'description': 'Message type', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string', 'description': 'Field which this message applies to'}, 'parameter': {'type': 'string', 'description': 'The affected parameter'}}}}, 'data': {'type': 'object', 'properties': {'accepted': {'type': 'integer', 'format': 'int32', 'description': 'Number of successfully submitted status updates'}, 'errorInformationList': {'type': 'array', 'description': 'Information regarding any records that were rejected during validation', 'items': {'type': 'object', 'description': 'Information regarding any records that were rejected during validation', 'properties': {'errorMessages': {'type': 'array', 'description': 'String message of error cause', 'items': {'type': 'string', 'description': 'String message of error cause'}}, 'submissionIndex': {'type': 'integer', 'format': 'int32', 'description': 'Index of the submission as it appears in the submission request'}}}}, 'rejected': {'type': 'integer', 'format': 'int32', 'description': 'Number of status updates that failed validation'}}}}}}}}, '200': {'description': 'Filter status successfully updated', 'content': {'application/json': {}}}, '401': {'description': 'Authentication failed', 'content': {'application/json': {}}}, '403': {'description': 'Access denied', 'content': {'application/json': {}}}, '412': {'description': 'Validation failed', 'content': {'application/json': {}}}}, 'x-Argus-Required-Permissions': ['submitEventFilterStatus'], 'x-Argus-ApiStatus': 'INTERNAL'}