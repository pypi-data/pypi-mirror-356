[project]
name = "llm-min"
version = "0.3.1"
description = "Generates LLM context by scraping and summarizing documentation for Python libraries listed in a requirements.txt file."
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name="marv1nnnnn", email="marvin1996325@gmail.com" },
]
keywords = ["llm", "documentation", "scraping", "summarization", "python", "pypi"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Indexing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = {file = "LICENSE"}
urls = { Repository = "https://github.com/marvin1996325/llm-min" }
dependencies = [
    "crawl4ai>=0.6.2",
    "httpx>=0.27.0", # For async HTTP requests (alternative to requests)
    "beautifulsoup4>=4.12.3", # HTML parsing
    "lxml>=5.2.1", # XML/HTML parsing backend
    "google-genai>=1.0.0", # For LLM compaction
    "duckduckgo_search>=5.3.1b1",
    "pydantic>=2.11.3",
    "typer>=0.12.3", # For building the CLI
    "toml>=0.10.2", # For parsing pyproject.toml
    "tiktoken>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0", # Testing framework
    "pytest-asyncio", # For testing async code
    "ruff>=0.4.0", # Linter and formatter
    "build>=1.0", # Package building tool
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP"]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[project.scripts]
llm-min = "llm_min.main:app"

[tool.setuptools.package-data]
"llm_min" = ["*.md", "assets/*.md"]

[build-system]
requires = ["setuptools>=42", "wheel", "build>=1.0"]
build-backend = "setuptools.build_meta"
