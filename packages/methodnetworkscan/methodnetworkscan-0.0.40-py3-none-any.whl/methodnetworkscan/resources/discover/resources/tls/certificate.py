# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import datetime as dt
from .signature_algorithm import SignatureAlgorithm
from .public_key_algorithm import PublicKeyAlgorithm
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class Certificate(UniversalBaseModel):
    subject_common_name: typing.Optional[str] = pydantic.Field(alias="subjectCommonName", default=None)
    issuer_common_name: typing.Optional[str] = pydantic.Field(alias="issuerCommonName", default=None)
    valid_from: typing.Optional[dt.datetime] = pydantic.Field(alias="validFrom", default=None)
    valid_to: typing.Optional[dt.datetime] = pydantic.Field(alias="validTo", default=None)
    version: typing.Optional[int] = None
    serial_number: typing.Optional[str] = pydantic.Field(alias="serialNumber", default=None)
    certificate: typing.Optional[str] = None
    signature: typing.Optional[str] = None
    signature_algorithm: typing.Optional[SignatureAlgorithm] = pydantic.Field(alias="signatureAlgorithm", default=None)
    public_key_algorithm: typing.Optional[PublicKeyAlgorithm] = pydantic.Field(alias="publicKeyAlgorithm", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
