# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from narrator.templates.v1 import template_service_pb2 as narrator_dot_templates_dot_v1_dot_template__service__pb2


class TemplateServiceStub(object):
    """---------- Сервис ----------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTemplate = channel.unary_unary(
                '/narrator.templates.v1.TemplateService/GetTemplate',
                request_serializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.GetTemplateRequest.SerializeToString,
                response_deserializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.GetTemplateResponse.FromString,
                _registered_method=True)
        self.FindTemplates = channel.unary_unary(
                '/narrator.templates.v1.TemplateService/FindTemplates',
                request_serializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.FindTemplatesRequest.SerializeToString,
                response_deserializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.FindTemplatesResponse.FromString,
                _registered_method=True)
        self.UpsertTemplate = channel.unary_unary(
                '/narrator.templates.v1.TemplateService/UpsertTemplate',
                request_serializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.UpsertTemplateRequest.SerializeToString,
                response_deserializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.UpsertTemplateResponse.FromString,
                _registered_method=True)


class TemplateServiceServicer(object):
    """---------- Сервис ----------
    """

    def GetTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindTemplates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpsertTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TemplateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTemplate,
                    request_deserializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.GetTemplateRequest.FromString,
                    response_serializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.GetTemplateResponse.SerializeToString,
            ),
            'FindTemplates': grpc.unary_unary_rpc_method_handler(
                    servicer.FindTemplates,
                    request_deserializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.FindTemplatesRequest.FromString,
                    response_serializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.FindTemplatesResponse.SerializeToString,
            ),
            'UpsertTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertTemplate,
                    request_deserializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.UpsertTemplateRequest.FromString,
                    response_serializer=narrator_dot_templates_dot_v1_dot_template__service__pb2.UpsertTemplateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'narrator.templates.v1.TemplateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TemplateService(object):
    """---------- Сервис ----------
    """

    @staticmethod
    def GetTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/narrator.templates.v1.TemplateService/GetTemplate',
            narrator_dot_templates_dot_v1_dot_template__service__pb2.GetTemplateRequest.SerializeToString,
            narrator_dot_templates_dot_v1_dot_template__service__pb2.GetTemplateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindTemplates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/narrator.templates.v1.TemplateService/FindTemplates',
            narrator_dot_templates_dot_v1_dot_template__service__pb2.FindTemplatesRequest.SerializeToString,
            narrator_dot_templates_dot_v1_dot_template__service__pb2.FindTemplatesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpsertTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/narrator.templates.v1.TemplateService/UpsertTemplate',
            narrator_dot_templates_dot_v1_dot_template__service__pb2.UpsertTemplateRequest.SerializeToString,
            narrator_dot_templates_dot_v1_dot_template__service__pb2.UpsertTemplateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
