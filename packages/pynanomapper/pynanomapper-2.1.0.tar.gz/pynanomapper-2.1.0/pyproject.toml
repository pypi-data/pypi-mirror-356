[tool.poetry]
name = "pynanomapper"
version = "2.1.0"
description = "eNanoMapper API client"
authors = [
  "Nina Jeliazkova <jeliazkova.nina@gmail.com>",
]
maintainers = [
  "Luchesar Iliev <luchesar.iliev@gmail.com>",
  "Vedrin Jeliazkov <vedrin.jeliazkov@gmail.com>",
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/ideaconsult/pynanomapper"
documentation = "https://github.com/ideaconsult/notebooks-ambit/tree/master/enanomapper"
keywords = [
  "ambit",
  "cheminformatics",
  "enanomapper",
  "nanoinformatics",
]
classifiers = [
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Libraries",
]
packages = [
  { include = "pynanomapper", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
jproperties = "^2.1.1"
measurement = "^3.2.2"
nexusformat = "^1.0.2"
openpyxl = "^3.1.2"
pandas = "^2.0.3"
pyambit = "^0.0.2"
pyyaml = ">=5.1"
requests = "^2.31.0"
xlsxwriter = "^3.1.9"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/ideaconsult/pynanomapper/issues"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"

[tool.pytest.ini_options]
pythonpath = ["src"]
minversion = "8.0"
addopts = "-ra -q"
testpaths = [
    "tests",
    "integration",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
