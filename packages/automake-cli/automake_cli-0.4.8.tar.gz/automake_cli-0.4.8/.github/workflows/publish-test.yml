name: Test Publish to TestPyPI

on:
  workflow_dispatch:
    inputs:
      test_version:
        description: 'Test version suffix (e.g., "dev1", "rc1")'
        required: false
        default: 'dev1'
        type: string

env:
  PYTHON_VERSION: "3.12"

jobs:
  test-publish:
    name: Test Publish to TestPyPI
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/automake-cli
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Modify version for test
      run: |
        # Get current version and add test suffix
        CURRENT_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
        TEST_VERSION="${CURRENT_VERSION}.${{ inputs.test_version }}"

        echo "Original version: $CURRENT_VERSION"
        echo "Test version: $TEST_VERSION"

        # Update pyproject.toml with test version
        sed -i "s/version = \"$CURRENT_VERSION\"/version = \"$TEST_VERSION\"/" pyproject.toml

        # Verify the change
        NEW_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
        echo "Updated version: $NEW_VERSION"

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests
      run: |
        uv run pytest -q --disable-warnings --tb=short --cov=automake --cov-report=term-missing --cov-fail-under=80

    - name: Build package
      run: uv build

    - name: Verify package contents
      run: |
        echo "üì¶ Built packages:"
        ls -la dist/

        echo "üîç Checking wheel contents:"
        uv run python -m zipfile -l dist/*.whl

        echo "üß™ Testing package installation:"
        uv venv test-env
        source test-env/bin/activate
        uv pip install dist/*.whl

        echo "‚úÖ Testing both entry points:"
        automake --version
        automake-cli --version

        # Verify both commands show the same version
        AUTOMAKE_VERSION=$(automake --version | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+\.[a-zA-Z0-9]\+')
        AUTOMAKE_CLI_VERSION=$(automake-cli --version | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+\.[a-zA-Z0-9]\+')

        if [ "$AUTOMAKE_VERSION" != "$AUTOMAKE_CLI_VERSION" ]; then
          echo "‚ùå Version mismatch between entry points"
          exit 1
        fi
        echo "‚úÖ Both entry points working correctly with version $AUTOMAKE_VERSION"

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        print-hash: true
        verbose: true

    - name: Verify TestPyPI publication
      run: |
        echo "‚è≥ Waiting for package to be available on TestPyPI..."
        sleep 30

        # Try to install from TestPyPI to verify publication
        PACKAGE_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")

        echo "üîç Attempting to install automake-cli==$PACKAGE_VERSION from TestPyPI..."
        uv venv verify-env
        source verify-env/bin/activate

        # Retry logic for TestPyPI propagation
        for i in {1..5}; do
          if uv pip install "automake-cli==$PACKAGE_VERSION" --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/; then
            echo "‚úÖ Package successfully installed from TestPyPI"
            automake-cli --version
            break
          else
            echo "‚è≥ Attempt $i failed, waiting 30 seconds..."
            sleep 30
          fi
        done

    - name: Test uvx installation
      run: |
        echo "üß™ Testing uvx installation from TestPyPI..."
        PACKAGE_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")

        # Test uvx with TestPyPI
        if uvx --from "automake-cli==$PACKAGE_VERSION" --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ automake-cli --version; then
          echo "‚úÖ uvx installation from TestPyPI successful"
        else
          echo "‚ö†Ô∏è uvx installation from TestPyPI failed (this might be expected due to TestPyPI limitations)"
        fi
