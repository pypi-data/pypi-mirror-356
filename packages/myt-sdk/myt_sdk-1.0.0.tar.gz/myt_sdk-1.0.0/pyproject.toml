[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "myt-sdk"
description = "MYT SDK - 魔云腾SDK通用包，用于自动下载、管理和启动MYT SDK，支持完整的API客户端功能"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "MIT"}
authors = [
    {name = "MYT Team", email = "kuqitt1@163.com"},
]
maintainers = [
    {name = "MYT Team", email = "kuqitt1@163.com"},
]
keywords = [
    "myt", "sdk", "automation", "android", "container", "api", "client",
    "device", "management", "camera", "sensor", "location", "proxy",
    "video", "streaming", "rtmp", "webrtc", "monitoring", "github"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
    "Environment :: Console",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English",
]
dependencies = [
    "requests>=2.25.0",
    "psutil>=5.8.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/kuqitt/myt_sdk"
Documentation = "https://github.com/kuqitt/myt_sdk/blob/main/README.md"
Repository = "https://github.com/kuqitt/myt_sdk"
"Bug Reports" = "https://github.com/kuqitt/myt_sdk/issues"
Changelog = "https://github.com/kuqitt/myt_sdk/blob/main/CHANGELOG.md"
"API Documentation" = "https://github.com/kuqitt/myt_sdk/tree/main/docs"
Examples = "https://github.com/kuqitt/myt_sdk/tree/main/examples"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "twine>=3.0",
    "wheel>=0.36",
    "setuptools>=45.0",
]
monitoring = [
    "matplotlib>=3.0",
    "pandas>=1.0",
]
docs = [
    "sphinx>=3.0",
    "sphinx-rtd-theme>=0.5",
]
all = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "twine>=3.0",
    "wheel>=0.36",
    "setuptools>=45.0",
    "matplotlib>=3.0",
    "pandas>=1.0",
    "sphinx>=3.0",
    "sphinx-rtd-theme>=0.5",
]

[project.scripts]
myt-sdk = "py_myt.cli:main"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["src"] by default)
include = ["py_myt*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["tests*", "docs*", "examples*"]  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[tool.setuptools.package-data]
py_myt = ["*.txt", "*.md"]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded by ^/ will apply only to files and directories
# in the root of the project.
^/setup.py
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["py_myt"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.setuptools_scm]
write_to = "py_myt/_version.py"
fallback_version = "1.0.0"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
