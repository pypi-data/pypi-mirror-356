name: Build and Publish to PyPI

on:
  # Only trigger on pushes to main for semantic release
  push:
    branches: [main]
  # Trigger on pull requests to main
  pull_request:
    branches: [main]

  # Manual triggering
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest ruff
          pip install -e .[dev]

      - name: Lint with ruff
        run: |
          ruff check .

      - name: Run tests
        run: |
          pytest -v tests/

  semantic-release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use a custom token to trigger release events
          token: ${{ secrets.SEMANTIC_RELEASE_TOKEN || secrets.GITHUB_TOKEN }}

      # Debug: Show recent commits
      - name: Show recent commits
        run: |
          echo "Recent commits:"
          git log --oneline -10
          echo "Current version from git tags:"
          git tag --sort=-version:refname | head -5 || echo "No tags found"

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.SEMANTIC_RELEASE_TOKEN || secrets.GITHUB_TOKEN }}
          verbose:
            true

            # Debug: Show release outputs
      - name: Show release outputs
        run: |
          echo "Released: ${{ steps.release.outputs.released }}"
          echo "Version: ${{ steps.release.outputs.version }}"
          echo "Tag: ${{ steps.release.outputs.tag }}"

  build-and-publish:
    # Only run if a release was created
    if: needs.semantic-release.outputs.released == 'true'
    needs: semantic-release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.semantic-release.outputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check distribution
        run: |
          twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
