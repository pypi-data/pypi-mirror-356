from __future__ import annotations
import openassetio._openassetio
import openassetio._openassetio.managerApi
import openassetio._openassetio.trait
import openassetio._openassetio.ui.access
import openassetio._openassetio.ui.hostApi
import typing
__all__ = ['UIDelegateInterface', 'UIDelegateRequest', 'UIDelegateStateInterface']
class UIDelegateInterface:
    def __init__(self) -> None:
        ...
    def close(self, hostSession: openassetio._openassetio.managerApi.HostSession) -> None:
        ...
    def displayName(self) -> str:
        ...
    def identifier(self) -> str:
        ...
    def info(self) -> dict[str, bool | int | float | str]:
        ...
    def initialize(self, managerSettings: dict[str, bool | int | float | str], hostSession: openassetio._openassetio.managerApi.HostSession) -> None:
        ...
    def populateUI(self, uiTraitsData: openassetio._openassetio.trait.TraitsData, uiAccess: openassetio._openassetio.ui.access.UIAccess, uiRequest: UIDelegateRequest, context: openassetio._openassetio.Context, hostSession: openassetio._openassetio.managerApi.HostSession) -> UIDelegateStateInterface | None:
        ...
    def settings(self, hostSession: openassetio._openassetio.managerApi.HostSession) -> dict[str, bool | int | float | str]:
        ...
    def uiPolicy(self, uiTraitSet: set[str], uiAccess: openassetio._openassetio.ui.access.UIAccess, context: openassetio._openassetio.Context, hostSession: openassetio._openassetio.managerApi.HostSession) -> openassetio._openassetio.trait.TraitsData:
        ...
class UIDelegateRequest:
    def __init__(self, uiDelegateRequestInterface: openassetio._openassetio.ui.hostApi.UIDelegateRequestInterface) -> None:
        ...
    def entityReferences(self) -> list[openassetio._openassetio.EntityReference]:
        ...
    def entityTraitsDatas(self) -> list[openassetio._openassetio.trait.TraitsData]:
        ...
    def nativeData(self) -> typing.Any:
        ...
    def stateChangedCallback(self) -> typing.Callable[[UIDelegateStateInterface], None] | None:
        ...
class UIDelegateStateInterface:
    def __init__(self) -> None:
        ...
    def entityReferences(self) -> list[openassetio._openassetio.EntityReference]:
        ...
    def entityTraitsDatas(self) -> list[openassetio._openassetio.trait.TraitsData]:
        ...
    def nativeData(self) -> typing.Any:
        ...
    def updateRequestCallback(self) -> typing.Callable[[UIDelegateRequest | None], None] | None:
        ...
