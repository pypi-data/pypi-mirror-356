Metadata-Version: 2.3
Name: django-amiqus
Version: 0.4
Summary: Django app for integration with Amiqus.
License: MIT
Author: YunoJuno
Author-email: code@yunojuno.com
Maintainer: YunoJuno
Maintainer-email: code@yunojuno.com
Requires-Python: >=3.10,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django :: 5.0
Classifier: Framework :: Django :: 5.1
Classifier: Framework :: Django :: 5.2
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Dist: django (>=4.2,<6.0)
Requires-Dist: python-dateutil
Requires-Dist: requests
Requires-Dist: simplejson
Project-URL: Documentation, https://github.com/yunojuno/django-amiqus
Project-URL: Homepage, https://github.com/yunojuno/django-amiqus
Project-URL: Repository, https://github.com/yunojuno/django-amiqus
Description-Content-Type: text/markdown

# django-amiqus

> ⚠️ **NOTICE** ⚠️
>
> This package is scheduled to be moved to a private repository soon. Please do not rely on this
> public version for new projects.

Django app for integration with the Amiqus API.

The current version supports Django 4.2+ and Python 3.10+.

## Background

Amiqus is an online identity verification service. We use this library to integrate with it.

## Amiqus workflow

Core entities included in this app are `Client`, `Record`, `Step`, `Check`, `Form`, and `Review`

### `Client`

Represents a person against whom you wish to carry out an identity or background check. They are
unique within Amiqus, although it is possible to carry out multiple checks over a period of time
against one user.

### `Record`

A collection of `Steps` that a `Client` is required to complete. The `Client` receives a link where
they are presented with the various `Steps`.

### `Step`

Can be either a `Check` or a `Form`. The Amiqus platform does support `Document` type `Steps`, but
these are not currently supported by this package.

### `Check`

May each be of the types described in `Check.CheckType`. This includes things like photo ID
verification and watchlist monitoring.

### `Form`

Defined in the Amiqus platform and consists of one or more questions that the `Client` must answer.

### `Review`

Each `Step` may be reviewed in the Amiqus interface. This creates a `Review` object that can be
queried via the API .

## Installation

The project is available through PyPI as `django-amiqus`:

```bash
$ pip install django-amiqus
```

## Tests

If you want to run the tests manually, install `poetry`.

```bash
$ poetry install
$ poetry run pytest
```

If you are hacking on the project, please keep coverage up.

## Contributing

Standard GH rules apply: clone the repo to your own account, make sure you update the tests, and
submit a pull request.

