"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Empty(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Empty = Empty

class StringVector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEM_FIELD_NUMBER: builtins.int
    @property
    def item(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        item : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["item",b"item"]) -> None: ...
global___StringVector = StringVector

class DoubleVector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEM_FIELD_NUMBER: builtins.int
    @property
    def item(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(self,
        *,
        item : typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["item",b"item"]) -> None: ...
global___DoubleVector = DoubleVector

class BoolVector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEM_FIELD_NUMBER: builtins.int
    @property
    def item(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]: ...
    def __init__(self,
        *,
        item : typing.Optional[typing.Iterable[builtins.bool]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["item",b"item"]) -> None: ...
global___BoolVector = BoolVector

class Int64Vector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEM_FIELD_NUMBER: builtins.int
    @property
    def item(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(self,
        *,
        item : typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["item",b"item"]) -> None: ...
global___Int64Vector = Int64Vector

class VariantMap(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Variant: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Variant] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ITEM_FIELD_NUMBER: builtins.int
    @property
    def item(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Variant]: ...
    def __init__(self,
        *,
        item : typing.Optional[typing.Mapping[typing.Text, global___Variant]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["item",b"item"]) -> None: ...
global___VariantMap = VariantMap

class VariantVector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEM_FIELD_NUMBER: builtins.int
    @property
    def item(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Variant]: ...
    def __init__(self,
        *,
        item : typing.Optional[typing.Iterable[global___Variant]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["item",b"item"]) -> None: ...
global___VariantVector = VariantVector

class Variant(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMPTY_STATE_FIELD_NUMBER: builtins.int
    BOOL_STATE_FIELD_NUMBER: builtins.int
    INT64_STATE_FIELD_NUMBER: builtins.int
    DOUBLE_STATE_FIELD_NUMBER: builtins.int
    STRING_STATE_FIELD_NUMBER: builtins.int
    BOOL_VECTOR_STATE_FIELD_NUMBER: builtins.int
    INT64_VECTOR_STATE_FIELD_NUMBER: builtins.int
    DOUBLE_VECTOR_STATE_FIELD_NUMBER: builtins.int
    STRING_VECTOR_STATE_FIELD_NUMBER: builtins.int
    VARIANT_VECTOR_STATE_FIELD_NUMBER: builtins.int
    VARIANT_MAP_STATE_FIELD_NUMBER: builtins.int
    @property
    def empty_state(self) -> global___Empty: ...
    bool_state: builtins.bool = ...
    int64_state: builtins.int = ...
    double_state: builtins.float = ...
    string_state: typing.Text = ...
    @property
    def bool_vector_state(self) -> global___BoolVector: ...
    @property
    def int64_vector_state(self) -> global___Int64Vector: ...
    @property
    def double_vector_state(self) -> global___DoubleVector: ...
    @property
    def string_vector_state(self) -> global___StringVector: ...
    @property
    def variant_vector_state(self) -> global___VariantVector: ...
    @property
    def variant_map_state(self) -> global___VariantMap: ...
    def __init__(self,
        *,
        empty_state : typing.Optional[global___Empty] = ...,
        bool_state : builtins.bool = ...,
        int64_state : builtins.int = ...,
        double_state : builtins.float = ...,
        string_state : typing.Text = ...,
        bool_vector_state : typing.Optional[global___BoolVector] = ...,
        int64_vector_state : typing.Optional[global___Int64Vector] = ...,
        double_vector_state : typing.Optional[global___DoubleVector] = ...,
        string_vector_state : typing.Optional[global___StringVector] = ...,
        variant_vector_state : typing.Optional[global___VariantVector] = ...,
        variant_map_state : typing.Optional[global___VariantMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["as",b"as","bool_state",b"bool_state","bool_vector_state",b"bool_vector_state","double_state",b"double_state","double_vector_state",b"double_vector_state","empty_state",b"empty_state","int64_state",b"int64_state","int64_vector_state",b"int64_vector_state","string_state",b"string_state","string_vector_state",b"string_vector_state","variant_map_state",b"variant_map_state","variant_vector_state",b"variant_vector_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["as",b"as","bool_state",b"bool_state","bool_vector_state",b"bool_vector_state","double_state",b"double_state","double_vector_state",b"double_vector_state","empty_state",b"empty_state","int64_state",b"int64_state","int64_vector_state",b"int64_vector_state","string_state",b"string_state","string_vector_state",b"string_vector_state","variant_map_state",b"variant_map_state","variant_vector_state",b"variant_vector_state"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["as",b"as"]) -> typing.Optional[typing_extensions.Literal["empty_state","bool_state","int64_state","double_state","string_state","bool_vector_state","int64_vector_state","double_vector_state","string_vector_state","variant_vector_state","variant_map_state"]]: ...
global___Variant = Variant
