"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _MonitorType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _MonitorTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MonitorType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    Residual: MonitorType.ValueType = ...  # 0
    """Solver residuals."""

    Solution: MonitorType.ValueType = ...  # 1
    """Solution monitors."""

class MonitorType(_MonitorType, metaclass=_MonitorTypeEnumTypeWrapper):
    """*
    Monitor type.
    """
    pass

Residual: MonitorType.ValueType = ...  # 0
"""Solver residuals."""

Solution: MonitorType.ValueType = ...  # 1
"""Solution monitors."""

global___MonitorType = MonitorType


class _XAxisType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _XAxisTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_XAxisType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    Unset: XAxisType.ValueType = ...  # 0
    """Axis unset."""

    Iteration: XAxisType.ValueType = ...  # 1
    """Iteration axis."""

    Time: XAxisType.ValueType = ...  # 2
    """Time axis."""

class XAxisType(_XAxisType, metaclass=_XAxisTypeEnumTypeWrapper):
    """*
    X-axis type.
    """
    pass

Unset: XAxisType.ValueType = ...  # 0
"""Axis unset."""

Iteration: XAxisType.ValueType = ...  # 1
"""Iteration axis."""

Time: XAxisType.ValueType = ...  # 2
"""Time axis."""

global___XAxisType = XAxisType


class UnitData(google.protobuf.message.Message):
    """*
    Unit data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    UNIT_FIELD_NUMBER: builtins.int
    FACTOR_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Unit name"""

    unit: typing.Text = ...
    """Unit e.g. Fahrenheit"""

    factor: builtins.float = ...
    """Unit factor e.g. for Fahrenheit it will be 0.5555556."""

    offset: builtins.float = ...
    """Unit offset e.g. for Fahrenheit it will be 459.67."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        unit : typing.Text = ...,
        factor : builtins.float = ...,
        offset : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["factor",b"factor","name",b"name","offset",b"offset","unit",b"unit"]) -> None: ...
global___UnitData = UnitData

class MonitorSet(google.protobuf.message.Message):
    """*
    Monitor set definition provided by GetMonitors.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    XLABEL_FIELD_NUMBER: builtins.int
    YLABEL_FIELD_NUMBER: builtins.int
    FREQUENCY_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    UNITINFO_FIELD_NUMBER: builtins.int
    AXIS_FIELD_NUMBER: builtins.int
    MONITORS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Monitor set name."""

    title: typing.Text = ...
    """Monitor set title."""

    xlabel: typing.Text = ...
    """Monitor set xlabel."""

    ylabel: typing.Text = ...
    """Monitor set ylabel."""

    frequency: builtins.int = ...
    """Monitor set frequency."""

    type: global___MonitorType.ValueType = ...
    """Monitor set type."""

    @property
    def unitinfo(self) -> global___UnitData:
        """Monitor set unit info."""
        pass
    axis: global___XAxisType.ValueType = ...
    """X-axis type."""

    @property
    def monitors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Monitor set monitors."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        title : typing.Text = ...,
        xlabel : typing.Text = ...,
        ylabel : typing.Text = ...,
        frequency : builtins.int = ...,
        type : global___MonitorType.ValueType = ...,
        unitinfo : typing.Optional[global___UnitData] = ...,
        axis : global___XAxisType.ValueType = ...,
        monitors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["unitinfo",b"unitinfo"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["axis",b"axis","frequency",b"frequency","monitors",b"monitors","name",b"name","title",b"title","type",b"type","unitinfo",b"unitinfo","xlabel",b"xlabel","ylabel",b"ylabel"]) -> None: ...
global___MonitorSet = MonitorSet

class XAxisData(google.protobuf.message.Message):
    """*
    X axis data i.e. axis type and index provided by monitors streaming.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    XAXISTYPE_FIELD_NUMBER: builtins.int
    XAXISINDEX_FIELD_NUMBER: builtins.int
    xaxistype: global___XAxisType.ValueType = ...
    """X-axis type."""

    xaxisindex: builtins.int = ...
    """X-axis index."""

    def __init__(self,
        *,
        xaxistype : global___XAxisType.ValueType = ...,
        xaxisindex : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["xaxisindex",b"xaxisindex","xaxistype",b"xaxistype"]) -> None: ...
global___XAxisData = XAxisData

class MonitorData(google.protobuf.message.Message):
    """*
    Y axis data i.e. monitor name and value provided by monitors streaming.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    value: builtins.float = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        value : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","value",b"value"]) -> None: ...
global___MonitorData = MonitorData

class GetMonitorsRequest(google.protobuf.message.Message):
    """*
    GetMonitors Request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetMonitorsRequest = GetMonitorsRequest

class GetMonitorsResponse(google.protobuf.message.Message):
    """*
    GetMonitors Response.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MONITORSET_FIELD_NUMBER: builtins.int
    @property
    def monitorset(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MonitorSet]: ...
    def __init__(self,
        *,
        monitorset : typing.Optional[typing.Iterable[global___MonitorSet]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["monitorset",b"monitorset"]) -> None: ...
global___GetMonitorsResponse = GetMonitorsResponse

class StreamingRequest(google.protobuf.message.Message):
    """*
    Streaming Request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___StreamingRequest = StreamingRequest

class StreamingResponse(google.protobuf.message.Message):
    """*
    Streaming Response.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    XAXISDATA_FIELD_NUMBER: builtins.int
    YAXISVALUES_FIELD_NUMBER: builtins.int
    @property
    def xaxisdata(self) -> global___XAxisData: ...
    @property
    def yaxisvalues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MonitorData]: ...
    def __init__(self,
        *,
        xaxisdata : typing.Optional[global___XAxisData] = ...,
        yaxisvalues : typing.Optional[typing.Iterable[global___MonitorData]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["xaxisdata",b"xaxisdata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["xaxisdata",b"xaxisdata","yaxisvalues",b"yaxisvalues"]) -> None: ...
global___StreamingResponse = StreamingResponse
