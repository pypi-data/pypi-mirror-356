"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.fluent.v0.common_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SchemePointer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SchemePair(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CAR_FIELD_NUMBER: builtins.int
        CDR_FIELD_NUMBER: builtins.int
        @property
        def car(self) -> global___SchemePointer: ...
        @property
        def cdr(self) -> global___SchemePointer: ...
        def __init__(self,
            *,
            car : typing.Optional[global___SchemePointer] = ...,
            cdr : typing.Optional[global___SchemePointer] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["car",b"car","cdr",b"cdr"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["car",b"car","cdr",b"cdr"]) -> None: ...

    class SchemeList(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ITEM_FIELD_NUMBER: builtins.int
        @property
        def item(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SchemePointer]: ...
        def __init__(self,
            *,
            item : typing.Optional[typing.Iterable[global___SchemePointer]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["item",b"item"]) -> None: ...

    EMPTY_FIELD_NUMBER: builtins.int
    SYM_FIELD_NUMBER: builtins.int
    PAIR_FIELD_NUMBER: builtins.int
    LIST_FIELD_NUMBER: builtins.int
    FLONUM_FIELD_NUMBER: builtins.int
    FIXEDNUM_FIELD_NUMBER: builtins.int
    C_FIELD_NUMBER: builtins.int
    STR_FIELD_NUMBER: builtins.int
    B_FIELD_NUMBER: builtins.int
    @property
    def empty(self) -> ansys.api.fluent.v0.common_pb2.Empty: ...
    sym: typing.Text = ...
    @property
    def pair(self) -> global___SchemePointer.SchemePair: ...
    @property
    def list(self) -> global___SchemePointer.SchemeList: ...
    flonum: builtins.float = ...
    fixednum: builtins.int = ...
    c: typing.Text = ...
    str: typing.Text = ...
    b: builtins.bool = ...
    def __init__(self,
        *,
        empty : typing.Optional[ansys.api.fluent.v0.common_pb2.Empty] = ...,
        sym : typing.Text = ...,
        pair : typing.Optional[global___SchemePointer.SchemePair] = ...,
        list : typing.Optional[global___SchemePointer.SchemeList] = ...,
        flonum : builtins.float = ...,
        fixednum : builtins.int = ...,
        c : typing.Text = ...,
        str : typing.Text = ...,
        b : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["b",b"b","c",b"c","empty",b"empty","fixednum",b"fixednum","flonum",b"flonum","list",b"list","pair",b"pair","str",b"str","sym",b"sym","val",b"val"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["b",b"b","c",b"c","empty",b"empty","fixednum",b"fixednum","flonum",b"flonum","list",b"list","pair",b"pair","str",b"str","sym",b"sym","val",b"val"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["val",b"val"]) -> typing.Optional[typing_extensions.Literal["empty","sym","pair","list","flonum","fixednum","c","str","b"]]: ...
global___SchemePointer = SchemePointer
