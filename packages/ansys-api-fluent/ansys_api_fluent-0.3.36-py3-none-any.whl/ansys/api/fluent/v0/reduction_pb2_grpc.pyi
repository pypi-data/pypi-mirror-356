"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.fluent.v0.reduction_pb2
import grpc

class ReductionStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Area: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.AreaRequest,
        ansys.api.fluent.v0.reduction_pb2.AreaResponse] = ...

    AreaAve: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.AreaAveRequest,
        ansys.api.fluent.v0.reduction_pb2.AreaAveResponse] = ...

    AreaInt: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.AreaIntRequest,
        ansys.api.fluent.v0.reduction_pb2.AreaIntResponse] = ...

    Centroid: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.CentroidRequest,
        ansys.api.fluent.v0.reduction_pb2.CentroidResponse] = ...

    Count: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.CountRequest,
        ansys.api.fluent.v0.reduction_pb2.CountResponse] = ...

    CountIf: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.CountIfRequest,
        ansys.api.fluent.v0.reduction_pb2.CountIfResponse] = ...

    Force: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.ForceRequest,
        ansys.api.fluent.v0.reduction_pb2.ForceResponse] = ...

    MassAve: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.MassAveRequest,
        ansys.api.fluent.v0.reduction_pb2.MassAveResponse] = ...

    MassFlowAve: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.MassFlowAveRequest,
        ansys.api.fluent.v0.reduction_pb2.MassFlowAveResponse] = ...

    MassFlowAveAbs: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.MassFlowAveAbsRequest,
        ansys.api.fluent.v0.reduction_pb2.MassFlowAveAbsResponse] = ...

    MassFlowInt: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.MassFlowIntRequest,
        ansys.api.fluent.v0.reduction_pb2.MassFlowIntResponse] = ...

    MassInt: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.MassIntRequest,
        ansys.api.fluent.v0.reduction_pb2.MassIntResponse] = ...

    Maximum: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.MaximumRequest,
        ansys.api.fluent.v0.reduction_pb2.MaximumResponse] = ...

    Minimum: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.MinimumRequest,
        ansys.api.fluent.v0.reduction_pb2.MinimumResponse] = ...

    PressureForce: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.PressureForceRequest,
        ansys.api.fluent.v0.reduction_pb2.PressureForceResponse] = ...

    ViscousForce: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.ViscousForceRequest,
        ansys.api.fluent.v0.reduction_pb2.ViscousForceResponse] = ...

    Volume: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.VolumeRequest,
        ansys.api.fluent.v0.reduction_pb2.VolumeResponse] = ...

    VolumeAve: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.VolumeAveRequest,
        ansys.api.fluent.v0.reduction_pb2.VolumeAveResponse] = ...

    VolumeInt: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.VolumeIntRequest,
        ansys.api.fluent.v0.reduction_pb2.VolumeIntResponse] = ...

    Moment: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.MomentRequest,
        ansys.api.fluent.v0.reduction_pb2.MomentResponse] = ...

    Sum: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.SumRequest,
        ansys.api.fluent.v0.reduction_pb2.SumResponse] = ...

    SumIf: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.reduction_pb2.SumIfRequest,
        ansys.api.fluent.v0.reduction_pb2.SumIfResponse] = ...


class ReductionServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Area(self,
        request: ansys.api.fluent.v0.reduction_pb2.AreaRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.AreaResponse: ...

    @abc.abstractmethod
    def AreaAve(self,
        request: ansys.api.fluent.v0.reduction_pb2.AreaAveRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.AreaAveResponse: ...

    @abc.abstractmethod
    def AreaInt(self,
        request: ansys.api.fluent.v0.reduction_pb2.AreaIntRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.AreaIntResponse: ...

    @abc.abstractmethod
    def Centroid(self,
        request: ansys.api.fluent.v0.reduction_pb2.CentroidRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.CentroidResponse: ...

    @abc.abstractmethod
    def Count(self,
        request: ansys.api.fluent.v0.reduction_pb2.CountRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.CountResponse: ...

    @abc.abstractmethod
    def CountIf(self,
        request: ansys.api.fluent.v0.reduction_pb2.CountIfRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.CountIfResponse: ...

    @abc.abstractmethod
    def Force(self,
        request: ansys.api.fluent.v0.reduction_pb2.ForceRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.ForceResponse: ...

    @abc.abstractmethod
    def MassAve(self,
        request: ansys.api.fluent.v0.reduction_pb2.MassAveRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.MassAveResponse: ...

    @abc.abstractmethod
    def MassFlowAve(self,
        request: ansys.api.fluent.v0.reduction_pb2.MassFlowAveRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.MassFlowAveResponse: ...

    @abc.abstractmethod
    def MassFlowAveAbs(self,
        request: ansys.api.fluent.v0.reduction_pb2.MassFlowAveAbsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.MassFlowAveAbsResponse: ...

    @abc.abstractmethod
    def MassFlowInt(self,
        request: ansys.api.fluent.v0.reduction_pb2.MassFlowIntRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.MassFlowIntResponse: ...

    @abc.abstractmethod
    def MassInt(self,
        request: ansys.api.fluent.v0.reduction_pb2.MassIntRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.MassIntResponse: ...

    @abc.abstractmethod
    def Maximum(self,
        request: ansys.api.fluent.v0.reduction_pb2.MaximumRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.MaximumResponse: ...

    @abc.abstractmethod
    def Minimum(self,
        request: ansys.api.fluent.v0.reduction_pb2.MinimumRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.MinimumResponse: ...

    @abc.abstractmethod
    def PressureForce(self,
        request: ansys.api.fluent.v0.reduction_pb2.PressureForceRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.PressureForceResponse: ...

    @abc.abstractmethod
    def ViscousForce(self,
        request: ansys.api.fluent.v0.reduction_pb2.ViscousForceRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.ViscousForceResponse: ...

    @abc.abstractmethod
    def Volume(self,
        request: ansys.api.fluent.v0.reduction_pb2.VolumeRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.VolumeResponse: ...

    @abc.abstractmethod
    def VolumeAve(self,
        request: ansys.api.fluent.v0.reduction_pb2.VolumeAveRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.VolumeAveResponse: ...

    @abc.abstractmethod
    def VolumeInt(self,
        request: ansys.api.fluent.v0.reduction_pb2.VolumeIntRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.VolumeIntResponse: ...

    @abc.abstractmethod
    def Moment(self,
        request: ansys.api.fluent.v0.reduction_pb2.MomentRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.MomentResponse: ...

    @abc.abstractmethod
    def Sum(self,
        request: ansys.api.fluent.v0.reduction_pb2.SumRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.SumResponse: ...

    @abc.abstractmethod
    def SumIf(self,
        request: ansys.api.fluent.v0.reduction_pb2.SumIfRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.reduction_pb2.SumIfResponse: ...


def add_ReductionServicer_to_server(servicer: ReductionServicer, server: grpc.Server) -> None: ...
