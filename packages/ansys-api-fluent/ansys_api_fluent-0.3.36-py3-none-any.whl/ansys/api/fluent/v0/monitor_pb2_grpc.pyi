"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.fluent.v0.monitor_pb2
import grpc
import typing

class MonitorStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetMonitors: grpc.UnaryUnaryMultiCallable[
        ansys.api.fluent.v0.monitor_pb2.GetMonitorsRequest,
        ansys.api.fluent.v0.monitor_pb2.GetMonitorsResponse] = ...
    """Get monitors info i.e. monitors name and their properties e.g. x-label, y-label, title etc"""

    BeginStreaming: grpc.UnaryStreamMultiCallable[
        ansys.api.fluent.v0.monitor_pb2.StreamingRequest,
        ansys.api.fluent.v0.monitor_pb2.StreamingResponse] = ...
    """Begin monitors data streaming i.e. monitors x-values and corresponding y-values."""


class MonitorServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetMonitors(self,
        request: ansys.api.fluent.v0.monitor_pb2.GetMonitorsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.fluent.v0.monitor_pb2.GetMonitorsResponse:
        """Get monitors info i.e. monitors name and their properties e.g. x-label, y-label, title etc"""
        pass

    @abc.abstractmethod
    def BeginStreaming(self,
        request: ansys.api.fluent.v0.monitor_pb2.StreamingRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.fluent.v0.monitor_pb2.StreamingResponse]:
        """Begin monitors data streaming i.e. monitors x-values and corresponding y-values."""
        pass


def add_MonitorServicer_to_server(servicer: MonitorServicer, server: grpc.Server) -> None: ...
