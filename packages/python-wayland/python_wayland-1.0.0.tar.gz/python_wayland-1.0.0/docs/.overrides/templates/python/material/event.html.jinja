{% block logs scoped %}
  {{ log.debug("Rendering " + class.path) }}
{% endblock logs %}

<div class="doc doc-object doc-events">
  {% with obj = class, html_id = class.path, all_members = class.all_members %}

    {#- Determine path display settings -#}
    {% if root %}
      {% set show_full_path = config.show_root_full_path %}
      {% set root_members = true %}
    {% elif root_members %}
      {% set show_full_path = config.show_root_members_full_path or config.show_object_full_path %}
      {% set root_members = false %}
    {% else %}
      {% set show_full_path = config.show_object_full_path %}
    {% endif %}

    {% set class_name = class.path if show_full_path else class.name %}
    {% set has_init = config.merge_init_into_class and "__init__" in all_members %}
    {% set init_function = all_members["__init__"] if has_init else none %}

    {#- Class heading section -#}
    {% if not root or config.show_root_heading %}
      {% block heading scoped %}
        <h3><code class="doc-symbol doc-symbol-heading doc-symbol-events"></code>
          {% if config.heading and root %}
            {{ config.heading }}
          {% elif config.separate_signature %}
            <span class="doc doc-object-name doc-class-name">{{ class_name }}</span>
          {% elif has_init %}
            {% with function = init_function %}
              {%+ filter highlight(language="python", inline=True) -%}
                {{ class_name }}{% include "signature"|get_template with context %}
              {%- endfilter %}
            {% endwith %}
          {% else %}
            <code>{{ class_name }}</code>
          {% endif %}
        </h3>
      {% endblock heading %}

      {% block labels scoped %}
        {% with labels = class.labels %}
          {% include "labels"|get_template with context %}
        {% endwith %}
      {% endblock labels %}

      {#- Signature section for merged __init__ -#}
      {% block signature scoped %}
        {% if has_init and (init_function.overloads or config.separate_signature) %}
          {% with function = init_function %}
            {% if function.overloads and config.show_overloads %}
              <div class="doc-overloads">
                {% for overload in function.overloads %}
                  {% filter format_signature(overload, config.line_length, annotations=True, crossrefs=config.signature_crossrefs) %}
                    {{ class.name }}
                  {% endfilter %}
                {% endfor %}
              </div>
            {% endif %}
            {% if config.separate_signature %}
              {% filter format_signature(function, config.line_length, crossrefs=config.signature_crossrefs) %}
                {{ class.name }}
              {% endfilter %}
            {% endif %}
          {% endwith %}
        {% endif %}
      {% endblock signature %}
    {% endif %}

    {#- Class contents -#}
    <div class="doc doc-contents {% if root %}first{% endif %}">
      {% block contents scoped %}
        <div class="doc doc-children">
          {% for child in obj.all_members
              |filter_objects(
                filters=config.filters,
                members_list=members_list,
                inherited_members=config.inherited_members,
                keep_no_docstrings=config.show_if_no_docstring,
              )
              |order_members(config.members_order, members_list)
          %}
            {#- Skip __init__ if merged and only show visible members -#}
            {% if child.is_function
                and not (obj.is_class and child.name == "__init__" and config.merge_init_into_class)
                and (config.filters == "public" or members_list is not none or child.is_public) %}

              {#- Function member rendering -#}
              {% with function = child %}
                <div class="doc doc-object doc-function">
                  {% with obj = function, html_id = function.path %}
                    {#- Reuse path display settings from parent scope -#}
                    {% set function_name = function.path if show_full_path else function.name %}
                    {% set symbol_type = "event" %}
                    {% set toc_symbol = ('<code class="doc-symbol doc-symbol-toc doc-symbol-' + symbol_type + '"></code>&nbsp;')|safe if config.show_symbol_type_toc else '' %}
                    {% set toc_label = toc_symbol + (config.toc_label if config.toc_label and root else function.name) %}

                    {#- Function heading -#}
                    {% filter heading(
                        heading_level,
                        role="function",
                        id=html_id,
                        class="doc doc-heading",
                        toc_label=toc_label,
                      ) %}
                      {% if config.show_symbol_type_heading %}<code class="doc-symbol doc-symbol-heading doc-symbol-{{ symbol_type }}"></code>{% endif %}
                      {% if config.heading and root %}
                        {{ config.heading }}
                      {% elif config.separate_signature %}
                        <span class="doc doc-object-name doc-function-name">{{ function_name }}</span>
                      {% else %}
                        {%+ filter highlight(language="python", inline=True) -%}
                          {{ function_name }}{% include "signature"|get_template with context %}
                        {%- endfilter %}
                      {% endif %}

                      {% with labels = function.labels %}
                        {% include "labels"|get_template with context %}
                      {% endwith %}
                    {% endfilter %}

                    {#- Function overloads and signature -#}
                    {% if function.overloads and config.show_overloads %}
                      <div class="doc-overloads">
                        {% for overload in function.overloads %}
                          {% filter format_signature(overload, config.line_length, annotations=True, crossrefs=config.signature_crossrefs) %}
                            {{ overload.name }}
                          {% endfilter %}
                        {% endfor %}
                      </div>
                    {% endif %}

                    {% if config.separate_signature %}
                      {% filter format_signature(function, config.line_length, crossrefs=config.signature_crossrefs) %}
                        {{ function.name }}
                      {% endfilter %}
                    {% endif %}

                    {#- Function contents -#}
                    <div class="doc doc-contents {% if root %}first{% endif %}">
                      {% with docstring_sections = function.docstring.parsed %}
                        {% include "docstring"|get_template with context %}
                      {% endwith %}

                      {% if config.backlinks %}
                        <backlinks identifier="{{ html_id }}" handler="python" />
                      {% endif %}

                      {% if config.show_source and function.source %}
                        <details class="quote">
                          <summary>{{ lang.t("Source code in") }} <code>
                            {%- if function.relative_filepath.is_absolute() -%}
                              {{ function.relative_package_filepath }}
                            {%- else -%}
                              {{ function.relative_filepath }}
                            {%- endif -%}
                          </code></summary>
                          {{ function.source|highlight(language="python", linestart=function.lineno or 0, linenums=True) }}
                        </details>
                      {% endif %}
                    </div>
                  {% endwith %}
                </div>
              {% endwith %}
            {% endif %}
          {% endfor %}
        </div>
      {% endblock contents %}
    </div>

  {% endwith %}
</div>