[project]
name = "pymarc"
version = "5.3.1"
description = "Read, write and modify MARC bibliographic data"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
dependencies = []
packages = ["pymarc"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "mypy>=1.4.1",
    "wheel>=0.42.0",
    "pytest>=7.4.4",
    "hatch>=0.23.1",
    "coverage>=7.2.7",
    "ruff>=0.11.5",
]

[tool.ruff]
target-version = "py39"
lint.ignore = [
    # needed until we make the imports in pymarc/__init__.py more explicit
    "F403",
    "F401",
    # Ignore Pycodestyle line-length warnings, (mainly long comments).
    "E501",
    # Ignore McCabe complexity (for now).
    "C901",
    # Ignore defusedxml recommendation
    "S317"
]

lint.select = [
    # pycodestyle
    "E",
    # pycodestyle warnings
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    ## Flake8 plugins
    "UP",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.mypy]
exclude = '^dist'

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_covered = true
skip_empty = true
show_missing = true

[tool.coverage.xml]
output = "coverage.xml"
