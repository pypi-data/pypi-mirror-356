import time
from typing import Union, List, Dict
import openai

import os
import json
import requests
import os
import time
import atexit
import subprocess
import random

# pip install openai==1.35.13
def get_gpt_output(message: Union[str, List[Dict[str, str]]], 
                    model: str = "gpt-4o", 
                    max_new_tokens: int = 2048, 
                    temperature: float = 1.0, 
                    max_retry: int = 1,
                    sleep_time: int = 60,
                    json_object: bool = False,
                    system_prompt: str = None,
                    **kwargs) -> str:
    """
    Call the OpenAI API to get the GPT model output for a given prompt.

    Args:
        message (Union[str, List[Dict[str, str]]]): The input message or a list of message dicts.
        model (str): The model to use for completion. Default is "gpt-4o".
        max_new_tokens (int): Maximum number of tokens to generate. Default is 2048.
        temperature (float): Sampling temperature. Default is 1.0.
        max_retry (int): Maximum number of retries in case of an error. Default is 1.
        sleep_time (int): Sleep time between retries in seconds. Default is 60.
        json_object (bool): Whether to output in JSON format. Default is False.
        system_prompt (str): Optional system prompt to include. Default is None.

    Returns:
        str: The completed text generated by the GPT model.

    Raises:
        Exception: If the completion fails after the maximum number of retries.
    """
        
    if json_object:
        if isinstance(message, str) and 'json' not in message.lower():
            message = 'You are a helpful assistant designed to output JSON. ' + message
    
    if isinstance(message, str):
        if system_prompt:
            messages = [
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": message}
            ]
        else:
            messages = [{"role": "user", "content": message}]
    else:
        messages = message

    if json_object:
        kwargs.update({"response_format": {"type": "json_object"}}) 

    client = openai.OpenAI()

    for cnt in range(max_retry):
        try:
            chat = client.chat.completions.create(
                messages=messages,
                model=model,
                temperature=temperature,
                max_tokens=max_new_tokens,
                **kwargs
            )
            if chat.choices[0].message.content is None:
                print('Warning! None response! Could be due to safety filter.\n', chat)
                return ' '
            if json_object:
                return json.loads(chat.choices[0].message.content)
            else:
                return chat.choices[0].message.content
        except Exception as e:
            print(f"Attempt {cnt} failed: {e}. Retrying after {sleep_time} seconds...")
            time.sleep(sleep_time)
    
    raise Exception("Failed to get GPT output after maximum retries")
    