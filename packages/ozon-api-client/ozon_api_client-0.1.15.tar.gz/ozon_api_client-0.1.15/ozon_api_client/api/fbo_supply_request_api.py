# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from ozon_api_client.api_client import ApiClient


class FboSupplyRequestApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def supply_draft_api_draft_cluster_list(self, body, **kwargs):  # noqa: E501
        """Информация о кластерах и их складах  # noqa: E501

        Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_cluster_list(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftClusterListRequest body: (required)
        :return: V1DraftClusterListResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.supply_draft_api_draft_cluster_list_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.supply_draft_api_draft_cluster_list_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def supply_draft_api_draft_cluster_list_with_http_info(self, body, **kwargs):  # noqa: E501
        """Информация о кластерах и их складах  # noqa: E501

        Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_cluster_list_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftClusterListRequest body: (required)
        :return: V1DraftClusterListResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method supply_draft_api_draft_cluster_list" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `supply_draft_api_draft_cluster_list`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/cluster/list', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='V1DraftClusterListResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def supply_draft_api_draft_create(self, body, **kwargs):  # noqa: E501
        """Создать черновик заявки на поставку  # noqa: E501

        Создать черновик заявки на поставку — прямой или кросс-докинг, а также указать поставляемые товары.  Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_create(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftCreateRequest body: (required)
        :return: V1DraftCreateResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.supply_draft_api_draft_create_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.supply_draft_api_draft_create_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def supply_draft_api_draft_create_with_http_info(self, body, **kwargs):  # noqa: E501
        """Создать черновик заявки на поставку  # noqa: E501

        Создать черновик заявки на поставку — прямой или кросс-докинг, а также указать поставляемые товары.  Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_create_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftCreateRequest body: (required)
        :return: V1DraftCreateResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method supply_draft_api_draft_create" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `supply_draft_api_draft_create`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/draft/create', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='V1DraftCreateResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def supply_draft_api_draft_create_info(self, body, **kwargs):  # noqa: E501
        """Информация о черновике заявки на поставку  # noqa: E501

        Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_create_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftCreateInfoRequest body: (required)
        :return: V1DraftCreateInfoResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.supply_draft_api_draft_create_info_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.supply_draft_api_draft_create_info_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def supply_draft_api_draft_create_info_with_http_info(self, body, **kwargs):  # noqa: E501
        """Информация о черновике заявки на поставку  # noqa: E501

        Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_create_info_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftCreateInfoRequest body: (required)
        :return: V1DraftCreateInfoResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method supply_draft_api_draft_create_info" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `supply_draft_api_draft_create_info`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/draft/create/info', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='V1DraftCreateInfoResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def supply_draft_api_draft_get_warehouse_fbo_list(self, body, **kwargs):  # noqa: E501
        """Поиск точек для отгрузки поставки  # noqa: E501

        Используйте метод, чтобы найти сортировочное центры, пункты выдачи или приёма заказов, доступные для кросс-докинга и прямых поставок.  Вы можете посмотреть адреса всех точек на карте и в виде таблицы в [Базе знаний](https://seller-edu.ozon.ru/fbo/warehouses/adresa-skladov-fbo).  Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_get_warehouse_fbo_list(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftGetWarehouseFboListRequest body: (required)
        :return: V1DraftGetWarehouseFboListResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.supply_draft_api_draft_get_warehouse_fbo_list_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.supply_draft_api_draft_get_warehouse_fbo_list_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def supply_draft_api_draft_get_warehouse_fbo_list_with_http_info(self, body, **kwargs):  # noqa: E501
        """Поиск точек для отгрузки поставки  # noqa: E501

        Используйте метод, чтобы найти сортировочное центры, пункты выдачи или приёма заказов, доступные для кросс-докинга и прямых поставок.  Вы можете посмотреть адреса всех точек на карте и в виде таблицы в [Базе знаний](https://seller-edu.ozon.ru/fbo/warehouses/adresa-skladov-fbo).  Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_get_warehouse_fbo_list_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftGetWarehouseFboListRequest body: (required)
        :return: V1DraftGetWarehouseFboListResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method supply_draft_api_draft_get_warehouse_fbo_list" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `supply_draft_api_draft_get_warehouse_fbo_list`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/warehouse/fbo/list', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='V1DraftGetWarehouseFboListResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def supply_draft_api_draft_supply_create(self, body, **kwargs):  # noqa: E501
        """Создать заявку на поставку по черновику  # noqa: E501

        Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_supply_create(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftSupplyCreateRequest body: (required)
        :return: V1DraftSupplyCreateResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.supply_draft_api_draft_supply_create_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.supply_draft_api_draft_supply_create_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def supply_draft_api_draft_supply_create_with_http_info(self, body, **kwargs):  # noqa: E501
        """Создать заявку на поставку по черновику  # noqa: E501

        Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_supply_create_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftSupplyCreateRequest body: (required)
        :return: V1DraftSupplyCreateResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method supply_draft_api_draft_supply_create" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `supply_draft_api_draft_supply_create`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/draft/supply/create', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='V1DraftSupplyCreateResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def supply_draft_api_draft_supply_create_status(self, body, **kwargs):  # noqa: E501
        """Информация о создании заявки на поставку  # noqa: E501

        Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_supply_create_status(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftSupplyCreateStatusRequest body: (required)
        :return: V1DraftSupplyCreateStatusResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.supply_draft_api_draft_supply_create_status_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.supply_draft_api_draft_supply_create_status_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def supply_draft_api_draft_supply_create_status_with_http_info(self, body, **kwargs):  # noqa: E501
        """Информация о создании заявки на поставку  # noqa: E501

        Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_supply_create_status_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftSupplyCreateStatusRequest body: (required)
        :return: V1DraftSupplyCreateStatusResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method supply_draft_api_draft_supply_create_status" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `supply_draft_api_draft_supply_create_status`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/draft/supply/create/status', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='V1DraftSupplyCreateStatusResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def supply_draft_api_draft_timeslot_info(self, body, **kwargs):  # noqa: E501
        """Доступные таймслоты  # noqa: E501

        Доступные таймслоты на конечных складах отгрузки.  Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_timeslot_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftTimeslotInfoRequest body: (required)
        :return: V1DraftTimeslotInfoResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.supply_draft_api_draft_timeslot_info_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.supply_draft_api_draft_timeslot_info_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def supply_draft_api_draft_timeslot_info_with_http_info(self, body, **kwargs):  # noqa: E501
        """Доступные таймслоты  # noqa: E501

        Доступные таймслоты на конечных складах отгрузки.  Вы можете оставить обратную связь по этому методу в комментариях к [обсуждению](https://dev.ozon.ru/community/1089-Metody-sozdaniia-zaiavok-na-postavku) в сообществе разработчиков Ozon for dev.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.supply_draft_api_draft_timeslot_info_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V1DraftTimeslotInfoRequest body: (required)
        :return: V1DraftTimeslotInfoResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method supply_draft_api_draft_timeslot_info" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `supply_draft_api_draft_timeslot_info`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/v1/draft/timeslot/info', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='V1DraftTimeslotInfoResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
