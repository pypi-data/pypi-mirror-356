# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class OperationService(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'price': 'float'
    }

    attribute_map = {
        'name': 'name',
        'price': 'price'
    }

    def __init__(self, name=None, price=None):  # noqa: E501
        """OperationService - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._price = None
        self.discriminator = None
        if name is not None:
            self.name = name
        if price is not None:
            self.price = price

    @property
    def name(self):
        """Gets the name of this OperationService.  # noqa: E501

        Название услуги:   - `MarketplaceNotDeliveredCostItem` — возврат невостребованного товара от покупателя на склад.   - `MarketplaceReturnAfterDeliveryCostItem` — возврат от покупателя на склад после доставки.   - `MarketplaceDeliveryCostItem` — доставка товара до покупателя.   - `MarketplaceSaleReviewsItem` — приобретение отзывов на платформе.   - `ItemAdvertisementForSupplierLogistic` — доставка товаров на склад Ozon — кросс-докинг.   - `OperationMarketplaceServiceStorage` — размещения товаров.   - `MarketplaceMarketingActionCostItem` — продвижение товаров.   - `MarketplaceServiceItemInstallment` — продвижениe и продажа в рассрочку.   - `MarketplaceServiceItemMarkingItems` — обязательная маркировка товаров.   - `MarketplaceServiceItemFlexiblePaymentSchedule` — гибкий график выплат.   - `MarketplaceServiceItemReturnFromStock` — комплектация товаров для вывоза продавцом.   - `ItemAdvertisementForSupplierLogisticSeller` — транспортно-экспедиционные услуги.   - `ItemAgentServiceStarsMembership` — вознаграждение за услугу [«Звёздные товары»](https://s.ozon.ru/e7NlR6b).   - `MarketplaceServiceItemDelivToCustomer` — последняя миля.   - `MarketplaceServiceItemDirectFlowTrans` — магистраль.   - `MarketplaceServiceItemDropoffFF` — обработка отправления.   - `MarketplaceServiceItemDropoffPVZ` — обработка отправления.   - `MarketplaceServiceItemDropoffSC` — обработка отправления.   - `MarketplaceServiceItemFulfillment` — сборка заказа.   - `MarketplaceServiceItemPickup` — выезд транспортного средства по адресу продавца для забора отправлений — Pick-up.   - `MarketplaceServiceItemReturnAfterDelivToCustomer` — обработка возврата.   - `MarketplaceServiceItemReturnFlowTrans` — обратная магистраль.   - `MarketplaceServiceItemReturnNotDelivToCustomer` — обработка отмен.   - `MarketplaceServiceItemReturnPartGoodsCustomer` — обработка невыкупа.   - `MarketplaceRedistributionOfAcquiringOperation` — оплата эквайринга.   - `MarketplaceReturnStorageServiceAtThePickupPointFbsItem` — краткосрочное размещение возврата FBS.   - `MarketplaceReturnStorageServiceInTheWarehouseFbsItem` — долгосрочное размещение возврата FBS.   - `MarketplaceServiceItemDeliveryKGT` — доставка крупногабаритного товара (КГТ).   - `MarketplaceServiceItemDirectFlowLogistic` — логистика.   - `MarketplaceServiceItemReturnFlowLogistic` — обратная логистика.   - `MarketplaceServicePremiumCashbackIndividualPoints` — услуга продвижения «Бонусы продавца».   - `MarketplaceServicePremiumPromotion` — услуга продвижение Premium, фиксированная комиссия.   - `OperationMarketplaceWithHoldingForUndeliverableGoods` — удержание за недовложение товара.   - `MarketplaceServiceItemDropoffPPZ` — услуга drop-off в пункте приёма заказов.   - `MarketplaceServiceItemRedistributionReturnsPVZ` — перевыставление возвратов на ПВЗ.   - `OperationMarketplaceAgencyFeeAggregator3PLGlobal` — тарификация агентской услуги Agregator 3PL Global.   - `MarketplaceServiceItemDirectFlowLogisticVDC` — логистика вРЦ.   # noqa: E501

        :return: The name of this OperationService.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this OperationService.

        Название услуги:   - `MarketplaceNotDeliveredCostItem` — возврат невостребованного товара от покупателя на склад.   - `MarketplaceReturnAfterDeliveryCostItem` — возврат от покупателя на склад после доставки.   - `MarketplaceDeliveryCostItem` — доставка товара до покупателя.   - `MarketplaceSaleReviewsItem` — приобретение отзывов на платформе.   - `ItemAdvertisementForSupplierLogistic` — доставка товаров на склад Ozon — кросс-докинг.   - `OperationMarketplaceServiceStorage` — размещения товаров.   - `MarketplaceMarketingActionCostItem` — продвижение товаров.   - `MarketplaceServiceItemInstallment` — продвижениe и продажа в рассрочку.   - `MarketplaceServiceItemMarkingItems` — обязательная маркировка товаров.   - `MarketplaceServiceItemFlexiblePaymentSchedule` — гибкий график выплат.   - `MarketplaceServiceItemReturnFromStock` — комплектация товаров для вывоза продавцом.   - `ItemAdvertisementForSupplierLogisticSeller` — транспортно-экспедиционные услуги.   - `ItemAgentServiceStarsMembership` — вознаграждение за услугу [«Звёздные товары»](https://s.ozon.ru/e7NlR6b).   - `MarketplaceServiceItemDelivToCustomer` — последняя миля.   - `MarketplaceServiceItemDirectFlowTrans` — магистраль.   - `MarketplaceServiceItemDropoffFF` — обработка отправления.   - `MarketplaceServiceItemDropoffPVZ` — обработка отправления.   - `MarketplaceServiceItemDropoffSC` — обработка отправления.   - `MarketplaceServiceItemFulfillment` — сборка заказа.   - `MarketplaceServiceItemPickup` — выезд транспортного средства по адресу продавца для забора отправлений — Pick-up.   - `MarketplaceServiceItemReturnAfterDelivToCustomer` — обработка возврата.   - `MarketplaceServiceItemReturnFlowTrans` — обратная магистраль.   - `MarketplaceServiceItemReturnNotDelivToCustomer` — обработка отмен.   - `MarketplaceServiceItemReturnPartGoodsCustomer` — обработка невыкупа.   - `MarketplaceRedistributionOfAcquiringOperation` — оплата эквайринга.   - `MarketplaceReturnStorageServiceAtThePickupPointFbsItem` — краткосрочное размещение возврата FBS.   - `MarketplaceReturnStorageServiceInTheWarehouseFbsItem` — долгосрочное размещение возврата FBS.   - `MarketplaceServiceItemDeliveryKGT` — доставка крупногабаритного товара (КГТ).   - `MarketplaceServiceItemDirectFlowLogistic` — логистика.   - `MarketplaceServiceItemReturnFlowLogistic` — обратная логистика.   - `MarketplaceServicePremiumCashbackIndividualPoints` — услуга продвижения «Бонусы продавца».   - `MarketplaceServicePremiumPromotion` — услуга продвижение Premium, фиксированная комиссия.   - `OperationMarketplaceWithHoldingForUndeliverableGoods` — удержание за недовложение товара.   - `MarketplaceServiceItemDropoffPPZ` — услуга drop-off в пункте приёма заказов.   - `MarketplaceServiceItemRedistributionReturnsPVZ` — перевыставление возвратов на ПВЗ.   - `OperationMarketplaceAgencyFeeAggregator3PLGlobal` — тарификация агентской услуги Agregator 3PL Global.   - `MarketplaceServiceItemDirectFlowLogisticVDC` — логистика вРЦ.   # noqa: E501

        :param name: The name of this OperationService.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def price(self):
        """Gets the price of this OperationService.  # noqa: E501

        Цена.  # noqa: E501

        :return: The price of this OperationService.  # noqa: E501
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this OperationService.

        Цена.  # noqa: E501

        :param price: The price of this OperationService.  # noqa: E501
        :type: float
        """

        self._price = price

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OperationService, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OperationService):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
