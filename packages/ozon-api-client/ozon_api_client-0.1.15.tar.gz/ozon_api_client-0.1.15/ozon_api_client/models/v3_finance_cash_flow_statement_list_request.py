# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V3FinanceCashFlowStatementListRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_date': 'Financev3Period',
        'page': 'int',
        'with_details': 'bool',
        'page_size': 'int'
    }

    attribute_map = {
        '_date': 'date',
        'page': 'page',
        'with_details': 'with_details',
        'page_size': 'page_size'
    }

    def __init__(self, _date=None, page=None, with_details=None, page_size=None):  # noqa: E501
        """V3FinanceCashFlowStatementListRequest - a model defined in Swagger"""  # noqa: E501
        self.__date = None
        self._page = None
        self._with_details = None
        self._page_size = None
        self.discriminator = None
        self._date = _date
        self.page = page
        if with_details is not None:
            self.with_details = with_details
        self.page_size = page_size

    @property
    def _date(self):
        """Gets the _date of this V3FinanceCashFlowStatementListRequest.  # noqa: E501


        :return: The _date of this V3FinanceCashFlowStatementListRequest.  # noqa: E501
        :rtype: Financev3Period
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this V3FinanceCashFlowStatementListRequest.


        :param _date: The _date of this V3FinanceCashFlowStatementListRequest.  # noqa: E501
        :type: Financev3Period
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")  # noqa: E501

        self.__date = _date

    @property
    def page(self):
        """Gets the page of this V3FinanceCashFlowStatementListRequest.  # noqa: E501

        Номер страницы, возвращаемой в запросе.  # noqa: E501

        :return: The page of this V3FinanceCashFlowStatementListRequest.  # noqa: E501
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this V3FinanceCashFlowStatementListRequest.

        Номер страницы, возвращаемой в запросе.  # noqa: E501

        :param page: The page of this V3FinanceCashFlowStatementListRequest.  # noqa: E501
        :type: int
        """
        if page is None:
            raise ValueError("Invalid value for `page`, must not be `None`")  # noqa: E501

        self._page = page

    @property
    def with_details(self):
        """Gets the with_details of this V3FinanceCashFlowStatementListRequest.  # noqa: E501

        `true`, если нужно добавить дополнительные параметры в ответ.  # noqa: E501

        :return: The with_details of this V3FinanceCashFlowStatementListRequest.  # noqa: E501
        :rtype: bool
        """
        return self._with_details

    @with_details.setter
    def with_details(self, with_details):
        """Sets the with_details of this V3FinanceCashFlowStatementListRequest.

        `true`, если нужно добавить дополнительные параметры в ответ.  # noqa: E501

        :param with_details: The with_details of this V3FinanceCashFlowStatementListRequest.  # noqa: E501
        :type: bool
        """

        self._with_details = with_details

    @property
    def page_size(self):
        """Gets the page_size of this V3FinanceCashFlowStatementListRequest.  # noqa: E501

        Количество элементов на странице.  # noqa: E501

        :return: The page_size of this V3FinanceCashFlowStatementListRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this V3FinanceCashFlowStatementListRequest.

        Количество элементов на странице.  # noqa: E501

        :param page_size: The page_size of this V3FinanceCashFlowStatementListRequest.  # noqa: E501
        :type: int
        """
        if page_size is None:
            raise ValueError("Invalid value for `page_size`, must not be `None`")  # noqa: E501

        self._page_size = page_size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V3FinanceCashFlowStatementListRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V3FinanceCashFlowStatementListRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
