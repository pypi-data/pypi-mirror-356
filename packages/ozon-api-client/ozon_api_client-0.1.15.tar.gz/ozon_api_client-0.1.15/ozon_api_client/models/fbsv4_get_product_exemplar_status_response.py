# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Fbsv4GetProductExemplarStatusResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'posting_number': 'str',
        'products': 'list[Fbsv4GetProductExemplarStatusResponseProduct]',
        'status': 'str'
    }

    attribute_map = {
        'posting_number': 'posting_number',
        'products': 'products',
        'status': 'status'
    }

    def __init__(self, posting_number=None, products=None, status=None):  # noqa: E501
        """Fbsv4GetProductExemplarStatusResponse - a model defined in Swagger"""  # noqa: E501
        self._posting_number = None
        self._products = None
        self._status = None
        self.discriminator = None
        if posting_number is not None:
            self.posting_number = posting_number
        if products is not None:
            self.products = products
        if status is not None:
            self.status = status

    @property
    def posting_number(self):
        """Gets the posting_number of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501

        Номер отправления.  # noqa: E501

        :return: The posting_number of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501
        :rtype: str
        """
        return self._posting_number

    @posting_number.setter
    def posting_number(self, posting_number):
        """Sets the posting_number of this Fbsv4GetProductExemplarStatusResponse.

        Номер отправления.  # noqa: E501

        :param posting_number: The posting_number of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501
        :type: str
        """

        self._posting_number = posting_number

    @property
    def products(self):
        """Gets the products of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501

        Список товаров.  # noqa: E501

        :return: The products of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501
        :rtype: list[Fbsv4GetProductExemplarStatusResponseProduct]
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this Fbsv4GetProductExemplarStatusResponse.

        Список товаров.  # noqa: E501

        :param products: The products of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501
        :type: list[Fbsv4GetProductExemplarStatusResponseProduct]
        """

        self._products = products

    @property
    def status(self):
        """Gets the status of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501

        Статус проверки всех экземпляров и доступности сборки: - `ship_available` — сборка доступна, - `ship_not_available` — сборка недоступна, - `validation_in_process` — экземпляры на проверке.   # noqa: E501

        :return: The status of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Fbsv4GetProductExemplarStatusResponse.

        Статус проверки всех экземпляров и доступности сборки: - `ship_available` — сборка доступна, - `ship_not_available` — сборка недоступна, - `validation_in_process` — экземпляры на проверке.   # noqa: E501

        :param status: The status of this Fbsv4GetProductExemplarStatusResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Fbsv4GetProductExemplarStatusResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Fbsv4GetProductExemplarStatusResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
