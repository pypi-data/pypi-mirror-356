# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V2PostingFBSActListResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'ModelInt',
        'delivery_method_id': 'ModelInt',
        'delivery_method_name': 'str',
        'integration_type': 'str',
        'containers_count': 'ModelInt',
        'status': 'str',
        'departure_date': 'str',
        'created_at': 'datetime',
        'updated_at': 'datetime',
        'act_type': 'str',
        'is_partial': 'bool',
        'has_postings_for_next_carriage': 'bool',
        'partial_num': 'int',
        'related_docs': 'V2PostingFBSActListRelatedDocs'
    }

    attribute_map = {
        'id': 'id',
        'delivery_method_id': 'delivery_method_id',
        'delivery_method_name': 'delivery_method_name',
        'integration_type': 'integration_type',
        'containers_count': 'containers_count',
        'status': 'status',
        'departure_date': 'departure_date',
        'created_at': 'created_at',
        'updated_at': 'updated_at',
        'act_type': 'act_type',
        'is_partial': 'is_partial',
        'has_postings_for_next_carriage': 'has_postings_for_next_carriage',
        'partial_num': 'partial_num',
        'related_docs': 'related_docs'
    }

    def __init__(self, id=None, delivery_method_id=None, delivery_method_name=None, integration_type=None, containers_count=None, status=None, departure_date=None, created_at=None, updated_at=None, act_type=None, is_partial=None, has_postings_for_next_carriage=None, partial_num=None, related_docs=None):  # noqa: E501
        """V2PostingFBSActListResult - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._delivery_method_id = None
        self._delivery_method_name = None
        self._integration_type = None
        self._containers_count = None
        self._status = None
        self._departure_date = None
        self._created_at = None
        self._updated_at = None
        self._act_type = None
        self._is_partial = None
        self._has_postings_for_next_carriage = None
        self._partial_num = None
        self._related_docs = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if delivery_method_id is not None:
            self.delivery_method_id = delivery_method_id
        if delivery_method_name is not None:
            self.delivery_method_name = delivery_method_name
        if integration_type is not None:
            self.integration_type = integration_type
        if containers_count is not None:
            self.containers_count = containers_count
        if status is not None:
            self.status = status
        if departure_date is not None:
            self.departure_date = departure_date
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at
        if act_type is not None:
            self.act_type = act_type
        if is_partial is not None:
            self.is_partial = is_partial
        if has_postings_for_next_carriage is not None:
            self.has_postings_for_next_carriage = has_postings_for_next_carriage
        if partial_num is not None:
            self.partial_num = partial_num
        if related_docs is not None:
            self.related_docs = related_docs

    @property
    def id(self):
        """Gets the id of this V2PostingFBSActListResult.  # noqa: E501

        Идентификатор отгрузки.  # noqa: E501

        :return: The id of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: ModelInt
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V2PostingFBSActListResult.

        Идентификатор отгрузки.  # noqa: E501

        :param id: The id of this V2PostingFBSActListResult.  # noqa: E501
        :type: ModelInt
        """

        self._id = id

    @property
    def delivery_method_id(self):
        """Gets the delivery_method_id of this V2PostingFBSActListResult.  # noqa: E501

        Идентификатор метода доставки.  # noqa: E501

        :return: The delivery_method_id of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: ModelInt
        """
        return self._delivery_method_id

    @delivery_method_id.setter
    def delivery_method_id(self, delivery_method_id):
        """Sets the delivery_method_id of this V2PostingFBSActListResult.

        Идентификатор метода доставки.  # noqa: E501

        :param delivery_method_id: The delivery_method_id of this V2PostingFBSActListResult.  # noqa: E501
        :type: ModelInt
        """

        self._delivery_method_id = delivery_method_id

    @property
    def delivery_method_name(self):
        """Gets the delivery_method_name of this V2PostingFBSActListResult.  # noqa: E501

        Название метода доставки.  # noqa: E501

        :return: The delivery_method_name of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: str
        """
        return self._delivery_method_name

    @delivery_method_name.setter
    def delivery_method_name(self, delivery_method_name):
        """Sets the delivery_method_name of this V2PostingFBSActListResult.

        Название метода доставки.  # noqa: E501

        :param delivery_method_name: The delivery_method_name of this V2PostingFBSActListResult.  # noqa: E501
        :type: str
        """

        self._delivery_method_name = delivery_method_name

    @property
    def integration_type(self):
        """Gets the integration_type of this V2PostingFBSActListResult.  # noqa: E501

        Тип интеграции со службой доставки:   - `ozon` — доставка через Ozon логистику.   - `3pl` — доставка внешней службой, продавец регистрирует заказ.   # noqa: E501

        :return: The integration_type of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: str
        """
        return self._integration_type

    @integration_type.setter
    def integration_type(self, integration_type):
        """Sets the integration_type of this V2PostingFBSActListResult.

        Тип интеграции со службой доставки:   - `ozon` — доставка через Ozon логистику.   - `3pl` — доставка внешней службой, продавец регистрирует заказ.   # noqa: E501

        :param integration_type: The integration_type of this V2PostingFBSActListResult.  # noqa: E501
        :type: str
        """

        self._integration_type = integration_type

    @property
    def containers_count(self):
        """Gets the containers_count of this V2PostingFBSActListResult.  # noqa: E501

        Число грузовых мест.  # noqa: E501

        :return: The containers_count of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: ModelInt
        """
        return self._containers_count

    @containers_count.setter
    def containers_count(self, containers_count):
        """Sets the containers_count of this V2PostingFBSActListResult.

        Число грузовых мест.  # noqa: E501

        :param containers_count: The containers_count of this V2PostingFBSActListResult.  # noqa: E501
        :type: ModelInt
        """

        self._containers_count = containers_count

    @property
    def status(self):
        """Gets the status of this V2PostingFBSActListResult.  # noqa: E501

        Статус отгрузки.  # noqa: E501

        :return: The status of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this V2PostingFBSActListResult.

        Статус отгрузки.  # noqa: E501

        :param status: The status of this V2PostingFBSActListResult.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def departure_date(self):
        """Gets the departure_date of this V2PostingFBSActListResult.  # noqa: E501

        Дата отгрузки.  # noqa: E501

        :return: The departure_date of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: str
        """
        return self._departure_date

    @departure_date.setter
    def departure_date(self, departure_date):
        """Sets the departure_date of this V2PostingFBSActListResult.

        Дата отгрузки.  # noqa: E501

        :param departure_date: The departure_date of this V2PostingFBSActListResult.  # noqa: E501
        :type: str
        """

        self._departure_date = departure_date

    @property
    def created_at(self):
        """Gets the created_at of this V2PostingFBSActListResult.  # noqa: E501

        Дата создания записи об отгрузке.  # noqa: E501

        :return: The created_at of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this V2PostingFBSActListResult.

        Дата создания записи об отгрузке.  # noqa: E501

        :param created_at: The created_at of this V2PostingFBSActListResult.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this V2PostingFBSActListResult.  # noqa: E501

        Дата обновления записи об отгрузке.  # noqa: E501

        :return: The updated_at of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this V2PostingFBSActListResult.

        Дата обновления записи об отгрузке.  # noqa: E501

        :param updated_at: The updated_at of this V2PostingFBSActListResult.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def act_type(self):
        """Gets the act_type of this V2PostingFBSActListResult.  # noqa: E501

        Тип акта приёма-передачи для FBS продавцов.  # noqa: E501

        :return: The act_type of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: str
        """
        return self._act_type

    @act_type.setter
    def act_type(self, act_type):
        """Sets the act_type of this V2PostingFBSActListResult.

        Тип акта приёма-передачи для FBS продавцов.  # noqa: E501

        :param act_type: The act_type of this V2PostingFBSActListResult.  # noqa: E501
        :type: str
        """

        self._act_type = act_type

    @property
    def is_partial(self):
        """Gets the is_partial of this V2PostingFBSActListResult.  # noqa: E501

        Признак частичной перевозки. `true`, если перевозка частичная.  Частичная перевозка значит, что отгрузка была разделена на несколько частей и по каждой из частей формируются отдельные акты.   # noqa: E501

        :return: The is_partial of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: bool
        """
        return self._is_partial

    @is_partial.setter
    def is_partial(self, is_partial):
        """Sets the is_partial of this V2PostingFBSActListResult.

        Признак частичной перевозки. `true`, если перевозка частичная.  Частичная перевозка значит, что отгрузка была разделена на несколько частей и по каждой из частей формируются отдельные акты.   # noqa: E501

        :param is_partial: The is_partial of this V2PostingFBSActListResult.  # noqa: E501
        :type: bool
        """

        self._is_partial = is_partial

    @property
    def has_postings_for_next_carriage(self):
        """Gets the has_postings_for_next_carriage of this V2PostingFBSActListResult.  # noqa: E501

        Признак наличия подлежащих отгрузке отправлений, которые не попали в текущую перевозку. `true`, если такие отправления есть.  # noqa: E501

        :return: The has_postings_for_next_carriage of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: bool
        """
        return self._has_postings_for_next_carriage

    @has_postings_for_next_carriage.setter
    def has_postings_for_next_carriage(self, has_postings_for_next_carriage):
        """Sets the has_postings_for_next_carriage of this V2PostingFBSActListResult.

        Признак наличия подлежащих отгрузке отправлений, которые не попали в текущую перевозку. `true`, если такие отправления есть.  # noqa: E501

        :param has_postings_for_next_carriage: The has_postings_for_next_carriage of this V2PostingFBSActListResult.  # noqa: E501
        :type: bool
        """

        self._has_postings_for_next_carriage = has_postings_for_next_carriage

    @property
    def partial_num(self):
        """Gets the partial_num of this V2PostingFBSActListResult.  # noqa: E501

        Порядковый номер частичной перевозки.  # noqa: E501

        :return: The partial_num of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: int
        """
        return self._partial_num

    @partial_num.setter
    def partial_num(self, partial_num):
        """Sets the partial_num of this V2PostingFBSActListResult.

        Порядковый номер частичной перевозки.  # noqa: E501

        :param partial_num: The partial_num of this V2PostingFBSActListResult.  # noqa: E501
        :type: int
        """

        self._partial_num = partial_num

    @property
    def related_docs(self):
        """Gets the related_docs of this V2PostingFBSActListResult.  # noqa: E501


        :return: The related_docs of this V2PostingFBSActListResult.  # noqa: E501
        :rtype: V2PostingFBSActListRelatedDocs
        """
        return self._related_docs

    @related_docs.setter
    def related_docs(self, related_docs):
        """Sets the related_docs of this V2PostingFBSActListResult.


        :param related_docs: The related_docs of this V2PostingFBSActListResult.  # noqa: E501
        :type: V2PostingFBSActListRelatedDocs
        """

        self._related_docs = related_docs

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V2PostingFBSActListResult, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V2PostingFBSActListResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
