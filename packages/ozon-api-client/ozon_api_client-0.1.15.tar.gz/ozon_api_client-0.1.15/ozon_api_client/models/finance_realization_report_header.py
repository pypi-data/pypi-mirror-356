# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FinanceRealizationReportHeader(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'num': 'str',
        'doc_date': 'str',
        'contract_date': 'str',
        'contract_num': 'str',
        'currency_code': 'str',
        'doc_amount': 'float',
        'vat_amount': 'float',
        'payer_inn': 'str',
        'payer_kpp': 'str',
        'payer_name': 'str',
        'rcv_inn': 'str',
        'rcv_kpp': 'str',
        'rcv_name': 'str',
        'start_date': 'str',
        'stop_date': 'str'
    }

    attribute_map = {
        'num': 'num',
        'doc_date': 'doc_date',
        'contract_date': 'contract_date',
        'contract_num': 'contract_num',
        'currency_code': 'currency_code',
        'doc_amount': 'doc_amount',
        'vat_amount': 'vat_amount',
        'payer_inn': 'payer_inn',
        'payer_kpp': 'payer_kpp',
        'payer_name': 'payer_name',
        'rcv_inn': 'rcv_inn',
        'rcv_kpp': 'rcv_kpp',
        'rcv_name': 'rcv_name',
        'start_date': 'start_date',
        'stop_date': 'stop_date'
    }

    def __init__(self, num=None, doc_date=None, contract_date=None, contract_num=None, currency_code=None, doc_amount=None, vat_amount=None, payer_inn=None, payer_kpp=None, payer_name=None, rcv_inn=None, rcv_kpp=None, rcv_name=None, start_date=None, stop_date=None):  # noqa: E501
        """FinanceRealizationReportHeader - a model defined in Swagger"""  # noqa: E501
        self._num = None
        self._doc_date = None
        self._contract_date = None
        self._contract_num = None
        self._currency_code = None
        self._doc_amount = None
        self._vat_amount = None
        self._payer_inn = None
        self._payer_kpp = None
        self._payer_name = None
        self._rcv_inn = None
        self._rcv_kpp = None
        self._rcv_name = None
        self._start_date = None
        self._stop_date = None
        self.discriminator = None
        if num is not None:
            self.num = num
        if doc_date is not None:
            self.doc_date = doc_date
        if contract_date is not None:
            self.contract_date = contract_date
        if contract_num is not None:
            self.contract_num = contract_num
        if currency_code is not None:
            self.currency_code = currency_code
        if doc_amount is not None:
            self.doc_amount = doc_amount
        if vat_amount is not None:
            self.vat_amount = vat_amount
        if payer_inn is not None:
            self.payer_inn = payer_inn
        if payer_kpp is not None:
            self.payer_kpp = payer_kpp
        if payer_name is not None:
            self.payer_name = payer_name
        if rcv_inn is not None:
            self.rcv_inn = rcv_inn
        if rcv_kpp is not None:
            self.rcv_kpp = rcv_kpp
        if rcv_name is not None:
            self.rcv_name = rcv_name
        if start_date is not None:
            self.start_date = start_date
        if stop_date is not None:
            self.stop_date = stop_date

    @property
    def num(self):
        """Gets the num of this FinanceRealizationReportHeader.  # noqa: E501

        Номер отчёта о реализации.  # noqa: E501

        :return: The num of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._num

    @num.setter
    def num(self, num):
        """Sets the num of this FinanceRealizationReportHeader.

        Номер отчёта о реализации.  # noqa: E501

        :param num: The num of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._num = num

    @property
    def doc_date(self):
        """Gets the doc_date of this FinanceRealizationReportHeader.  # noqa: E501

        Дата формирования отчёта.  # noqa: E501

        :return: The doc_date of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._doc_date

    @doc_date.setter
    def doc_date(self, doc_date):
        """Sets the doc_date of this FinanceRealizationReportHeader.

        Дата формирования отчёта.  # noqa: E501

        :param doc_date: The doc_date of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._doc_date = doc_date

    @property
    def contract_date(self):
        """Gets the contract_date of this FinanceRealizationReportHeader.  # noqa: E501

        Дата заключения договора оферты.  # noqa: E501

        :return: The contract_date of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._contract_date

    @contract_date.setter
    def contract_date(self, contract_date):
        """Sets the contract_date of this FinanceRealizationReportHeader.

        Дата заключения договора оферты.  # noqa: E501

        :param contract_date: The contract_date of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._contract_date = contract_date

    @property
    def contract_num(self):
        """Gets the contract_num of this FinanceRealizationReportHeader.  # noqa: E501

        Номер договора оферты.  # noqa: E501

        :return: The contract_num of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._contract_num

    @contract_num.setter
    def contract_num(self, contract_num):
        """Sets the contract_num of this FinanceRealizationReportHeader.

        Номер договора оферты.  # noqa: E501

        :param contract_num: The contract_num of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._contract_num = contract_num

    @property
    def currency_code(self):
        """Gets the currency_code of this FinanceRealizationReportHeader.  # noqa: E501

        Валюта ваших цен.  # noqa: E501

        :return: The currency_code of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this FinanceRealizationReportHeader.

        Валюта ваших цен.  # noqa: E501

        :param currency_code: The currency_code of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    @property
    def doc_amount(self):
        """Gets the doc_amount of this FinanceRealizationReportHeader.  # noqa: E501

        Сумма к начислению.  # noqa: E501

        :return: The doc_amount of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: float
        """
        return self._doc_amount

    @doc_amount.setter
    def doc_amount(self, doc_amount):
        """Sets the doc_amount of this FinanceRealizationReportHeader.

        Сумма к начислению.  # noqa: E501

        :param doc_amount: The doc_amount of this FinanceRealizationReportHeader.  # noqa: E501
        :type: float
        """

        self._doc_amount = doc_amount

    @property
    def vat_amount(self):
        """Gets the vat_amount of this FinanceRealizationReportHeader.  # noqa: E501

        Сумма к начислению с НДС.  # noqa: E501

        :return: The vat_amount of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: float
        """
        return self._vat_amount

    @vat_amount.setter
    def vat_amount(self, vat_amount):
        """Sets the vat_amount of this FinanceRealizationReportHeader.

        Сумма к начислению с НДС.  # noqa: E501

        :param vat_amount: The vat_amount of this FinanceRealizationReportHeader.  # noqa: E501
        :type: float
        """

        self._vat_amount = vat_amount

    @property
    def payer_inn(self):
        """Gets the payer_inn of this FinanceRealizationReportHeader.  # noqa: E501

        ИНН плательщика.  # noqa: E501

        :return: The payer_inn of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._payer_inn

    @payer_inn.setter
    def payer_inn(self, payer_inn):
        """Sets the payer_inn of this FinanceRealizationReportHeader.

        ИНН плательщика.  # noqa: E501

        :param payer_inn: The payer_inn of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._payer_inn = payer_inn

    @property
    def payer_kpp(self):
        """Gets the payer_kpp of this FinanceRealizationReportHeader.  # noqa: E501

        КПП плательщика.  # noqa: E501

        :return: The payer_kpp of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._payer_kpp

    @payer_kpp.setter
    def payer_kpp(self, payer_kpp):
        """Sets the payer_kpp of this FinanceRealizationReportHeader.

        КПП плательщика.  # noqa: E501

        :param payer_kpp: The payer_kpp of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._payer_kpp = payer_kpp

    @property
    def payer_name(self):
        """Gets the payer_name of this FinanceRealizationReportHeader.  # noqa: E501

        Название плательщика.  # noqa: E501

        :return: The payer_name of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._payer_name

    @payer_name.setter
    def payer_name(self, payer_name):
        """Sets the payer_name of this FinanceRealizationReportHeader.

        Название плательщика.  # noqa: E501

        :param payer_name: The payer_name of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._payer_name = payer_name

    @property
    def rcv_inn(self):
        """Gets the rcv_inn of this FinanceRealizationReportHeader.  # noqa: E501

        ИНН получателя.  # noqa: E501

        :return: The rcv_inn of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._rcv_inn

    @rcv_inn.setter
    def rcv_inn(self, rcv_inn):
        """Sets the rcv_inn of this FinanceRealizationReportHeader.

        ИНН получателя.  # noqa: E501

        :param rcv_inn: The rcv_inn of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._rcv_inn = rcv_inn

    @property
    def rcv_kpp(self):
        """Gets the rcv_kpp of this FinanceRealizationReportHeader.  # noqa: E501

        КПП получателя.  # noqa: E501

        :return: The rcv_kpp of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._rcv_kpp

    @rcv_kpp.setter
    def rcv_kpp(self, rcv_kpp):
        """Sets the rcv_kpp of this FinanceRealizationReportHeader.

        КПП получателя.  # noqa: E501

        :param rcv_kpp: The rcv_kpp of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._rcv_kpp = rcv_kpp

    @property
    def rcv_name(self):
        """Gets the rcv_name of this FinanceRealizationReportHeader.  # noqa: E501

        Название получателя.  # noqa: E501

        :return: The rcv_name of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._rcv_name

    @rcv_name.setter
    def rcv_name(self, rcv_name):
        """Sets the rcv_name of this FinanceRealizationReportHeader.

        Название получателя.  # noqa: E501

        :param rcv_name: The rcv_name of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._rcv_name = rcv_name

    @property
    def start_date(self):
        """Gets the start_date of this FinanceRealizationReportHeader.  # noqa: E501

        Начало периода в отчёте.  # noqa: E501

        :return: The start_date of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this FinanceRealizationReportHeader.

        Начало периода в отчёте.  # noqa: E501

        :param start_date: The start_date of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._start_date = start_date

    @property
    def stop_date(self):
        """Gets the stop_date of this FinanceRealizationReportHeader.  # noqa: E501

        Конец периода в отчёте.  # noqa: E501

        :return: The stop_date of this FinanceRealizationReportHeader.  # noqa: E501
        :rtype: str
        """
        return self._stop_date

    @stop_date.setter
    def stop_date(self, stop_date):
        """Sets the stop_date of this FinanceRealizationReportHeader.

        Конец периода в отчёте.  # noqa: E501

        :param stop_date: The stop_date of this FinanceRealizationReportHeader.  # noqa: E501
        :type: str
        """

        self._stop_date = stop_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FinanceRealizationReportHeader, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FinanceRealizationReportHeader):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
