# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FinanceCashFlowStatementListResponseCashFlow(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'period': 'V3FinanceCashFlowStatementListResponsePeriod',
        'orders_amount': 'float',
        'returns_amount': 'float',
        'commission_amount': 'float',
        'services_amount': 'float',
        'item_delivery_and_return_amount': 'float',
        'currency_code': 'str'
    }

    attribute_map = {
        'period': 'period',
        'orders_amount': 'orders_amount',
        'returns_amount': 'returns_amount',
        'commission_amount': 'commission_amount',
        'services_amount': 'services_amount',
        'item_delivery_and_return_amount': 'item_delivery_and_return_amount',
        'currency_code': 'currency_code'
    }

    def __init__(self, period=None, orders_amount=None, returns_amount=None, commission_amount=None, services_amount=None, item_delivery_and_return_amount=None, currency_code=None):  # noqa: E501
        """FinanceCashFlowStatementListResponseCashFlow - a model defined in Swagger"""  # noqa: E501
        self._period = None
        self._orders_amount = None
        self._returns_amount = None
        self._commission_amount = None
        self._services_amount = None
        self._item_delivery_and_return_amount = None
        self._currency_code = None
        self.discriminator = None
        if period is not None:
            self.period = period
        if orders_amount is not None:
            self.orders_amount = orders_amount
        if returns_amount is not None:
            self.returns_amount = returns_amount
        if commission_amount is not None:
            self.commission_amount = commission_amount
        if services_amount is not None:
            self.services_amount = services_amount
        if item_delivery_and_return_amount is not None:
            self.item_delivery_and_return_amount = item_delivery_and_return_amount
        if currency_code is not None:
            self.currency_code = currency_code

    @property
    def period(self):
        """Gets the period of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501


        :return: The period of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :rtype: V3FinanceCashFlowStatementListResponsePeriod
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this FinanceCashFlowStatementListResponseCashFlow.


        :param period: The period of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :type: V3FinanceCashFlowStatementListResponsePeriod
        """

        self._period = period

    @property
    def orders_amount(self):
        """Gets the orders_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501

        Сумма цен реализованных товаров.  # noqa: E501

        :return: The orders_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :rtype: float
        """
        return self._orders_amount

    @orders_amount.setter
    def orders_amount(self, orders_amount):
        """Sets the orders_amount of this FinanceCashFlowStatementListResponseCashFlow.

        Сумма цен реализованных товаров.  # noqa: E501

        :param orders_amount: The orders_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :type: float
        """

        self._orders_amount = orders_amount

    @property
    def returns_amount(self):
        """Gets the returns_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501

        Сумма цен возвращённых товаров.  # noqa: E501

        :return: The returns_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :rtype: float
        """
        return self._returns_amount

    @returns_amount.setter
    def returns_amount(self, returns_amount):
        """Sets the returns_amount of this FinanceCashFlowStatementListResponseCashFlow.

        Сумма цен возвращённых товаров.  # noqa: E501

        :param returns_amount: The returns_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :type: float
        """

        self._returns_amount = returns_amount

    @property
    def commission_amount(self):
        """Gets the commission_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501

        Комиссия Ozon за реализацию товаров.  # noqa: E501

        :return: The commission_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :rtype: float
        """
        return self._commission_amount

    @commission_amount.setter
    def commission_amount(self, commission_amount):
        """Sets the commission_amount of this FinanceCashFlowStatementListResponseCashFlow.

        Комиссия Ozon за реализацию товаров.  # noqa: E501

        :param commission_amount: The commission_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :type: float
        """

        self._commission_amount = commission_amount

    @property
    def services_amount(self):
        """Gets the services_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501

        Сумма дополнительных услуг.  # noqa: E501

        :return: The services_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :rtype: float
        """
        return self._services_amount

    @services_amount.setter
    def services_amount(self, services_amount):
        """Sets the services_amount of this FinanceCashFlowStatementListResponseCashFlow.

        Сумма дополнительных услуг.  # noqa: E501

        :param services_amount: The services_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :type: float
        """

        self._services_amount = services_amount

    @property
    def item_delivery_and_return_amount(self):
        """Gets the item_delivery_and_return_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501

        Сумма услуг логистики.  # noqa: E501

        :return: The item_delivery_and_return_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :rtype: float
        """
        return self._item_delivery_and_return_amount

    @item_delivery_and_return_amount.setter
    def item_delivery_and_return_amount(self, item_delivery_and_return_amount):
        """Sets the item_delivery_and_return_amount of this FinanceCashFlowStatementListResponseCashFlow.

        Сумма услуг логистики.  # noqa: E501

        :param item_delivery_and_return_amount: The item_delivery_and_return_amount of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :type: float
        """

        self._item_delivery_and_return_amount = item_delivery_and_return_amount

    @property
    def currency_code(self):
        """Gets the currency_code of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501

        Код валюты, в которой рассчитываются комиссии.  # noqa: E501

        :return: The currency_code of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this FinanceCashFlowStatementListResponseCashFlow.

        Код валюты, в которой рассчитываются комиссии.  # noqa: E501

        :param currency_code: The currency_code of this FinanceCashFlowStatementListResponseCashFlow.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FinanceCashFlowStatementListResponseCashFlow, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FinanceCashFlowStatementListResponseCashFlow):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
