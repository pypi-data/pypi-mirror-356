# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PostingFinancialDataServices(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'marketplace_service_item_deliv_to_customer': 'float',
        'marketplace_service_item_direct_flow_trans': 'float',
        'marketplace_service_item_dropoff_ff': 'float',
        'marketplace_service_item_dropoff_pvz': 'float',
        'marketplace_service_item_dropoff_sc': 'float',
        'marketplace_service_item_fulfillment': 'float',
        'marketplace_service_item_pickup': 'float',
        'marketplace_service_item_return_after_deliv_to_customer': 'float',
        'marketplace_service_item_return_flow_trans': 'float',
        'marketplace_service_item_return_not_deliv_to_customer': 'float',
        'marketplace_service_item_return_part_goods_customer': 'float'
    }

    attribute_map = {
        'marketplace_service_item_deliv_to_customer': 'marketplace_service_item_deliv_to_customer',
        'marketplace_service_item_direct_flow_trans': 'marketplace_service_item_direct_flow_trans',
        'marketplace_service_item_dropoff_ff': 'marketplace_service_item_dropoff_ff',
        'marketplace_service_item_dropoff_pvz': 'marketplace_service_item_dropoff_pvz',
        'marketplace_service_item_dropoff_sc': 'marketplace_service_item_dropoff_sc',
        'marketplace_service_item_fulfillment': 'marketplace_service_item_fulfillment',
        'marketplace_service_item_pickup': 'marketplace_service_item_pickup',
        'marketplace_service_item_return_after_deliv_to_customer': 'marketplace_service_item_return_after_deliv_to_customer',
        'marketplace_service_item_return_flow_trans': 'marketplace_service_item_return_flow_trans',
        'marketplace_service_item_return_not_deliv_to_customer': 'marketplace_service_item_return_not_deliv_to_customer',
        'marketplace_service_item_return_part_goods_customer': 'marketplace_service_item_return_part_goods_customer'
    }

    def __init__(self, marketplace_service_item_deliv_to_customer=None, marketplace_service_item_direct_flow_trans=None, marketplace_service_item_dropoff_ff=None, marketplace_service_item_dropoff_pvz=None, marketplace_service_item_dropoff_sc=None, marketplace_service_item_fulfillment=None, marketplace_service_item_pickup=None, marketplace_service_item_return_after_deliv_to_customer=None, marketplace_service_item_return_flow_trans=None, marketplace_service_item_return_not_deliv_to_customer=None, marketplace_service_item_return_part_goods_customer=None):  # noqa: E501
        """PostingFinancialDataServices - a model defined in Swagger"""  # noqa: E501
        self._marketplace_service_item_deliv_to_customer = None
        self._marketplace_service_item_direct_flow_trans = None
        self._marketplace_service_item_dropoff_ff = None
        self._marketplace_service_item_dropoff_pvz = None
        self._marketplace_service_item_dropoff_sc = None
        self._marketplace_service_item_fulfillment = None
        self._marketplace_service_item_pickup = None
        self._marketplace_service_item_return_after_deliv_to_customer = None
        self._marketplace_service_item_return_flow_trans = None
        self._marketplace_service_item_return_not_deliv_to_customer = None
        self._marketplace_service_item_return_part_goods_customer = None
        self.discriminator = None
        if marketplace_service_item_deliv_to_customer is not None:
            self.marketplace_service_item_deliv_to_customer = marketplace_service_item_deliv_to_customer
        if marketplace_service_item_direct_flow_trans is not None:
            self.marketplace_service_item_direct_flow_trans = marketplace_service_item_direct_flow_trans
        if marketplace_service_item_dropoff_ff is not None:
            self.marketplace_service_item_dropoff_ff = marketplace_service_item_dropoff_ff
        if marketplace_service_item_dropoff_pvz is not None:
            self.marketplace_service_item_dropoff_pvz = marketplace_service_item_dropoff_pvz
        if marketplace_service_item_dropoff_sc is not None:
            self.marketplace_service_item_dropoff_sc = marketplace_service_item_dropoff_sc
        if marketplace_service_item_fulfillment is not None:
            self.marketplace_service_item_fulfillment = marketplace_service_item_fulfillment
        if marketplace_service_item_pickup is not None:
            self.marketplace_service_item_pickup = marketplace_service_item_pickup
        if marketplace_service_item_return_after_deliv_to_customer is not None:
            self.marketplace_service_item_return_after_deliv_to_customer = marketplace_service_item_return_after_deliv_to_customer
        if marketplace_service_item_return_flow_trans is not None:
            self.marketplace_service_item_return_flow_trans = marketplace_service_item_return_flow_trans
        if marketplace_service_item_return_not_deliv_to_customer is not None:
            self.marketplace_service_item_return_not_deliv_to_customer = marketplace_service_item_return_not_deliv_to_customer
        if marketplace_service_item_return_part_goods_customer is not None:
            self.marketplace_service_item_return_part_goods_customer = marketplace_service_item_return_part_goods_customer

    @property
    def marketplace_service_item_deliv_to_customer(self):
        """Gets the marketplace_service_item_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501

        Последняя миля.  # noqa: E501

        :return: The marketplace_service_item_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_deliv_to_customer

    @marketplace_service_item_deliv_to_customer.setter
    def marketplace_service_item_deliv_to_customer(self, marketplace_service_item_deliv_to_customer):
        """Sets the marketplace_service_item_deliv_to_customer of this PostingFinancialDataServices.

        Последняя миля.  # noqa: E501

        :param marketplace_service_item_deliv_to_customer: The marketplace_service_item_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_deliv_to_customer = marketplace_service_item_deliv_to_customer

    @property
    def marketplace_service_item_direct_flow_trans(self):
        """Gets the marketplace_service_item_direct_flow_trans of this PostingFinancialDataServices.  # noqa: E501

        Магистраль.  # noqa: E501

        :return: The marketplace_service_item_direct_flow_trans of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_direct_flow_trans

    @marketplace_service_item_direct_flow_trans.setter
    def marketplace_service_item_direct_flow_trans(self, marketplace_service_item_direct_flow_trans):
        """Sets the marketplace_service_item_direct_flow_trans of this PostingFinancialDataServices.

        Магистраль.  # noqa: E501

        :param marketplace_service_item_direct_flow_trans: The marketplace_service_item_direct_flow_trans of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_direct_flow_trans = marketplace_service_item_direct_flow_trans

    @property
    def marketplace_service_item_dropoff_ff(self):
        """Gets the marketplace_service_item_dropoff_ff of this PostingFinancialDataServices.  # noqa: E501

        Обработка отправления на фулфилмент складе (ФФ).  # noqa: E501

        :return: The marketplace_service_item_dropoff_ff of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_dropoff_ff

    @marketplace_service_item_dropoff_ff.setter
    def marketplace_service_item_dropoff_ff(self, marketplace_service_item_dropoff_ff):
        """Sets the marketplace_service_item_dropoff_ff of this PostingFinancialDataServices.

        Обработка отправления на фулфилмент складе (ФФ).  # noqa: E501

        :param marketplace_service_item_dropoff_ff: The marketplace_service_item_dropoff_ff of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_dropoff_ff = marketplace_service_item_dropoff_ff

    @property
    def marketplace_service_item_dropoff_pvz(self):
        """Gets the marketplace_service_item_dropoff_pvz of this PostingFinancialDataServices.  # noqa: E501

        Обработка отправления в ПВЗ.  # noqa: E501

        :return: The marketplace_service_item_dropoff_pvz of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_dropoff_pvz

    @marketplace_service_item_dropoff_pvz.setter
    def marketplace_service_item_dropoff_pvz(self, marketplace_service_item_dropoff_pvz):
        """Sets the marketplace_service_item_dropoff_pvz of this PostingFinancialDataServices.

        Обработка отправления в ПВЗ.  # noqa: E501

        :param marketplace_service_item_dropoff_pvz: The marketplace_service_item_dropoff_pvz of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_dropoff_pvz = marketplace_service_item_dropoff_pvz

    @property
    def marketplace_service_item_dropoff_sc(self):
        """Gets the marketplace_service_item_dropoff_sc of this PostingFinancialDataServices.  # noqa: E501

        Обработка отправления в сортировочном центре.  # noqa: E501

        :return: The marketplace_service_item_dropoff_sc of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_dropoff_sc

    @marketplace_service_item_dropoff_sc.setter
    def marketplace_service_item_dropoff_sc(self, marketplace_service_item_dropoff_sc):
        """Sets the marketplace_service_item_dropoff_sc of this PostingFinancialDataServices.

        Обработка отправления в сортировочном центре.  # noqa: E501

        :param marketplace_service_item_dropoff_sc: The marketplace_service_item_dropoff_sc of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_dropoff_sc = marketplace_service_item_dropoff_sc

    @property
    def marketplace_service_item_fulfillment(self):
        """Gets the marketplace_service_item_fulfillment of this PostingFinancialDataServices.  # noqa: E501

        Сборка заказа.  # noqa: E501

        :return: The marketplace_service_item_fulfillment of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_fulfillment

    @marketplace_service_item_fulfillment.setter
    def marketplace_service_item_fulfillment(self, marketplace_service_item_fulfillment):
        """Sets the marketplace_service_item_fulfillment of this PostingFinancialDataServices.

        Сборка заказа.  # noqa: E501

        :param marketplace_service_item_fulfillment: The marketplace_service_item_fulfillment of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_fulfillment = marketplace_service_item_fulfillment

    @property
    def marketplace_service_item_pickup(self):
        """Gets the marketplace_service_item_pickup of this PostingFinancialDataServices.  # noqa: E501

        Выезд транспортного средства по адресу продавца для забора отправлений (Pick-up).  # noqa: E501

        :return: The marketplace_service_item_pickup of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_pickup

    @marketplace_service_item_pickup.setter
    def marketplace_service_item_pickup(self, marketplace_service_item_pickup):
        """Sets the marketplace_service_item_pickup of this PostingFinancialDataServices.

        Выезд транспортного средства по адресу продавца для забора отправлений (Pick-up).  # noqa: E501

        :param marketplace_service_item_pickup: The marketplace_service_item_pickup of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_pickup = marketplace_service_item_pickup

    @property
    def marketplace_service_item_return_after_deliv_to_customer(self):
        """Gets the marketplace_service_item_return_after_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501

        Обработка возврата.  # noqa: E501

        :return: The marketplace_service_item_return_after_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_return_after_deliv_to_customer

    @marketplace_service_item_return_after_deliv_to_customer.setter
    def marketplace_service_item_return_after_deliv_to_customer(self, marketplace_service_item_return_after_deliv_to_customer):
        """Sets the marketplace_service_item_return_after_deliv_to_customer of this PostingFinancialDataServices.

        Обработка возврата.  # noqa: E501

        :param marketplace_service_item_return_after_deliv_to_customer: The marketplace_service_item_return_after_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_return_after_deliv_to_customer = marketplace_service_item_return_after_deliv_to_customer

    @property
    def marketplace_service_item_return_flow_trans(self):
        """Gets the marketplace_service_item_return_flow_trans of this PostingFinancialDataServices.  # noqa: E501

        Обратная магистраль.  # noqa: E501

        :return: The marketplace_service_item_return_flow_trans of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_return_flow_trans

    @marketplace_service_item_return_flow_trans.setter
    def marketplace_service_item_return_flow_trans(self, marketplace_service_item_return_flow_trans):
        """Sets the marketplace_service_item_return_flow_trans of this PostingFinancialDataServices.

        Обратная магистраль.  # noqa: E501

        :param marketplace_service_item_return_flow_trans: The marketplace_service_item_return_flow_trans of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_return_flow_trans = marketplace_service_item_return_flow_trans

    @property
    def marketplace_service_item_return_not_deliv_to_customer(self):
        """Gets the marketplace_service_item_return_not_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501

        Обработка отмен.  # noqa: E501

        :return: The marketplace_service_item_return_not_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_return_not_deliv_to_customer

    @marketplace_service_item_return_not_deliv_to_customer.setter
    def marketplace_service_item_return_not_deliv_to_customer(self, marketplace_service_item_return_not_deliv_to_customer):
        """Sets the marketplace_service_item_return_not_deliv_to_customer of this PostingFinancialDataServices.

        Обработка отмен.  # noqa: E501

        :param marketplace_service_item_return_not_deliv_to_customer: The marketplace_service_item_return_not_deliv_to_customer of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_return_not_deliv_to_customer = marketplace_service_item_return_not_deliv_to_customer

    @property
    def marketplace_service_item_return_part_goods_customer(self):
        """Gets the marketplace_service_item_return_part_goods_customer of this PostingFinancialDataServices.  # noqa: E501

        Обработка невыкупа.  # noqa: E501

        :return: The marketplace_service_item_return_part_goods_customer of this PostingFinancialDataServices.  # noqa: E501
        :rtype: float
        """
        return self._marketplace_service_item_return_part_goods_customer

    @marketplace_service_item_return_part_goods_customer.setter
    def marketplace_service_item_return_part_goods_customer(self, marketplace_service_item_return_part_goods_customer):
        """Sets the marketplace_service_item_return_part_goods_customer of this PostingFinancialDataServices.

        Обработка невыкупа.  # noqa: E501

        :param marketplace_service_item_return_part_goods_customer: The marketplace_service_item_return_part_goods_customer of this PostingFinancialDataServices.  # noqa: E501
        :type: float
        """

        self._marketplace_service_item_return_part_goods_customer = marketplace_service_item_return_part_goods_customer

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostingFinancialDataServices, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostingFinancialDataServices):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
