# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InvoiceGetV2ResponseResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_date': 'datetime',
        'file_url': 'str',
        'hs_codes': 'list[V2HsCode]',
        'number': 'str',
        'price': 'float',
        'price_currency': 'str'
    }

    attribute_map = {
        '_date': 'date',
        'file_url': 'file_url',
        'hs_codes': 'hs_codes',
        'number': 'number',
        'price': 'price',
        'price_currency': 'price_currency'
    }

    def __init__(self, _date=None, file_url=None, hs_codes=None, number=None, price=None, price_currency=None):  # noqa: E501
        """InvoiceGetV2ResponseResult - a model defined in Swagger"""  # noqa: E501
        self.__date = None
        self._file_url = None
        self._hs_codes = None
        self._number = None
        self._price = None
        self._price_currency = None
        self.discriminator = None
        if _date is not None:
            self._date = _date
        if file_url is not None:
            self.file_url = file_url
        if hs_codes is not None:
            self.hs_codes = hs_codes
        if number is not None:
            self.number = number
        if price is not None:
            self.price = price
        if price_currency is not None:
            self.price_currency = price_currency

    @property
    def _date(self):
        """Gets the _date of this InvoiceGetV2ResponseResult.  # noqa: E501

        Дата загрузки счёта-фактуры.  # noqa: E501

        :return: The _date of this InvoiceGetV2ResponseResult.  # noqa: E501
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this InvoiceGetV2ResponseResult.

        Дата загрузки счёта-фактуры.  # noqa: E501

        :param _date: The _date of this InvoiceGetV2ResponseResult.  # noqa: E501
        :type: datetime
        """

        self.__date = _date

    @property
    def file_url(self):
        """Gets the file_url of this InvoiceGetV2ResponseResult.  # noqa: E501

        Ссылка на счёт-фактуру.  # noqa: E501

        :return: The file_url of this InvoiceGetV2ResponseResult.  # noqa: E501
        :rtype: str
        """
        return self._file_url

    @file_url.setter
    def file_url(self, file_url):
        """Sets the file_url of this InvoiceGetV2ResponseResult.

        Ссылка на счёт-фактуру.  # noqa: E501

        :param file_url: The file_url of this InvoiceGetV2ResponseResult.  # noqa: E501
        :type: str
        """

        self._file_url = file_url

    @property
    def hs_codes(self):
        """Gets the hs_codes of this InvoiceGetV2ResponseResult.  # noqa: E501

        HS-коды товаров.  # noqa: E501

        :return: The hs_codes of this InvoiceGetV2ResponseResult.  # noqa: E501
        :rtype: list[V2HsCode]
        """
        return self._hs_codes

    @hs_codes.setter
    def hs_codes(self, hs_codes):
        """Sets the hs_codes of this InvoiceGetV2ResponseResult.

        HS-коды товаров.  # noqa: E501

        :param hs_codes: The hs_codes of this InvoiceGetV2ResponseResult.  # noqa: E501
        :type: list[V2HsCode]
        """

        self._hs_codes = hs_codes

    @property
    def number(self):
        """Gets the number of this InvoiceGetV2ResponseResult.  # noqa: E501

        Номер счёта-фактуры.  # noqa: E501

        :return: The number of this InvoiceGetV2ResponseResult.  # noqa: E501
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this InvoiceGetV2ResponseResult.

        Номер счёта-фактуры.  # noqa: E501

        :param number: The number of this InvoiceGetV2ResponseResult.  # noqa: E501
        :type: str
        """

        self._number = number

    @property
    def price(self):
        """Gets the price of this InvoiceGetV2ResponseResult.  # noqa: E501

        Стоимость, указанная в счёте-фактуре. Разделитель дробной части — точка, до двух знаков после точки. Пример: `199.99`.   # noqa: E501

        :return: The price of this InvoiceGetV2ResponseResult.  # noqa: E501
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this InvoiceGetV2ResponseResult.

        Стоимость, указанная в счёте-фактуре. Разделитель дробной части — точка, до двух знаков после точки. Пример: `199.99`.   # noqa: E501

        :param price: The price of this InvoiceGetV2ResponseResult.  # noqa: E501
        :type: float
        """

        self._price = price

    @property
    def price_currency(self):
        """Gets the price_currency of this InvoiceGetV2ResponseResult.  # noqa: E501

        Валюта счёта-фактуры: - `USD` — доллар,  - `EUR` — евро,  - `TRY` — турецкая лира,  - `CNY` — юань,  - `RUB` — рубль,  - `GBP` — фунт стерлингов.  Значение по умолчанию — `USD`.   # noqa: E501

        :return: The price_currency of this InvoiceGetV2ResponseResult.  # noqa: E501
        :rtype: str
        """
        return self._price_currency

    @price_currency.setter
    def price_currency(self, price_currency):
        """Sets the price_currency of this InvoiceGetV2ResponseResult.

        Валюта счёта-фактуры: - `USD` — доллар,  - `EUR` — евро,  - `TRY` — турецкая лира,  - `CNY` — юань,  - `RUB` — рубль,  - `GBP` — фунт стерлингов.  Значение по умолчанию — `USD`.   # noqa: E501

        :param price_currency: The price_currency of this InvoiceGetV2ResponseResult.  # noqa: E501
        :type: str
        """

        self._price_currency = price_currency

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InvoiceGetV2ResponseResult, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InvoiceGetV2ResponseResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
