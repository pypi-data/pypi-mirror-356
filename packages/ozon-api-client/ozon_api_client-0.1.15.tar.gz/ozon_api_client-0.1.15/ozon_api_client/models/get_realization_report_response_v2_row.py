# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetRealizationReportResponseV2Row(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'commission_ratio': 'float',
        'delivery_commission': 'RowItemCommission',
        'item': 'RowItem',
        'return_commission': 'RowItemCommissionReturn',
        'row_number': 'int',
        'seller_price_per_instance': 'float'
    }

    attribute_map = {
        'commission_ratio': 'commission_ratio',
        'delivery_commission': 'delivery_commission',
        'item': 'item',
        'return_commission': 'return_commission',
        'row_number': 'rowNumber',
        'seller_price_per_instance': 'seller_price_per_instance'
    }

    def __init__(self, commission_ratio=None, delivery_commission=None, item=None, return_commission=None, row_number=None, seller_price_per_instance=None):  # noqa: E501
        """GetRealizationReportResponseV2Row - a model defined in Swagger"""  # noqa: E501
        self._commission_ratio = None
        self._delivery_commission = None
        self._item = None
        self._return_commission = None
        self._row_number = None
        self._seller_price_per_instance = None
        self.discriminator = None
        if commission_ratio is not None:
            self.commission_ratio = commission_ratio
        if delivery_commission is not None:
            self.delivery_commission = delivery_commission
        if item is not None:
            self.item = item
        if return_commission is not None:
            self.return_commission = return_commission
        if row_number is not None:
            self.row_number = row_number
        if seller_price_per_instance is not None:
            self.seller_price_per_instance = seller_price_per_instance

    @property
    def commission_ratio(self):
        """Gets the commission_ratio of this GetRealizationReportResponseV2Row.  # noqa: E501

        Доля комиссии за продажу по категории.  # noqa: E501

        :return: The commission_ratio of this GetRealizationReportResponseV2Row.  # noqa: E501
        :rtype: float
        """
        return self._commission_ratio

    @commission_ratio.setter
    def commission_ratio(self, commission_ratio):
        """Sets the commission_ratio of this GetRealizationReportResponseV2Row.

        Доля комиссии за продажу по категории.  # noqa: E501

        :param commission_ratio: The commission_ratio of this GetRealizationReportResponseV2Row.  # noqa: E501
        :type: float
        """

        self._commission_ratio = commission_ratio

    @property
    def delivery_commission(self):
        """Gets the delivery_commission of this GetRealizationReportResponseV2Row.  # noqa: E501


        :return: The delivery_commission of this GetRealizationReportResponseV2Row.  # noqa: E501
        :rtype: RowItemCommission
        """
        return self._delivery_commission

    @delivery_commission.setter
    def delivery_commission(self, delivery_commission):
        """Sets the delivery_commission of this GetRealizationReportResponseV2Row.


        :param delivery_commission: The delivery_commission of this GetRealizationReportResponseV2Row.  # noqa: E501
        :type: RowItemCommission
        """

        self._delivery_commission = delivery_commission

    @property
    def item(self):
        """Gets the item of this GetRealizationReportResponseV2Row.  # noqa: E501


        :return: The item of this GetRealizationReportResponseV2Row.  # noqa: E501
        :rtype: RowItem
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this GetRealizationReportResponseV2Row.


        :param item: The item of this GetRealizationReportResponseV2Row.  # noqa: E501
        :type: RowItem
        """

        self._item = item

    @property
    def return_commission(self):
        """Gets the return_commission of this GetRealizationReportResponseV2Row.  # noqa: E501


        :return: The return_commission of this GetRealizationReportResponseV2Row.  # noqa: E501
        :rtype: RowItemCommissionReturn
        """
        return self._return_commission

    @return_commission.setter
    def return_commission(self, return_commission):
        """Sets the return_commission of this GetRealizationReportResponseV2Row.


        :param return_commission: The return_commission of this GetRealizationReportResponseV2Row.  # noqa: E501
        :type: RowItemCommissionReturn
        """

        self._return_commission = return_commission

    @property
    def row_number(self):
        """Gets the row_number of this GetRealizationReportResponseV2Row.  # noqa: E501

        Номер строки в отчёте.  # noqa: E501

        :return: The row_number of this GetRealizationReportResponseV2Row.  # noqa: E501
        :rtype: int
        """
        return self._row_number

    @row_number.setter
    def row_number(self, row_number):
        """Sets the row_number of this GetRealizationReportResponseV2Row.

        Номер строки в отчёте.  # noqa: E501

        :param row_number: The row_number of this GetRealizationReportResponseV2Row.  # noqa: E501
        :type: int
        """

        self._row_number = row_number

    @property
    def seller_price_per_instance(self):
        """Gets the seller_price_per_instance of this GetRealizationReportResponseV2Row.  # noqa: E501

        Цена продавца с учётом скидки.  # noqa: E501

        :return: The seller_price_per_instance of this GetRealizationReportResponseV2Row.  # noqa: E501
        :rtype: float
        """
        return self._seller_price_per_instance

    @seller_price_per_instance.setter
    def seller_price_per_instance(self, seller_price_per_instance):
        """Sets the seller_price_per_instance of this GetRealizationReportResponseV2Row.

        Цена продавца с учётом скидки.  # noqa: E501

        :param seller_price_per_instance: The seller_price_per_instance of this GetRealizationReportResponseV2Row.  # noqa: E501
        :type: float
        """

        self._seller_price_per_instance = seller_price_per_instance

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetRealizationReportResponseV2Row, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetRealizationReportResponseV2Row):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
