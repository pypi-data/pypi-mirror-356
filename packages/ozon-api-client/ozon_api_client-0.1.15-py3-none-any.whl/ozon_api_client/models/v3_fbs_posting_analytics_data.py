# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V3FbsPostingAnalyticsData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'city': 'str',
        'delivery_date_begin': 'datetime',
        'delivery_date_end': 'datetime',
        'delivery_type': 'str',
        'is_legal': 'bool',
        'is_premium': 'bool',
        'payment_type_group_name': 'str',
        'region': 'str',
        'tpl_provider': 'str',
        'tpl_provider_id': 'int',
        'warehouse': 'str',
        'warehouse_id': 'int'
    }

    attribute_map = {
        'city': 'city',
        'delivery_date_begin': 'delivery_date_begin',
        'delivery_date_end': 'delivery_date_end',
        'delivery_type': 'delivery_type',
        'is_legal': 'is_legal',
        'is_premium': 'is_premium',
        'payment_type_group_name': 'payment_type_group_name',
        'region': 'region',
        'tpl_provider': 'tpl_provider',
        'tpl_provider_id': 'tpl_provider_id',
        'warehouse': 'warehouse',
        'warehouse_id': 'warehouse_id'
    }

    def __init__(self, city=None, delivery_date_begin=None, delivery_date_end=None, delivery_type=None, is_legal=None, is_premium=None, payment_type_group_name=None, region=None, tpl_provider=None, tpl_provider_id=None, warehouse=None, warehouse_id=None):  # noqa: E501
        """V3FbsPostingAnalyticsData - a model defined in Swagger"""  # noqa: E501
        self._city = None
        self._delivery_date_begin = None
        self._delivery_date_end = None
        self._delivery_type = None
        self._is_legal = None
        self._is_premium = None
        self._payment_type_group_name = None
        self._region = None
        self._tpl_provider = None
        self._tpl_provider_id = None
        self._warehouse = None
        self._warehouse_id = None
        self.discriminator = None
        if city is not None:
            self.city = city
        if delivery_date_begin is not None:
            self.delivery_date_begin = delivery_date_begin
        if delivery_date_end is not None:
            self.delivery_date_end = delivery_date_end
        if delivery_type is not None:
            self.delivery_type = delivery_type
        if is_legal is not None:
            self.is_legal = is_legal
        if is_premium is not None:
            self.is_premium = is_premium
        if payment_type_group_name is not None:
            self.payment_type_group_name = payment_type_group_name
        if region is not None:
            self.region = region
        if tpl_provider is not None:
            self.tpl_provider = tpl_provider
        if tpl_provider_id is not None:
            self.tpl_provider_id = tpl_provider_id
        if warehouse is not None:
            self.warehouse = warehouse
        if warehouse_id is not None:
            self.warehouse_id = warehouse_id

    @property
    def city(self):
        """Gets the city of this V3FbsPostingAnalyticsData.  # noqa: E501

        Город доставки. Только для отправлений rFBS.  # noqa: E501

        :return: The city of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this V3FbsPostingAnalyticsData.

        Город доставки. Только для отправлений rFBS.  # noqa: E501

        :param city: The city of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def delivery_date_begin(self):
        """Gets the delivery_date_begin of this V3FbsPostingAnalyticsData.  # noqa: E501

        Дата и время начала доставки.  # noqa: E501

        :return: The delivery_date_begin of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: datetime
        """
        return self._delivery_date_begin

    @delivery_date_begin.setter
    def delivery_date_begin(self, delivery_date_begin):
        """Sets the delivery_date_begin of this V3FbsPostingAnalyticsData.

        Дата и время начала доставки.  # noqa: E501

        :param delivery_date_begin: The delivery_date_begin of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: datetime
        """

        self._delivery_date_begin = delivery_date_begin

    @property
    def delivery_date_end(self):
        """Gets the delivery_date_end of this V3FbsPostingAnalyticsData.  # noqa: E501

        Дата и время конца доставки.  # noqa: E501

        :return: The delivery_date_end of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: datetime
        """
        return self._delivery_date_end

    @delivery_date_end.setter
    def delivery_date_end(self, delivery_date_end):
        """Sets the delivery_date_end of this V3FbsPostingAnalyticsData.

        Дата и время конца доставки.  # noqa: E501

        :param delivery_date_end: The delivery_date_end of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: datetime
        """

        self._delivery_date_end = delivery_date_end

    @property
    def delivery_type(self):
        """Gets the delivery_type of this V3FbsPostingAnalyticsData.  # noqa: E501

        Способ доставки.  # noqa: E501

        :return: The delivery_type of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: str
        """
        return self._delivery_type

    @delivery_type.setter
    def delivery_type(self, delivery_type):
        """Sets the delivery_type of this V3FbsPostingAnalyticsData.

        Способ доставки.  # noqa: E501

        :param delivery_type: The delivery_type of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: str
        """

        self._delivery_type = delivery_type

    @property
    def is_legal(self):
        """Gets the is_legal of this V3FbsPostingAnalyticsData.  # noqa: E501

        Признак, что получатель юридическое лицо:   - `true` — юридическое лицо,   - `false` — физическое лицо.   # noqa: E501

        :return: The is_legal of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: bool
        """
        return self._is_legal

    @is_legal.setter
    def is_legal(self, is_legal):
        """Sets the is_legal of this V3FbsPostingAnalyticsData.

        Признак, что получатель юридическое лицо:   - `true` — юридическое лицо,   - `false` — физическое лицо.   # noqa: E501

        :param is_legal: The is_legal of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: bool
        """

        self._is_legal = is_legal

    @property
    def is_premium(self):
        """Gets the is_premium of this V3FbsPostingAnalyticsData.  # noqa: E501

        Наличие подписки Premium.  # noqa: E501

        :return: The is_premium of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: bool
        """
        return self._is_premium

    @is_premium.setter
    def is_premium(self, is_premium):
        """Sets the is_premium of this V3FbsPostingAnalyticsData.

        Наличие подписки Premium.  # noqa: E501

        :param is_premium: The is_premium of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: bool
        """

        self._is_premium = is_premium

    @property
    def payment_type_group_name(self):
        """Gets the payment_type_group_name of this V3FbsPostingAnalyticsData.  # noqa: E501

        Способ оплаты:  - `картой онлайн`, - `Ozon Карта`, - `автосписание с Ozon Карты при выдаче`, - `сохранённой картой при получении`, - `Система Быстрых Платежей`,  - `Ozon Рассрочка`,  - `оплата на расчётный счёт`, - `SberPay`.   # noqa: E501

        :return: The payment_type_group_name of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: str
        """
        return self._payment_type_group_name

    @payment_type_group_name.setter
    def payment_type_group_name(self, payment_type_group_name):
        """Sets the payment_type_group_name of this V3FbsPostingAnalyticsData.

        Способ оплаты:  - `картой онлайн`, - `Ozon Карта`, - `автосписание с Ozon Карты при выдаче`, - `сохранённой картой при получении`, - `Система Быстрых Платежей`,  - `Ozon Рассрочка`,  - `оплата на расчётный счёт`, - `SberPay`.   # noqa: E501

        :param payment_type_group_name: The payment_type_group_name of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: str
        """

        self._payment_type_group_name = payment_type_group_name

    @property
    def region(self):
        """Gets the region of this V3FbsPostingAnalyticsData.  # noqa: E501

        Регион доставки. Только для отправлений rFBS.  # noqa: E501

        :return: The region of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this V3FbsPostingAnalyticsData.

        Регион доставки. Только для отправлений rFBS.  # noqa: E501

        :param region: The region of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: str
        """

        self._region = region

    @property
    def tpl_provider(self):
        """Gets the tpl_provider of this V3FbsPostingAnalyticsData.  # noqa: E501

        Служба доставки.  # noqa: E501

        :return: The tpl_provider of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: str
        """
        return self._tpl_provider

    @tpl_provider.setter
    def tpl_provider(self, tpl_provider):
        """Sets the tpl_provider of this V3FbsPostingAnalyticsData.

        Служба доставки.  # noqa: E501

        :param tpl_provider: The tpl_provider of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: str
        """

        self._tpl_provider = tpl_provider

    @property
    def tpl_provider_id(self):
        """Gets the tpl_provider_id of this V3FbsPostingAnalyticsData.  # noqa: E501

        Идентификатор службы доставки.  # noqa: E501

        :return: The tpl_provider_id of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: int
        """
        return self._tpl_provider_id

    @tpl_provider_id.setter
    def tpl_provider_id(self, tpl_provider_id):
        """Sets the tpl_provider_id of this V3FbsPostingAnalyticsData.

        Идентификатор службы доставки.  # noqa: E501

        :param tpl_provider_id: The tpl_provider_id of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: int
        """

        self._tpl_provider_id = tpl_provider_id

    @property
    def warehouse(self):
        """Gets the warehouse of this V3FbsPostingAnalyticsData.  # noqa: E501

        Название склада отправки заказа.  # noqa: E501

        :return: The warehouse of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: str
        """
        return self._warehouse

    @warehouse.setter
    def warehouse(self, warehouse):
        """Sets the warehouse of this V3FbsPostingAnalyticsData.

        Название склада отправки заказа.  # noqa: E501

        :param warehouse: The warehouse of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: str
        """

        self._warehouse = warehouse

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this V3FbsPostingAnalyticsData.  # noqa: E501

        Идентификатор склада.  # noqa: E501

        :return: The warehouse_id of this V3FbsPostingAnalyticsData.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this V3FbsPostingAnalyticsData.

        Идентификатор склада.  # noqa: E501

        :param warehouse_id: The warehouse_id of this V3FbsPostingAnalyticsData.  # noqa: E501
        :type: int
        """

        self._warehouse_id = warehouse_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V3FbsPostingAnalyticsData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V3FbsPostingAnalyticsData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
