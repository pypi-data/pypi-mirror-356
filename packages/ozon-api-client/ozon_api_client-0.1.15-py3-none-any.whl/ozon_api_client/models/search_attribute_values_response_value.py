# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SearchAttributeValuesResponseValue(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'info': 'str',
        'picture': 'str',
        'value': 'str'
    }

    attribute_map = {
        'id': 'id',
        'info': 'info',
        'picture': 'picture',
        'value': 'value'
    }

    def __init__(self, id=None, info=None, picture=None, value=None):  # noqa: E501
        """SearchAttributeValuesResponseValue - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._info = None
        self._picture = None
        self._value = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if info is not None:
            self.info = info
        if picture is not None:
            self.picture = picture
        if value is not None:
            self.value = value

    @property
    def id(self):
        """Gets the id of this SearchAttributeValuesResponseValue.  # noqa: E501

        Идентификатор значения характеристики.  # noqa: E501

        :return: The id of this SearchAttributeValuesResponseValue.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SearchAttributeValuesResponseValue.

        Идентификатор значения характеристики.  # noqa: E501

        :param id: The id of this SearchAttributeValuesResponseValue.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def info(self):
        """Gets the info of this SearchAttributeValuesResponseValue.  # noqa: E501

        Дополнительная информация.  # noqa: E501

        :return: The info of this SearchAttributeValuesResponseValue.  # noqa: E501
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this SearchAttributeValuesResponseValue.

        Дополнительная информация.  # noqa: E501

        :param info: The info of this SearchAttributeValuesResponseValue.  # noqa: E501
        :type: str
        """

        self._info = info

    @property
    def picture(self):
        """Gets the picture of this SearchAttributeValuesResponseValue.  # noqa: E501

        Ссылка на изображение.  # noqa: E501

        :return: The picture of this SearchAttributeValuesResponseValue.  # noqa: E501
        :rtype: str
        """
        return self._picture

    @picture.setter
    def picture(self, picture):
        """Sets the picture of this SearchAttributeValuesResponseValue.

        Ссылка на изображение.  # noqa: E501

        :param picture: The picture of this SearchAttributeValuesResponseValue.  # noqa: E501
        :type: str
        """

        self._picture = picture

    @property
    def value(self):
        """Gets the value of this SearchAttributeValuesResponseValue.  # noqa: E501

        Значение характеристики товара.  # noqa: E501

        :return: The value of this SearchAttributeValuesResponseValue.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this SearchAttributeValuesResponseValue.

        Значение характеристики товара.  # noqa: E501

        :param value: The value of this SearchAttributeValuesResponseValue.  # noqa: E501
        :type: str
        """

        self._value = value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SearchAttributeValuesResponseValue, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SearchAttributeValuesResponseValue):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
