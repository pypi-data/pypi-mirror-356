# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FinanceCashFlowStatementListResponseDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'begin_balance_amount': 'float',
        'delivery': 'DetailsDeliveryDetails',
        'invoice_transfer': 'float',
        'loan': 'float',
        'payments': 'DetailsPayment',
        'period': 'V3FinanceCashFlowStatementListResponsePeriod',
        '_return': 'DetailsReturnDetails',
        'rfbs': 'DetailsRfbsDetails',
        'services': 'DetailsService',
        'others': 'DetailsOthers',
        'end_balance_amount': 'float'
    }

    attribute_map = {
        'begin_balance_amount': 'begin_balance_amount',
        'delivery': 'delivery',
        'invoice_transfer': 'invoice_transfer',
        'loan': 'loan',
        'payments': 'payments',
        'period': 'period',
        '_return': 'return',
        'rfbs': 'rfbs',
        'services': 'services',
        'others': 'others',
        'end_balance_amount': 'end_balance_amount'
    }

    def __init__(self, begin_balance_amount=None, delivery=None, invoice_transfer=None, loan=None, payments=None, period=None, _return=None, rfbs=None, services=None, others=None, end_balance_amount=None):  # noqa: E501
        """FinanceCashFlowStatementListResponseDetails - a model defined in Swagger"""  # noqa: E501
        self._begin_balance_amount = None
        self._delivery = None
        self._invoice_transfer = None
        self._loan = None
        self._payments = None
        self._period = None
        self.__return = None
        self._rfbs = None
        self._services = None
        self._others = None
        self._end_balance_amount = None
        self.discriminator = None
        if begin_balance_amount is not None:
            self.begin_balance_amount = begin_balance_amount
        if delivery is not None:
            self.delivery = delivery
        if invoice_transfer is not None:
            self.invoice_transfer = invoice_transfer
        if loan is not None:
            self.loan = loan
        if payments is not None:
            self.payments = payments
        if period is not None:
            self.period = period
        if _return is not None:
            self._return = _return
        if rfbs is not None:
            self.rfbs = rfbs
        if services is not None:
            self.services = services
        if others is not None:
            self.others = others
        if end_balance_amount is not None:
            self.end_balance_amount = end_balance_amount

    @property
    def begin_balance_amount(self):
        """Gets the begin_balance_amount of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501

        Баланс на начало периода.  # noqa: E501

        :return: The begin_balance_amount of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: float
        """
        return self._begin_balance_amount

    @begin_balance_amount.setter
    def begin_balance_amount(self, begin_balance_amount):
        """Sets the begin_balance_amount of this FinanceCashFlowStatementListResponseDetails.

        Баланс на начало периода.  # noqa: E501

        :param begin_balance_amount: The begin_balance_amount of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: float
        """

        self._begin_balance_amount = begin_balance_amount

    @property
    def delivery(self):
        """Gets the delivery of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501


        :return: The delivery of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: DetailsDeliveryDetails
        """
        return self._delivery

    @delivery.setter
    def delivery(self, delivery):
        """Sets the delivery of this FinanceCashFlowStatementListResponseDetails.


        :param delivery: The delivery of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: DetailsDeliveryDetails
        """

        self._delivery = delivery

    @property
    def invoice_transfer(self):
        """Gets the invoice_transfer of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501

        Сумма к выплате за период.  # noqa: E501

        :return: The invoice_transfer of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: float
        """
        return self._invoice_transfer

    @invoice_transfer.setter
    def invoice_transfer(self, invoice_transfer):
        """Sets the invoice_transfer of this FinanceCashFlowStatementListResponseDetails.

        Сумма к выплате за период.  # noqa: E501

        :param invoice_transfer: The invoice_transfer of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: float
        """

        self._invoice_transfer = invoice_transfer

    @property
    def loan(self):
        """Gets the loan of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501

        Перевод по договорам займа.  # noqa: E501

        :return: The loan of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: float
        """
        return self._loan

    @loan.setter
    def loan(self, loan):
        """Sets the loan of this FinanceCashFlowStatementListResponseDetails.

        Перевод по договорам займа.  # noqa: E501

        :param loan: The loan of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: float
        """

        self._loan = loan

    @property
    def payments(self):
        """Gets the payments of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501


        :return: The payments of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: DetailsPayment
        """
        return self._payments

    @payments.setter
    def payments(self, payments):
        """Sets the payments of this FinanceCashFlowStatementListResponseDetails.


        :param payments: The payments of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: DetailsPayment
        """

        self._payments = payments

    @property
    def period(self):
        """Gets the period of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501


        :return: The period of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: V3FinanceCashFlowStatementListResponsePeriod
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this FinanceCashFlowStatementListResponseDetails.


        :param period: The period of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: V3FinanceCashFlowStatementListResponsePeriod
        """

        self._period = period

    @property
    def _return(self):
        """Gets the _return of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501


        :return: The _return of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: DetailsReturnDetails
        """
        return self.__return

    @_return.setter
    def _return(self, _return):
        """Sets the _return of this FinanceCashFlowStatementListResponseDetails.


        :param _return: The _return of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: DetailsReturnDetails
        """

        self.__return = _return

    @property
    def rfbs(self):
        """Gets the rfbs of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501


        :return: The rfbs of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: DetailsRfbsDetails
        """
        return self._rfbs

    @rfbs.setter
    def rfbs(self, rfbs):
        """Sets the rfbs of this FinanceCashFlowStatementListResponseDetails.


        :param rfbs: The rfbs of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: DetailsRfbsDetails
        """

        self._rfbs = rfbs

    @property
    def services(self):
        """Gets the services of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501


        :return: The services of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: DetailsService
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this FinanceCashFlowStatementListResponseDetails.


        :param services: The services of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: DetailsService
        """

        self._services = services

    @property
    def others(self):
        """Gets the others of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501


        :return: The others of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: DetailsOthers
        """
        return self._others

    @others.setter
    def others(self, others):
        """Sets the others of this FinanceCashFlowStatementListResponseDetails.


        :param others: The others of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: DetailsOthers
        """

        self._others = others

    @property
    def end_balance_amount(self):
        """Gets the end_balance_amount of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501

        Баланс на конец периода.  # noqa: E501

        :return: The end_balance_amount of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :rtype: float
        """
        return self._end_balance_amount

    @end_balance_amount.setter
    def end_balance_amount(self, end_balance_amount):
        """Sets the end_balance_amount of this FinanceCashFlowStatementListResponseDetails.

        Баланс на конец периода.  # noqa: E501

        :param end_balance_amount: The end_balance_amount of this FinanceCashFlowStatementListResponseDetails.  # noqa: E501
        :type: float
        """

        self._end_balance_amount = end_balance_amount

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FinanceCashFlowStatementListResponseDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FinanceCashFlowStatementListResponseDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
