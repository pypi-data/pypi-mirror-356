# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DeliveryMethodListResponseDeliveryMethod(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'company_id': 'int',
        'created_at': 'datetime',
        'cutoff': 'str',
        'id': 'int',
        'name': 'str',
        'provider_id': 'int',
        'sla_cut_in': 'int',
        'status': 'str',
        'template_id': 'int',
        'updated_at': 'datetime',
        'warehouse_id': 'int'
    }

    attribute_map = {
        'company_id': 'company_id',
        'created_at': 'created_at',
        'cutoff': 'cutoff',
        'id': 'id',
        'name': 'name',
        'provider_id': 'provider_id',
        'sla_cut_in': 'sla_cut_in',
        'status': 'status',
        'template_id': 'template_id',
        'updated_at': 'updated_at',
        'warehouse_id': 'warehouse_id'
    }

    def __init__(self, company_id=None, created_at=None, cutoff=None, id=None, name=None, provider_id=None, sla_cut_in=None, status=None, template_id=None, updated_at=None, warehouse_id=None):  # noqa: E501
        """DeliveryMethodListResponseDeliveryMethod - a model defined in Swagger"""  # noqa: E501
        self._company_id = None
        self._created_at = None
        self._cutoff = None
        self._id = None
        self._name = None
        self._provider_id = None
        self._sla_cut_in = None
        self._status = None
        self._template_id = None
        self._updated_at = None
        self._warehouse_id = None
        self.discriminator = None
        if company_id is not None:
            self.company_id = company_id
        if created_at is not None:
            self.created_at = created_at
        if cutoff is not None:
            self.cutoff = cutoff
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if provider_id is not None:
            self.provider_id = provider_id
        if sla_cut_in is not None:
            self.sla_cut_in = sla_cut_in
        if status is not None:
            self.status = status
        if template_id is not None:
            self.template_id = template_id
        if updated_at is not None:
            self.updated_at = updated_at
        if warehouse_id is not None:
            self.warehouse_id = warehouse_id

    @property
    def company_id(self):
        """Gets the company_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Идентификатор продавца.  # noqa: E501

        :return: The company_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this DeliveryMethodListResponseDeliveryMethod.

        Идентификатор продавца.  # noqa: E501

        :param company_id: The company_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def created_at(self):
        """Gets the created_at of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Дата и время создания метода доставки.  # noqa: E501

        :return: The created_at of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this DeliveryMethodListResponseDeliveryMethod.

        Дата и время создания метода доставки.  # noqa: E501

        :param created_at: The created_at of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def cutoff(self):
        """Gets the cutoff of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Время, до которого продавцу нужно собрать заказ.  # noqa: E501

        :return: The cutoff of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: str
        """
        return self._cutoff

    @cutoff.setter
    def cutoff(self, cutoff):
        """Sets the cutoff of this DeliveryMethodListResponseDeliveryMethod.

        Время, до которого продавцу нужно собрать заказ.  # noqa: E501

        :param cutoff: The cutoff of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: str
        """

        self._cutoff = cutoff

    @property
    def id(self):
        """Gets the id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Идентификатор метода доставки.  # noqa: E501

        :return: The id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeliveryMethodListResponseDeliveryMethod.

        Идентификатор метода доставки.  # noqa: E501

        :param id: The id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Название метода доставки.  # noqa: E501

        :return: The name of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeliveryMethodListResponseDeliveryMethod.

        Название метода доставки.  # noqa: E501

        :param name: The name of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def provider_id(self):
        """Gets the provider_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Идентификатор службы доставки.  # noqa: E501

        :return: The provider_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: int
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this DeliveryMethodListResponseDeliveryMethod.

        Идентификатор службы доставки.  # noqa: E501

        :param provider_id: The provider_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: int
        """

        self._provider_id = provider_id

    @property
    def sla_cut_in(self):
        """Gets the sla_cut_in of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Минимальное время на сборку заказа в минутах в соответствии с настройками склада.  # noqa: E501

        :return: The sla_cut_in of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: int
        """
        return self._sla_cut_in

    @sla_cut_in.setter
    def sla_cut_in(self, sla_cut_in):
        """Sets the sla_cut_in of this DeliveryMethodListResponseDeliveryMethod.

        Минимальное время на сборку заказа в минутах в соответствии с настройками склада.  # noqa: E501

        :param sla_cut_in: The sla_cut_in of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: int
        """

        self._sla_cut_in = sla_cut_in

    @property
    def status(self):
        """Gets the status of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Статус метода доставки:   - `NEW` — создан,   - `EDITED` — редактируется,   - `ACTIVE` — активный,   - `DISABLED` — неактивный.   # noqa: E501

        :return: The status of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeliveryMethodListResponseDeliveryMethod.

        Статус метода доставки:   - `NEW` — создан,   - `EDITED` — редактируется,   - `ACTIVE` — активный,   - `DISABLED` — неактивный.   # noqa: E501

        :param status: The status of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def template_id(self):
        """Gets the template_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Идентификатор услуги по доставке заказа.  # noqa: E501

        :return: The template_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: int
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id):
        """Sets the template_id of this DeliveryMethodListResponseDeliveryMethod.

        Идентификатор услуги по доставке заказа.  # noqa: E501

        :param template_id: The template_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: int
        """

        self._template_id = template_id

    @property
    def updated_at(self):
        """Gets the updated_at of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Дата и время последнего обновления метода метода доставки.  # noqa: E501

        :return: The updated_at of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this DeliveryMethodListResponseDeliveryMethod.

        Дата и время последнего обновления метода метода доставки.  # noqa: E501

        :param updated_at: The updated_at of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501

        Идентификатор склада.  # noqa: E501

        :return: The warehouse_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this DeliveryMethodListResponseDeliveryMethod.

        Идентификатор склада.  # noqa: E501

        :param warehouse_id: The warehouse_id of this DeliveryMethodListResponseDeliveryMethod.  # noqa: E501
        :type: int
        """

        self._warehouse_id = warehouse_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DeliveryMethodListResponseDeliveryMethod, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DeliveryMethodListResponseDeliveryMethod):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
