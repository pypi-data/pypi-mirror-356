# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V2ReturnsRfbsRejectRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'return_id': 'int',
        'comment': 'str',
        'rejection_reason_id': 'int'
    }

    attribute_map = {
        'return_id': 'return_id',
        'comment': 'comment',
        'rejection_reason_id': 'rejection_reason_id'
    }

    def __init__(self, return_id=None, comment=None, rejection_reason_id=None):  # noqa: E501
        """V2ReturnsRfbsRejectRequest - a model defined in Swagger"""  # noqa: E501
        self._return_id = None
        self._comment = None
        self._rejection_reason_id = None
        self.discriminator = None
        self.return_id = return_id
        if comment is not None:
            self.comment = comment
        self.rejection_reason_id = rejection_reason_id

    @property
    def return_id(self):
        """Gets the return_id of this V2ReturnsRfbsRejectRequest.  # noqa: E501

        Идентификатор заявки на возврат.  # noqa: E501

        :return: The return_id of this V2ReturnsRfbsRejectRequest.  # noqa: E501
        :rtype: int
        """
        return self._return_id

    @return_id.setter
    def return_id(self, return_id):
        """Sets the return_id of this V2ReturnsRfbsRejectRequest.

        Идентификатор заявки на возврат.  # noqa: E501

        :param return_id: The return_id of this V2ReturnsRfbsRejectRequest.  # noqa: E501
        :type: int
        """
        if return_id is None:
            raise ValueError("Invalid value for `return_id`, must not be `None`")  # noqa: E501

        self._return_id = return_id

    @property
    def comment(self):
        """Gets the comment of this V2ReturnsRfbsRejectRequest.  # noqa: E501

        Комментарий.  Передайте комментарий, если в ответе метода [/v2/returns/rfbs/get](#operation/RFBSReturnsAPI_ReturnsRfbsGetV2) параметр `rejection_reason.is_comment_required` — `true`.   # noqa: E501

        :return: The comment of this V2ReturnsRfbsRejectRequest.  # noqa: E501
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this V2ReturnsRfbsRejectRequest.

        Комментарий.  Передайте комментарий, если в ответе метода [/v2/returns/rfbs/get](#operation/RFBSReturnsAPI_ReturnsRfbsGetV2) параметр `rejection_reason.is_comment_required` — `true`.   # noqa: E501

        :param comment: The comment of this V2ReturnsRfbsRejectRequest.  # noqa: E501
        :type: str
        """

        self._comment = comment

    @property
    def rejection_reason_id(self):
        """Gets the rejection_reason_id of this V2ReturnsRfbsRejectRequest.  # noqa: E501

        Идентификатор причины отмены.  Передайте идентификатор из списка причин, полученного в ответе метода [/v2/returns/rfbs/get](#operation/RFBSReturnsAPI_ReturnsRfbsGetV2) в параметре `rejection_reason`.   # noqa: E501

        :return: The rejection_reason_id of this V2ReturnsRfbsRejectRequest.  # noqa: E501
        :rtype: int
        """
        return self._rejection_reason_id

    @rejection_reason_id.setter
    def rejection_reason_id(self, rejection_reason_id):
        """Sets the rejection_reason_id of this V2ReturnsRfbsRejectRequest.

        Идентификатор причины отмены.  Передайте идентификатор из списка причин, полученного в ответе метода [/v2/returns/rfbs/get](#operation/RFBSReturnsAPI_ReturnsRfbsGetV2) в параметре `rejection_reason`.   # noqa: E501

        :param rejection_reason_id: The rejection_reason_id of this V2ReturnsRfbsRejectRequest.  # noqa: E501
        :type: int
        """
        if rejection_reason_id is None:
            raise ValueError("Invalid value for `rejection_reason_id`, must not be `None`")  # noqa: E501

        self._rejection_reason_id = rejection_reason_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V2ReturnsRfbsRejectRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V2ReturnsRfbsRejectRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
