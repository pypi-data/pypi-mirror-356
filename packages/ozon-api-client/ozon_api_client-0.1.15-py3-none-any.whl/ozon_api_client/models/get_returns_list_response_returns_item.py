# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetReturnsListResponseReturnsItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'exemplars': 'list[GetReturnsListResponseExemplar]',
        'id': 'int',
        'company_id': 'int',
        'return_reason_name': 'str',
        'type': 'str',
        'schema': 'str',
        'order_id': 'int',
        'order_number': 'str',
        'place': 'GetReturnsListResponsePlaceNow',
        'target_place': 'GetReturnsListResponsePlaceTarget',
        'storage': 'GetReturnsListResponseStorage',
        'product': 'GetReturnsListResponseProduct',
        'logistic': 'GetReturnsListResponseLogistic',
        'visual': 'GetReturnsListResponseVisual',
        'additional_info': 'GetReturnsListResponseAdditionalInfo',
        'source_id': 'int',
        'posting_number': 'str',
        'clearing_id': 'int',
        'return_clearing_id': 'int'
    }

    attribute_map = {
        'exemplars': 'exemplars',
        'id': 'id',
        'company_id': 'company_id',
        'return_reason_name': 'return_reason_name',
        'type': 'type',
        'schema': 'schema',
        'order_id': 'order_id',
        'order_number': 'order_number',
        'place': 'place',
        'target_place': 'target_place',
        'storage': 'storage',
        'product': 'product',
        'logistic': 'logistic',
        'visual': 'visual',
        'additional_info': 'additional_info',
        'source_id': 'source_id',
        'posting_number': 'posting_number',
        'clearing_id': 'clearing_id',
        'return_clearing_id': 'return_clearing_id'
    }

    def __init__(self, exemplars=None, id=None, company_id=None, return_reason_name=None, type=None, schema=None, order_id=None, order_number=None, place=None, target_place=None, storage=None, product=None, logistic=None, visual=None, additional_info=None, source_id=None, posting_number=None, clearing_id=None, return_clearing_id=None):  # noqa: E501
        """GetReturnsListResponseReturnsItem - a model defined in Swagger"""  # noqa: E501
        self._exemplars = None
        self._id = None
        self._company_id = None
        self._return_reason_name = None
        self._type = None
        self._schema = None
        self._order_id = None
        self._order_number = None
        self._place = None
        self._target_place = None
        self._storage = None
        self._product = None
        self._logistic = None
        self._visual = None
        self._additional_info = None
        self._source_id = None
        self._posting_number = None
        self._clearing_id = None
        self._return_clearing_id = None
        self.discriminator = None
        if exemplars is not None:
            self.exemplars = exemplars
        if id is not None:
            self.id = id
        if company_id is not None:
            self.company_id = company_id
        if return_reason_name is not None:
            self.return_reason_name = return_reason_name
        if type is not None:
            self.type = type
        if schema is not None:
            self.schema = schema
        if order_id is not None:
            self.order_id = order_id
        if order_number is not None:
            self.order_number = order_number
        if place is not None:
            self.place = place
        if target_place is not None:
            self.target_place = target_place
        if storage is not None:
            self.storage = storage
        if product is not None:
            self.product = product
        if logistic is not None:
            self.logistic = logistic
        if visual is not None:
            self.visual = visual
        if additional_info is not None:
            self.additional_info = additional_info
        if source_id is not None:
            self.source_id = source_id
        if posting_number is not None:
            self.posting_number = posting_number
        if clearing_id is not None:
            self.clearing_id = clearing_id
        if return_clearing_id is not None:
            self.return_clearing_id = return_clearing_id

    @property
    def exemplars(self):
        """Gets the exemplars of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Информация об экземплярах.  # noqa: E501

        :return: The exemplars of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: list[GetReturnsListResponseExemplar]
        """
        return self._exemplars

    @exemplars.setter
    def exemplars(self, exemplars):
        """Sets the exemplars of this GetReturnsListResponseReturnsItem.

        Информация об экземплярах.  # noqa: E501

        :param exemplars: The exemplars of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: list[GetReturnsListResponseExemplar]
        """

        self._exemplars = exemplars

    @property
    def id(self):
        """Gets the id of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Идентификатор возврата.  # noqa: E501

        :return: The id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetReturnsListResponseReturnsItem.

        Идентификатор возврата.  # noqa: E501

        :param id: The id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def company_id(self):
        """Gets the company_id of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Идентификатор продавца.  # noqa: E501

        :return: The company_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this GetReturnsListResponseReturnsItem.

        Идентификатор продавца.  # noqa: E501

        :param company_id: The company_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def return_reason_name(self):
        """Gets the return_reason_name of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Причина возврата или отмены.  # noqa: E501

        :return: The return_reason_name of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: str
        """
        return self._return_reason_name

    @return_reason_name.setter
    def return_reason_name(self, return_reason_name):
        """Sets the return_reason_name of this GetReturnsListResponseReturnsItem.

        Причина возврата или отмены.  # noqa: E501

        :param return_reason_name: The return_reason_name of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: str
        """

        self._return_reason_name = return_reason_name

    @property
    def type(self):
        """Gets the type of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Тип возврата.  # noqa: E501

        :return: The type of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetReturnsListResponseReturnsItem.

        Тип возврата.  # noqa: E501

        :param type: The type of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def schema(self):
        """Gets the schema of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Схема возврата.  # noqa: E501

        :return: The schema of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: str
        """
        return self._schema

    @schema.setter
    def schema(self, schema):
        """Sets the schema of this GetReturnsListResponseReturnsItem.

        Схема возврата.  # noqa: E501

        :param schema: The schema of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: str
        """

        self._schema = schema

    @property
    def order_id(self):
        """Gets the order_id of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Идентификатор заказа.  # noqa: E501

        :return: The order_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this GetReturnsListResponseReturnsItem.

        Идентификатор заказа.  # noqa: E501

        :param order_id: The order_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: int
        """

        self._order_id = order_id

    @property
    def order_number(self):
        """Gets the order_number of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Номер заказа.  # noqa: E501

        :return: The order_number of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: str
        """
        return self._order_number

    @order_number.setter
    def order_number(self, order_number):
        """Sets the order_number of this GetReturnsListResponseReturnsItem.

        Номер заказа.  # noqa: E501

        :param order_number: The order_number of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: str
        """

        self._order_number = order_number

    @property
    def place(self):
        """Gets the place of this GetReturnsListResponseReturnsItem.  # noqa: E501


        :return: The place of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: GetReturnsListResponsePlaceNow
        """
        return self._place

    @place.setter
    def place(self, place):
        """Sets the place of this GetReturnsListResponseReturnsItem.


        :param place: The place of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: GetReturnsListResponsePlaceNow
        """

        self._place = place

    @property
    def target_place(self):
        """Gets the target_place of this GetReturnsListResponseReturnsItem.  # noqa: E501


        :return: The target_place of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: GetReturnsListResponsePlaceTarget
        """
        return self._target_place

    @target_place.setter
    def target_place(self, target_place):
        """Sets the target_place of this GetReturnsListResponseReturnsItem.


        :param target_place: The target_place of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: GetReturnsListResponsePlaceTarget
        """

        self._target_place = target_place

    @property
    def storage(self):
        """Gets the storage of this GetReturnsListResponseReturnsItem.  # noqa: E501


        :return: The storage of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: GetReturnsListResponseStorage
        """
        return self._storage

    @storage.setter
    def storage(self, storage):
        """Sets the storage of this GetReturnsListResponseReturnsItem.


        :param storage: The storage of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: GetReturnsListResponseStorage
        """

        self._storage = storage

    @property
    def product(self):
        """Gets the product of this GetReturnsListResponseReturnsItem.  # noqa: E501


        :return: The product of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: GetReturnsListResponseProduct
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this GetReturnsListResponseReturnsItem.


        :param product: The product of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: GetReturnsListResponseProduct
        """

        self._product = product

    @property
    def logistic(self):
        """Gets the logistic of this GetReturnsListResponseReturnsItem.  # noqa: E501


        :return: The logistic of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: GetReturnsListResponseLogistic
        """
        return self._logistic

    @logistic.setter
    def logistic(self, logistic):
        """Sets the logistic of this GetReturnsListResponseReturnsItem.


        :param logistic: The logistic of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: GetReturnsListResponseLogistic
        """

        self._logistic = logistic

    @property
    def visual(self):
        """Gets the visual of this GetReturnsListResponseReturnsItem.  # noqa: E501


        :return: The visual of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: GetReturnsListResponseVisual
        """
        return self._visual

    @visual.setter
    def visual(self, visual):
        """Sets the visual of this GetReturnsListResponseReturnsItem.


        :param visual: The visual of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: GetReturnsListResponseVisual
        """

        self._visual = visual

    @property
    def additional_info(self):
        """Gets the additional_info of this GetReturnsListResponseReturnsItem.  # noqa: E501


        :return: The additional_info of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: GetReturnsListResponseAdditionalInfo
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this GetReturnsListResponseReturnsItem.


        :param additional_info: The additional_info of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: GetReturnsListResponseAdditionalInfo
        """

        self._additional_info = additional_info

    @property
    def source_id(self):
        """Gets the source_id of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Предыдущий идентификатор возврата.  # noqa: E501

        :return: The source_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: int
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this GetReturnsListResponseReturnsItem.

        Предыдущий идентификатор возврата.  # noqa: E501

        :param source_id: The source_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: int
        """

        self._source_id = source_id

    @property
    def posting_number(self):
        """Gets the posting_number of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Номер отправления.  # noqa: E501

        :return: The posting_number of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: str
        """
        return self._posting_number

    @posting_number.setter
    def posting_number(self, posting_number):
        """Sets the posting_number of this GetReturnsListResponseReturnsItem.

        Номер отправления.  # noqa: E501

        :param posting_number: The posting_number of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: str
        """

        self._posting_number = posting_number

    @property
    def clearing_id(self):
        """Gets the clearing_id of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Штрихкод изначального отправления.  # noqa: E501

        :return: The clearing_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: int
        """
        return self._clearing_id

    @clearing_id.setter
    def clearing_id(self, clearing_id):
        """Sets the clearing_id of this GetReturnsListResponseReturnsItem.

        Штрихкод изначального отправления.  # noqa: E501

        :param clearing_id: The clearing_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: int
        """

        self._clearing_id = clearing_id

    @property
    def return_clearing_id(self):
        """Gets the return_clearing_id of this GetReturnsListResponseReturnsItem.  # noqa: E501

        Возвратный штрихкод изначального отправления.  # noqa: E501

        :return: The return_clearing_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :rtype: int
        """
        return self._return_clearing_id

    @return_clearing_id.setter
    def return_clearing_id(self, return_clearing_id):
        """Sets the return_clearing_id of this GetReturnsListResponseReturnsItem.

        Возвратный штрихкод изначального отправления.  # noqa: E501

        :param return_clearing_id: The return_clearing_id of this GetReturnsListResponseReturnsItem.  # noqa: E501
        :type: int
        """

        self._return_clearing_id = return_clearing_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetReturnsListResponseReturnsItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetReturnsListResponseReturnsItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
