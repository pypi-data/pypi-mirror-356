# coding: utf-8

"""
    Документация Ozon Seller API

    По вопросам работы с Seller API обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru)  > [Информационная платформа и сообщество разработчиков Ozon for Dev](https://dev.ozon.ru/)   # noqa: E501

    OpenAPI spec version: 2.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class QuantsV1ListResponseResultQuants(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'available_actions': 'list[str]',
        'awaiting_stock_due_date': 'datetime',
        'cancel_reason': 'QuantsV1ListResponseResultQuantsCancelReason',
        'company_id': 'int',
        'created_at': 'datetime',
        'current_postings_count': 'int',
        'cutoff': 'datetime',
        'delivery_method_name': 'str',
        'destination_place_id': 'int',
        'destination_place_name': 'str',
        'filling_percent': 'float',
        'first_posting_cancellation_date': 'datetime',
        'id': 'int',
        'inv_quant_id': 'int',
        'last_status_change_at': 'datetime',
        'offer_id': 'str',
        'products_price': 'float',
        'quantum_start_date': 'datetime',
        'sku': 'int',
        'sku_name': 'str',
        'status': 'V1QuantStatus',
        'target_postings_count': 'int',
        'tpl_provider_name': 'str',
        'type': 'str',
        'warehouse_id': 'int',
        'warehouse_name': 'str'
    }

    attribute_map = {
        'available_actions': 'available_actions',
        'awaiting_stock_due_date': 'awaiting_stock_due_date',
        'cancel_reason': 'cancel_reason',
        'company_id': 'company_id',
        'created_at': 'created_at',
        'current_postings_count': 'current_postings_count',
        'cutoff': 'cutoff',
        'delivery_method_name': 'delivery_method_name',
        'destination_place_id': 'destination_place_id',
        'destination_place_name': 'destination_place_name',
        'filling_percent': 'filling_percent',
        'first_posting_cancellation_date': 'first_posting_cancellation_date',
        'id': 'id',
        'inv_quant_id': 'inv_quant_id',
        'last_status_change_at': 'last_status_change_at',
        'offer_id': 'offer_id',
        'products_price': 'products_price',
        'quantum_start_date': 'quantum_start_date',
        'sku': 'sku',
        'sku_name': 'sku_name',
        'status': 'status',
        'target_postings_count': 'target_postings_count',
        'tpl_provider_name': 'tpl_provider_name',
        'type': 'type',
        'warehouse_id': 'warehouse_id',
        'warehouse_name': 'warehouse_name'
    }

    def __init__(self, available_actions=None, awaiting_stock_due_date=None, cancel_reason=None, company_id=None, created_at=None, current_postings_count=None, cutoff=None, delivery_method_name=None, destination_place_id=None, destination_place_name=None, filling_percent=None, first_posting_cancellation_date=None, id=None, inv_quant_id=None, last_status_change_at=None, offer_id=None, products_price=None, quantum_start_date=None, sku=None, sku_name=None, status=None, target_postings_count=None, tpl_provider_name=None, type=None, warehouse_id=None, warehouse_name=None):  # noqa: E501
        """QuantsV1ListResponseResultQuants - a model defined in Swagger"""  # noqa: E501
        self._available_actions = None
        self._awaiting_stock_due_date = None
        self._cancel_reason = None
        self._company_id = None
        self._created_at = None
        self._current_postings_count = None
        self._cutoff = None
        self._delivery_method_name = None
        self._destination_place_id = None
        self._destination_place_name = None
        self._filling_percent = None
        self._first_posting_cancellation_date = None
        self._id = None
        self._inv_quant_id = None
        self._last_status_change_at = None
        self._offer_id = None
        self._products_price = None
        self._quantum_start_date = None
        self._sku = None
        self._sku_name = None
        self._status = None
        self._target_postings_count = None
        self._tpl_provider_name = None
        self._type = None
        self._warehouse_id = None
        self._warehouse_name = None
        self.discriminator = None
        if available_actions is not None:
            self.available_actions = available_actions
        if awaiting_stock_due_date is not None:
            self.awaiting_stock_due_date = awaiting_stock_due_date
        if cancel_reason is not None:
            self.cancel_reason = cancel_reason
        if company_id is not None:
            self.company_id = company_id
        if created_at is not None:
            self.created_at = created_at
        if current_postings_count is not None:
            self.current_postings_count = current_postings_count
        if cutoff is not None:
            self.cutoff = cutoff
        if delivery_method_name is not None:
            self.delivery_method_name = delivery_method_name
        if destination_place_id is not None:
            self.destination_place_id = destination_place_id
        if destination_place_name is not None:
            self.destination_place_name = destination_place_name
        if filling_percent is not None:
            self.filling_percent = filling_percent
        if first_posting_cancellation_date is not None:
            self.first_posting_cancellation_date = first_posting_cancellation_date
        if id is not None:
            self.id = id
        if inv_quant_id is not None:
            self.inv_quant_id = inv_quant_id
        if last_status_change_at is not None:
            self.last_status_change_at = last_status_change_at
        if offer_id is not None:
            self.offer_id = offer_id
        if products_price is not None:
            self.products_price = products_price
        if quantum_start_date is not None:
            self.quantum_start_date = quantum_start_date
        if sku is not None:
            self.sku = sku
        if sku_name is not None:
            self.sku_name = sku_name
        if status is not None:
            self.status = status
        if target_postings_count is not None:
            self.target_postings_count = target_postings_count
        if tpl_provider_name is not None:
            self.tpl_provider_name = tpl_provider_name
        if type is not None:
            self.type = type
        if warehouse_id is not None:
            self.warehouse_id = warehouse_id
        if warehouse_name is not None:
            self.warehouse_name = warehouse_name

    @property
    def available_actions(self):
        """Gets the available_actions of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Доступные действия с квантом.  # noqa: E501

        :return: The available_actions of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: list[str]
        """
        return self._available_actions

    @available_actions.setter
    def available_actions(self, available_actions):
        """Sets the available_actions of this QuantsV1ListResponseResultQuants.

        Доступные действия с квантом.  # noqa: E501

        :param available_actions: The available_actions of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: list[str]
        """

        self._available_actions = available_actions

    @property
    def awaiting_stock_due_date(self):
        """Gets the awaiting_stock_due_date of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Дата, до которой нужно указать остатки.  # noqa: E501

        :return: The awaiting_stock_due_date of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: datetime
        """
        return self._awaiting_stock_due_date

    @awaiting_stock_due_date.setter
    def awaiting_stock_due_date(self, awaiting_stock_due_date):
        """Sets the awaiting_stock_due_date of this QuantsV1ListResponseResultQuants.

        Дата, до которой нужно указать остатки.  # noqa: E501

        :param awaiting_stock_due_date: The awaiting_stock_due_date of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: datetime
        """

        self._awaiting_stock_due_date = awaiting_stock_due_date

    @property
    def cancel_reason(self):
        """Gets the cancel_reason of this QuantsV1ListResponseResultQuants.  # noqa: E501


        :return: The cancel_reason of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: QuantsV1ListResponseResultQuantsCancelReason
        """
        return self._cancel_reason

    @cancel_reason.setter
    def cancel_reason(self, cancel_reason):
        """Sets the cancel_reason of this QuantsV1ListResponseResultQuants.


        :param cancel_reason: The cancel_reason of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: QuantsV1ListResponseResultQuantsCancelReason
        """

        self._cancel_reason = cancel_reason

    @property
    def company_id(self):
        """Gets the company_id of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Идентификатор компании продавца.  # noqa: E501

        :return: The company_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this QuantsV1ListResponseResultQuants.

        Идентификатор компании продавца.  # noqa: E501

        :param company_id: The company_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def created_at(self):
        """Gets the created_at of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Дата создания кванта.  # noqa: E501

        :return: The created_at of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this QuantsV1ListResponseResultQuants.

        Дата создания кванта.  # noqa: E501

        :param created_at: The created_at of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def current_postings_count(self):
        """Gets the current_postings_count of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Текущее количество отправлений в кванте.  # noqa: E501

        :return: The current_postings_count of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: int
        """
        return self._current_postings_count

    @current_postings_count.setter
    def current_postings_count(self, current_postings_count):
        """Sets the current_postings_count of this QuantsV1ListResponseResultQuants.

        Текущее количество отправлений в кванте.  # noqa: E501

        :param current_postings_count: The current_postings_count of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: int
        """

        self._current_postings_count = current_postings_count

    @property
    def cutoff(self):
        """Gets the cutoff of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Время, до которого нужно собрать квант.  # noqa: E501

        :return: The cutoff of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: datetime
        """
        return self._cutoff

    @cutoff.setter
    def cutoff(self, cutoff):
        """Sets the cutoff of this QuantsV1ListResponseResultQuants.

        Время, до которого нужно собрать квант.  # noqa: E501

        :param cutoff: The cutoff of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: datetime
        """

        self._cutoff = cutoff

    @property
    def delivery_method_name(self):
        """Gets the delivery_method_name of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Метод доставки.  # noqa: E501

        :return: The delivery_method_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: str
        """
        return self._delivery_method_name

    @delivery_method_name.setter
    def delivery_method_name(self, delivery_method_name):
        """Sets the delivery_method_name of this QuantsV1ListResponseResultQuants.

        Метод доставки.  # noqa: E501

        :param delivery_method_name: The delivery_method_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: str
        """

        self._delivery_method_name = delivery_method_name

    @property
    def destination_place_id(self):
        """Gets the destination_place_id of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Идентификатор пункта назначения.  # noqa: E501

        :return: The destination_place_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: int
        """
        return self._destination_place_id

    @destination_place_id.setter
    def destination_place_id(self, destination_place_id):
        """Sets the destination_place_id of this QuantsV1ListResponseResultQuants.

        Идентификатор пункта назначения.  # noqa: E501

        :param destination_place_id: The destination_place_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: int
        """

        self._destination_place_id = destination_place_id

    @property
    def destination_place_name(self):
        """Gets the destination_place_name of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Название пункта назначения.  # noqa: E501

        :return: The destination_place_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: str
        """
        return self._destination_place_name

    @destination_place_name.setter
    def destination_place_name(self, destination_place_name):
        """Sets the destination_place_name of this QuantsV1ListResponseResultQuants.

        Название пункта назначения.  # noqa: E501

        :param destination_place_name: The destination_place_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: str
        """

        self._destination_place_name = destination_place_name

    @property
    def filling_percent(self):
        """Gets the filling_percent of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Наполненность кванта в процентах.  # noqa: E501

        :return: The filling_percent of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: float
        """
        return self._filling_percent

    @filling_percent.setter
    def filling_percent(self, filling_percent):
        """Sets the filling_percent of this QuantsV1ListResponseResultQuants.

        Наполненность кванта в процентах.  # noqa: E501

        :param filling_percent: The filling_percent of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: float
        """

        self._filling_percent = filling_percent

    @property
    def first_posting_cancellation_date(self):
        """Gets the first_posting_cancellation_date of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Дата, когда отправления начнут отменяться, если квант не будет зарезервирован.  # noqa: E501

        :return: The first_posting_cancellation_date of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: datetime
        """
        return self._first_posting_cancellation_date

    @first_posting_cancellation_date.setter
    def first_posting_cancellation_date(self, first_posting_cancellation_date):
        """Sets the first_posting_cancellation_date of this QuantsV1ListResponseResultQuants.

        Дата, когда отправления начнут отменяться, если квант не будет зарезервирован.  # noqa: E501

        :param first_posting_cancellation_date: The first_posting_cancellation_date of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: datetime
        """

        self._first_posting_cancellation_date = first_posting_cancellation_date

    @property
    def id(self):
        """Gets the id of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Идентификатор кванта в системе Ozon.  # noqa: E501

        :return: The id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this QuantsV1ListResponseResultQuants.

        Идентификатор кванта в системе Ozon.  # noqa: E501

        :param id: The id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def inv_quant_id(self):
        """Gets the inv_quant_id of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Инвентарный идентификатор кванта.  # noqa: E501

        :return: The inv_quant_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: int
        """
        return self._inv_quant_id

    @inv_quant_id.setter
    def inv_quant_id(self, inv_quant_id):
        """Sets the inv_quant_id of this QuantsV1ListResponseResultQuants.

        Инвентарный идентификатор кванта.  # noqa: E501

        :param inv_quant_id: The inv_quant_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: int
        """

        self._inv_quant_id = inv_quant_id

    @property
    def last_status_change_at(self):
        """Gets the last_status_change_at of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Дата последнего изменения статуса кванта.  # noqa: E501

        :return: The last_status_change_at of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: datetime
        """
        return self._last_status_change_at

    @last_status_change_at.setter
    def last_status_change_at(self, last_status_change_at):
        """Sets the last_status_change_at of this QuantsV1ListResponseResultQuants.

        Дата последнего изменения статуса кванта.  # noqa: E501

        :param last_status_change_at: The last_status_change_at of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: datetime
        """

        self._last_status_change_at = last_status_change_at

    @property
    def offer_id(self):
        """Gets the offer_id of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Идентификатор товара.  # noqa: E501

        :return: The offer_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this QuantsV1ListResponseResultQuants.

        Идентификатор товара.  # noqa: E501

        :param offer_id: The offer_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: str
        """

        self._offer_id = offer_id

    @property
    def products_price(self):
        """Gets the products_price of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Суммарная стоимость товаров в кванте.  # noqa: E501

        :return: The products_price of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: float
        """
        return self._products_price

    @products_price.setter
    def products_price(self, products_price):
        """Sets the products_price of this QuantsV1ListResponseResultQuants.

        Суммарная стоимость товаров в кванте.  # noqa: E501

        :param products_price: The products_price of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: float
        """

        self._products_price = products_price

    @property
    def quantum_start_date(self):
        """Gets the quantum_start_date of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Дата начала наполнения кванта.  # noqa: E501

        :return: The quantum_start_date of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: datetime
        """
        return self._quantum_start_date

    @quantum_start_date.setter
    def quantum_start_date(self, quantum_start_date):
        """Sets the quantum_start_date of this QuantsV1ListResponseResultQuants.

        Дата начала наполнения кванта.  # noqa: E501

        :param quantum_start_date: The quantum_start_date of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: datetime
        """

        self._quantum_start_date = quantum_start_date

    @property
    def sku(self):
        """Gets the sku of this QuantsV1ListResponseResultQuants.  # noqa: E501

        SKU товара.  # noqa: E501

        :return: The sku of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: int
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this QuantsV1ListResponseResultQuants.

        SKU товара.  # noqa: E501

        :param sku: The sku of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: int
        """

        self._sku = sku

    @property
    def sku_name(self):
        """Gets the sku_name of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Название товара.  # noqa: E501

        :return: The sku_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: str
        """
        return self._sku_name

    @sku_name.setter
    def sku_name(self, sku_name):
        """Sets the sku_name of this QuantsV1ListResponseResultQuants.

        Название товара.  # noqa: E501

        :param sku_name: The sku_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: str
        """

        self._sku_name = sku_name

    @property
    def status(self):
        """Gets the status of this QuantsV1ListResponseResultQuants.  # noqa: E501


        :return: The status of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: V1QuantStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this QuantsV1ListResponseResultQuants.


        :param status: The status of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: V1QuantStatus
        """

        self._status = status

    @property
    def target_postings_count(self):
        """Gets the target_postings_count of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Необходимое количество товаров в кванте.  # noqa: E501

        :return: The target_postings_count of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: int
        """
        return self._target_postings_count

    @target_postings_count.setter
    def target_postings_count(self, target_postings_count):
        """Sets the target_postings_count of this QuantsV1ListResponseResultQuants.

        Необходимое количество товаров в кванте.  # noqa: E501

        :param target_postings_count: The target_postings_count of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: int
        """

        self._target_postings_count = target_postings_count

    @property
    def tpl_provider_name(self):
        """Gets the tpl_provider_name of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Название службы доставки.  # noqa: E501

        :return: The tpl_provider_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: str
        """
        return self._tpl_provider_name

    @tpl_provider_name.setter
    def tpl_provider_name(self, tpl_provider_name):
        """Sets the tpl_provider_name of this QuantsV1ListResponseResultQuants.

        Название службы доставки.  # noqa: E501

        :param tpl_provider_name: The tpl_provider_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: str
        """

        self._tpl_provider_name = tpl_provider_name

    @property
    def type(self):
        """Gets the type of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Тип кванта — коробка или палета.  # noqa: E501

        :return: The type of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this QuantsV1ListResponseResultQuants.

        Тип кванта — коробка или палета.  # noqa: E501

        :param type: The type of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Идентификатор склада продавца.  # noqa: E501

        :return: The warehouse_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: int
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this QuantsV1ListResponseResultQuants.

        Идентификатор склада продавца.  # noqa: E501

        :param warehouse_id: The warehouse_id of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: int
        """

        self._warehouse_id = warehouse_id

    @property
    def warehouse_name(self):
        """Gets the warehouse_name of this QuantsV1ListResponseResultQuants.  # noqa: E501

        Название склада продавца.  # noqa: E501

        :return: The warehouse_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :rtype: str
        """
        return self._warehouse_name

    @warehouse_name.setter
    def warehouse_name(self, warehouse_name):
        """Sets the warehouse_name of this QuantsV1ListResponseResultQuants.

        Название склада продавца.  # noqa: E501

        :param warehouse_name: The warehouse_name of this QuantsV1ListResponseResultQuants.  # noqa: E501
        :type: str
        """

        self._warehouse_name = warehouse_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QuantsV1ListResponseResultQuants, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QuantsV1ListResponseResultQuants):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
