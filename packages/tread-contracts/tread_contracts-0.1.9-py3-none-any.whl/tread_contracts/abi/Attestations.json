[
  {
    "inputs": [
      {
        "internalType": "contract IAccessControl",
        "name": "externalAccessControl",
        "type": "address"
      },
      {
        "internalType": "contract IPausable",
        "name": "externalPausable",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "epochZeroStart",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "epochLength",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "AccessControlBadConfirmation",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "internalType": "bytes32",
        "name": "neededRole",
        "type": "bytes32"
      }
    ],
    "name": "AccessControlUnauthorizedAccount",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "target",
        "type": "address"
      }
    ],
    "name": "AddressEmptyCode",
    "type": "error"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      }
    ],
    "name": "DataAttestationDoesNotExist",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ECDSAInvalidSignature",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "length",
        "type": "uint256"
      }
    ],
    "name": "ECDSAInvalidSignatureLength",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "s",
        "type": "bytes32"
      }
    ],
    "name": "ECDSAInvalidSignatureS",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      }
    ],
    "name": "ERC1967InvalidImplementation",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ERC1967NonPayable",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "EnforcedPause",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "epoch",
        "type": "uint256"
      }
    ],
    "name": "ExpectedEpochEnded",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ExpectedPause",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "expectedSender",
        "type": "address"
      }
    ],
    "name": "ExpectedSender",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FailedInnerCall",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      }
    ],
    "name": "InvalidDataGroupId",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "dataParameterId",
        "type": "uint256"
      }
    ],
    "name": "InvalidDataParameterId",
    "type": "error"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "cid",
            "type": "string"
          }
        ],
        "internalType": "struct Attestations_Types.DataRecordWithMetadata",
        "name": "record",
        "type": "tuple"
      }
    ],
    "name": "InvalidDataRecord",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "threshold",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "groupSize",
        "type": "uint256"
      }
    ],
    "name": "InvalidGroupThresholdLessThanMajority",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidGroupWithoutMembers",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidInitialization",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "nonce",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "expectedNonce",
        "type": "uint256"
      }
    ],
    "name": "InvalidNonce",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "actual",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "expected",
        "type": "uint256"
      }
    ],
    "name": "InvalidQuorumLength",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "lastMember",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "member",
        "type": "address"
      }
    ],
    "name": "InvalidQuorumMembersOutOfOrder",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "indexA",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "indexB",
        "type": "uint256"
      }
    ],
    "name": "InvalidQuorumRecords",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "riskGroupId",
        "type": "uint256"
      }
    ],
    "name": "InvalidRiskGroupId",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "riskParameterId",
        "type": "uint256"
      }
    ],
    "name": "InvalidRiskParameterId",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "recoveredAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "expectedSigner",
        "type": "address"
      }
    ],
    "name": "InvalidSignature",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotInitializing",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "contract IAccessControl",
        "name": "ref",
        "type": "address"
      }
    ],
    "name": "ReadOnlyAccessControl",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ReentrancyGuardReentrantCall",
    "type": "error"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      }
    ],
    "name": "RiskAttestationDoesNotExist",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "signer",
        "type": "address"
      },
      {
        "internalType": "bytes32",
        "name": "digest",
        "type": "bytes32"
      }
    ],
    "name": "SignatureAlreadyUsed",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "deadline",
        "type": "uint256"
      }
    ],
    "name": "SignatureExpired",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "UUPSUnauthorizedCallContext",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "slot",
        "type": "bytes32"
      }
    ],
    "name": "UUPSUnsupportedProxiableUUID",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      }
    ],
    "name": "UnauthorizedDataAttester",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      }
    ],
    "name": "UnauthorizedRiskAttester",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "epoch",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "parameterId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "attester",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "cid",
            "type": "string"
          }
        ],
        "indexed": false,
        "internalType": "struct Attestations_Types.DataRecordWithMetadata",
        "name": "record",
        "type": "tuple"
      }
    ],
    "name": "AttestedToData",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "epoch",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "parameterId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "attester",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "int256",
            "name": "value",
            "type": "int256"
          }
        ],
        "indexed": false,
        "internalType": "struct Attestations_Types.RiskRecord",
        "name": "record",
        "type": "tuple"
      }
    ],
    "name": "AttestedToRisk",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "parameterId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "string",
            "name": "metadataName",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "metadataDescription",
            "type": "string"
          }
        ],
        "indexed": false,
        "internalType": "struct Attestations_Types.RiskParameter",
        "name": "riskParameter",
        "type": "tuple"
      }
    ],
    "name": "CreatedRiskParameter",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [],
    "name": "EIP712DomainChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "version",
        "type": "uint64"
      }
    ],
    "name": "Initialized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      }
    ],
    "name": "MapTraderToDataGroup",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "epoch",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "parameterId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          }
        ],
        "indexed": false,
        "internalType": "struct Attestations_Types.DataRecord",
        "name": "record",
        "type": "tuple"
      }
    ],
    "name": "RecordedConsensusForData",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "epoch",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "parameterId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "riskGroupId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "int256",
            "name": "value",
            "type": "int256"
          }
        ],
        "indexed": false,
        "internalType": "struct Attestations_Types.RiskRecord",
        "name": "record",
        "type": "tuple"
      }
    ],
    "name": "RecordedConsensusForRisk",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "previousAdminRole",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "newAdminRole",
        "type": "bytes32"
      }
    ],
    "name": "RoleAdminChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "RoleGranted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "RoleRevoked",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "indexed": false,
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "groupParams",
        "type": "tuple"
      }
    ],
    "name": "SetDataGroupParams",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "indexed": false,
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "groupParams",
        "type": "tuple"
      }
    ],
    "name": "SetRiskGroupParams",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "signer",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "digest",
        "type": "bytes32"
      }
    ],
    "name": "SignatureUsed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      }
    ],
    "name": "Upgraded",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "DEFAULT_ADMIN_ROLE",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "EPOCH_LENGTH",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "EPOCH_ZERO_START",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "EXT_ACCESS_CONTROL",
    "outputs": [
      {
        "internalType": "contract IAccessControl",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "EXT_PAUSABLE",
    "outputs": [
      {
        "internalType": "contract IPausable",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "UPGRADE_INTERFACE_VERSION",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "groupParams",
        "type": "tuple"
      }
    ],
    "name": "adminCreateCustomDataGroup",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      }
    ],
    "name": "adminMapTraderToDataGroup",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      }
    ],
    "name": "adminUnmapTraderToDataGroup",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "newParams",
        "type": "tuple"
      }
    ],
    "name": "adminUpdateDataGroup",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "newParams",
        "type": "tuple"
      }
    ],
    "name": "adminUpdateRiskGroup",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "cid",
            "type": "string"
          }
        ],
        "internalType": "struct Attestations_Types.DataRecordWithMetadata",
        "name": "record",
        "type": "tuple"
      }
    ],
    "name": "attestToData",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "cid",
            "type": "string"
          }
        ],
        "internalType": "struct Attestations_Types.DataRecordWithMetadata",
        "name": "record",
        "type": "tuple"
      }
    ],
    "name": "attestToDataAndTryToRecordConsensus",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "cid",
            "type": "string"
          }
        ],
        "internalType": "struct Attestations_Types.DataRecordWithMetadata",
        "name": "record",
        "type": "tuple"
      },
      {
        "internalType": "bytes",
        "name": "signature",
        "type": "bytes"
      },
      {
        "internalType": "uint256",
        "name": "nonce",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "deadline",
        "type": "uint256"
      }
    ],
    "name": "attestToDataAndTryToRecordConsensusViaSig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "int256",
            "name": "value",
            "type": "int256"
          }
        ],
        "internalType": "struct Attestations_Types.RiskRecord",
        "name": "record",
        "type": "tuple"
      }
    ],
    "name": "attestToRisk",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "int256",
            "name": "value",
            "type": "int256"
          }
        ],
        "internalType": "struct Attestations_Types.RiskRecord",
        "name": "record",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "riskGroupId",
        "type": "uint256"
      }
    ],
    "name": "attestToRiskAndTryToRecordConsensus",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address",
        "name": "attester",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "int256",
            "name": "value",
            "type": "int256"
          }
        ],
        "internalType": "struct Attestations_Types.RiskRecord",
        "name": "record",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "riskGroupId",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "signature",
        "type": "bytes"
      },
      {
        "internalType": "uint256",
        "name": "nonce",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "deadline",
        "type": "uint256"
      }
    ],
    "name": "attestToRiskAndTryToRecordConsensusViaSig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "groupParams",
        "type": "tuple"
      }
    ],
    "name": "createRiskGroup",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "metadataName",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "metadataDescription",
            "type": "string"
          }
        ],
        "internalType": "struct Attestations_Types.RiskParameter",
        "name": "riskParameter",
        "type": "tuple"
      }
    ],
    "name": "createRiskParameter",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "parameterId",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "eip712Domain",
    "outputs": [
      {
        "internalType": "bytes1",
        "name": "fields",
        "type": "bytes1"
      },
      {
        "internalType": "string",
        "name": "name",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "version",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "chainId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "verifyingContract",
        "type": "address"
      },
      {
        "internalType": "bytes32",
        "name": "salt",
        "type": "bytes32"
      },
      {
        "internalType": "uint256[]",
        "name": "extensions",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      }
    ],
    "name": "getDataGroupByGroupId",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "group",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      }
    ],
    "name": "getDataGroupByTraderId",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "group",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "traderId",
        "type": "bytes32"
      }
    ],
    "name": "getDataGroupId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "parameterId",
        "type": "uint256"
      }
    ],
    "name": "getDataParameter",
    "outputs": [
      {
        "internalType": "enum Attestations_Types.DataParameterId",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      }
    ],
    "name": "getDataRecord",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          }
        ],
        "internalType": "struct Attestations_Types.DataRecord",
        "name": "record",
        "type": "tuple"
      },
      {
        "internalType": "bool",
        "name": "hasConsensus",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      }
    ],
    "name": "getDataRecordDetails",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "cid",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "attester",
            "type": "address"
          }
        ],
        "internalType": "struct Attestations_Types.DataRecordWithAttester[]",
        "name": "attestations",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getDefaultDataGroup",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "group",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "riskGroupId",
        "type": "uint256"
      }
    ],
    "name": "getRiskGroup",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "group",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "riskParameterId",
        "type": "uint256"
      }
    ],
    "name": "getRiskParameter",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "metadataName",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "metadataDescription",
            "type": "string"
          }
        ],
        "internalType": "struct Attestations_Types.RiskParameter",
        "name": "parameter",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "riskGroupId",
        "type": "uint256"
      }
    ],
    "name": "getRiskRecord",
    "outputs": [
      {
        "components": [
          {
            "internalType": "int256",
            "name": "value",
            "type": "int256"
          }
        ],
        "internalType": "struct Attestations_Types.RiskRecord",
        "name": "record",
        "type": "tuple"
      },
      {
        "internalType": "bool",
        "name": "hasConsensus",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "riskGroupId",
        "type": "uint256"
      }
    ],
    "name": "getRiskRecordDetails",
    "outputs": [
      {
        "components": [
          {
            "internalType": "int256",
            "name": "value",
            "type": "int256"
          },
          {
            "internalType": "address",
            "name": "attester",
            "type": "address"
          }
        ],
        "internalType": "struct Attestations_Types.RiskRecordWithAttester[]",
        "name": "attestations",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      }
    ],
    "name": "getRoleAdmin",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "grantRole",
    "outputs": [],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "hasRole",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "members",
            "type": "address[]"
          }
        ],
        "internalType": "struct Attestations_Types.GroupParams",
        "name": "dataGroup",
        "type": "tuple"
      }
    ],
    "name": "initialize",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "signer",
        "type": "address"
      },
      {
        "internalType": "bytes32",
        "name": "digest",
        "type": "bytes32"
      }
    ],
    "name": "invalidateSignature",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "signer",
        "type": "address"
      },
      {
        "internalType": "bytes32",
        "name": "digest",
        "type": "bytes32"
      }
    ],
    "name": "isSignerDigestUsed",
    "outputs": [
      {
        "internalType": "bool",
        "name": "isUsed",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "paused",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "proxiableUUID",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "address[]",
        "name": "quorum",
        "type": "address[]"
      }
    ],
    "name": "recordConsensusForData",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "traderId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "epoch",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "parameterId",
            "type": "uint256"
          }
        ],
        "internalType": "struct Attestations_Types.AttestationKey",
        "name": "key",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "riskGroupId",
        "type": "uint256"
      },
      {
        "internalType": "address[]",
        "name": "quorum",
        "type": "address[]"
      }
    ],
    "name": "recordConsensusForRisk",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "renounceRole",
    "outputs": [],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "revokeRole",
    "outputs": [],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      }
    ],
    "name": "scopedRole",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newImplementation",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "upgradeToAndCall",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
]