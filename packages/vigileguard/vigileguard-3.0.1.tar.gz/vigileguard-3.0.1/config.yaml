# VigileGuard Configuration File
# Repository: https://github.com/navinnm/VigileGuard
# This file controls the behavior of security audits

# Output configuration
output_format: "console"  # Options: console, json, html
severity_filter: "INFO"   # Minimum severity to report: CRITICAL, HIGH, MEDIUM, LOW, INFO

# Checks to exclude (by class name)
excluded_checks: []
# Example:
# excluded_checks:
#   - "FilePermissionChecker"
#   - "SSHConfigChecker"

# Custom severity overrides for specific findings
severity_overrides:
  "SSH running on default port": "INFO"  # Override default severity
  
# File paths to exclude from checks
excluded_paths:
  - "/tmp"
  - "/var/tmp"
  - "/proc"
  - "/sys"
  - "/dev"

# Custom rules for file permission checks
file_permission_rules:
  # Additional sensitive files to check
  sensitive_files:
    "/etc/crontab":
      mode: "0644"
      owner: "root"
      group: "root"
    "/etc/ssh/ssh_host_rsa_key":
      mode: "0600"
      owner: "root" 
      group: "root"
    "/etc/ssh/ssh_host_ecdsa_key":
      mode: "0600"
      owner: "root"
      group: "root"
    "/etc/ssh/ssh_host_ed25519_key":
      mode: "0600"
      owner: "root"
      group: "root"

# SSH configuration checks
ssh_checks:
  # Required settings for security
  required_settings:
    PermitRootLogin: "no"
    PasswordAuthentication: "no"
    PermitEmptyPasswords: "no"
    Protocol: "2"
  
  # Recommended but not critical settings
  recommended_settings:
    Port: "22"  # Default port warning level
    MaxAuthTries: "3"
    ClientAliveInterval: "300"
    ClientAliveCountMax: "2"
    X11Forwarding: "no"
    AllowTcpForwarding: "no"

# User account checks
user_account_checks:
  # Accounts that are allowed to have empty passwords (system accounts)
  allowed_empty_password_accounts:
    - "sync"
    - "shutdown" 
    - "halt"
    - "games"
    - "ftp"
  
  # UIDs that can be duplicated (usually 0 for root)
  allowed_duplicate_uids:
    - "0"
  
  # Minimum password age (days)
  min_password_age: 1
  
  # Maximum password age (days) 
  max_password_age: 90

# Service checks
service_checks:
  # Services considered risky if running
  risky_services:
    telnet: "CRITICAL"
    rsh: "CRITICAL"
    rlogin: "CRITICAL"
    rexec: "CRITICAL"
    ftp: "HIGH"
    tftp: "HIGH"
    finger: "MEDIUM"
    echo: "LOW"
    chargen: "LOW"
    discard: "LOW"
    daytime: "LOW"
    time: "LOW"
  
  # Services that should be running (warnings if not found)
  required_services:
    - "ssh"
    - "systemd"

# File system checks
filesystem_checks:
  # Maximum allowed file size (bytes) in sensitive directories
  max_file_size_sensitive_dirs: 104857600  # 100MB
  
  # Directories to check for unusual files
  sensitive_directories:
    - "/etc"
    - "/root"
    - "/boot"
  
  # File extensions that shouldn't exist in system directories
  suspicious_extensions:
    - ".tmp"
    - ".bak" 
    - ".old"
    - ".orig"
    - ".rej"

# Network security checks
network_checks:
  # Ports that should not be open externally
  dangerous_ports:
    - 23    # Telnet
    - 512   # rexec
    - 513   # rlogin  
    - 514   # rsh
    - 515   # printer
    - 111   # portmapper
    - 2049  # NFS
  
  # Maximum number of open ports before warning
  max_open_ports: 10

# ============ PHASE 2 ADDITIONS ============

# Web server configurations (NEW)
web_servers:
  apache:
    config_paths: ["/etc/apache2", "/etc/httpd"]
    security_headers_required: true
    version_disclosure: false
    directory_browsing: false
  nginx:
    config_paths: ["/etc/nginx"]
    security_headers_required: true
    server_tokens: false
    autoindex: false

# Enhanced network security settings (NEW)
network:
  firewall:
    check_ufw: true
    check_iptables: true
    allowed_ports: [22, 80, 443]
    warn_on_public_services: true
  services:
    dangerous_services: ["telnet", "rsh", "ftp"]
    check_binding: true
    require_secure_alternatives: true

# Environment-specific configurations (NEW)
environments:
  development:
    severity_filter: "MEDIUM"
    excluded_checks: ["SSHConfigChecker"]
    notifications:
      enabled: false
  staging:
    severity_filter: "LOW"
    excluded_checks: []
    notifications:
      enabled: false  # Can enable for staging alerts
  production:
    severity_filter: "INFO"
    excluded_checks: []
    notifications:
      enabled: false  # Enable if you want production alerts

# ============ END PHASE 2 ADDITIONS ============

# Reporting options
reporting:
  # Include system information in reports
  include_system_info: true
  
  # Include remediation steps
  include_remediation: true
  
  # Group findings by category
  group_by_category: true
  
  # Show only failed checks (hide INFO level)
  show_only_issues: false
  
  # Include configuration details in JSON reports
  include_config_details: false
  
  # Maximum number of items to show in details
  max_detail_items: 20
  
  # PHASE 2: Enhanced reporting options (NEW)
  formats: ["console", "json", "html"]
  output_directory: "./reports"
  include_trends: true
  executive_summary: true
  auto_archive: true
  retention_days: 90

# Advanced options
advanced:
  # Timeout for individual commands (seconds)
  command_timeout: 30
  
  # Maximum number of files to check in each category
  max_files_per_check: 100
  
  # Enable verbose logging
  verbose: false
  
  # Parallel processing (experimental)
  enable_parallel: false
  
  # Maximum number of worker threads
  max_workers: 4

# Compliance frameworks
compliance:
  # CIS Controls mapping
  cis_controls: true
  
  # PCI DSS requirements
  pci_dss: true  # CHANGED: Enable for Phase 2 compliance reports
  
  # SOC 2 Type II
  soc2: true     # CHANGED: Enable for Phase 2 compliance reports
  
  # NIST Cybersecurity Framework
  nist_csf: true # CHANGED: Enable for Phase 2 compliance reports
  
  # PHASE 2: Additional frameworks (NEW)
  frameworks: ["PCI_DSS", "SOC_2", "NIST_CSF", "ISO_27001"]
  generate_reports: true
  mapping_detail_level: "full"

# Custom rules (extensible)
custom_rules:
  # Example custom rule
  example_rule:
    enabled: false
    description: "Example custom security rule"
    severity: "MEDIUM"
    command: "echo 'Custom check'"
    expected_output: ""

# Plugin configuration
plugins:
  # Web server plugins
  apache_plugin:
    enabled: true   # CHANGED: Enable for Phase 2 web checks
    config_path: "/etc/apache2/apache2.conf"
  
  nginx_plugin:
    enabled: true   # CHANGED: Enable for Phase 2 web checks
    config_path: "/etc/nginx/nginx.conf"
  
  # Database plugins
  mysql_plugin:
    enabled: false
    config_path: "/etc/mysql/mysql.conf.d/mysqld.cnf"
  
  postgresql_plugin:
    enabled: false
    config_path: "/etc/postgresql/*/main/postgresql.conf"

# Notification settings
notifications:
  # Email notifications
  email:
    enabled: false         # Set to true if you want email alerts
    smtp_server: ""        # e.g., "smtp.gmail.com"
    smtp_port: 587
    username: ""           # Your email username
    password: ""           # Your email password or app password
    recipients: []         # e.g., ["admin@example.com"]
  
  # Slack notifications
  slack:
    enabled: false         # Set to true if you want Slack alerts
    webhook_url: ""        # Your Slack webhook URL
    channel: "#security"
  
  # Webhook notifications
  webhook:
    enabled: false         # Set to true if you want webhook alerts
    url: ""               # Your webhook endpoint
    auth_token: ""

# PHASE 2: Scheduling (NEW) - Optional
scheduling:
  daily_scan:
    enabled: false         # Set to true to enable daily scans
    time: "02:00"         # Time to run (24-hour format)
  weekly_scan:
    enabled: false         # Set to true to enable weekly scans
    day: 0                # Day of week (0=Sunday, 6=Saturday)
    time: "03:00"         # Time to run

# PHASE 2: Logging configuration (NEW) - Optional
logging:
  level: "INFO"           # DEBUG, INFO, WARNING, ERROR
  file: "vigileguard.log" # Log file location