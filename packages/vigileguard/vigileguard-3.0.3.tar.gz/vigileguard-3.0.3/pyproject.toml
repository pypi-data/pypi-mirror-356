[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vigileguard"
version = "3.0.3"
description = "Comprehensive Linux Security Audit Tool with Phase 1 & 2 Features"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "VigileGuard Development Team", email = "security@vigileguard.dev"}
]
maintainers = [
    {name = "VigileGuard Development Team", email = "security@vigileguard.dev"}
]
keywords = [
    "security", "audit", "linux", "compliance", "vulnerability",
    "scanning", "assessment", "hardening", "monitoring", "reporting"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console", 
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Networking :: Monitoring",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.1.7",
    "rich>=13.7.0", 
    "PyYAML>=6.0.1",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8", 
    "mypy>=0.800",
    "bandit>=1.7",
    "safety>=1.10",
]
notifications = [
    "requests>=2.25.0",
]
full = [
    "requests>=2.25.0",
    "pytest>=6.0",
    "pytest-cov>=2.0",
]

[project.urls]
Homepage = "https://github.com/navinnm/VigileGuard"
Documentation = "https://github.com/navinnm/VigileGuard/blob/main/docs/"
Repository = "https://github.com/navinnm/VigileGuard"
"Bug Tracker" = "https://github.com/navinnm/VigileGuard/issues"
Changelog = "https://github.com/navinnm/VigileGuard/blob/main/CHANGELOG.md"

[project.scripts]
vigileguard = "vigileguard:main"
vigileguard-cli = "vigileguard.vigileguard:main"
vigileguard-phase2 = "vigileguard.phase2_integration:main_phase2"

[tool.setuptools]
packages = ["vigileguard"]
include-package-data = true

[tool.setuptools.package-data]
vigileguard = [
    "*.py",
    "*.yaml",
    "*.yml",
    "*.json", 
    "templates/*.html",
    "static/*.css",
    "static/*.js"
]

[tool.setuptools.package-dir]
vigileguard = "vigileguard"

# Exclude unwanted files/directories
[tool.setuptools.exclude-package-data]
"*" = [
    "*.log",
    "*.tmp",
    "*.pyc",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    ".coverage",
    "venv",
    ".venv",
    "reports",
    "logs",
]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | reports
  | logs
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Test"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
    "network: Tests requiring network access",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "rich.*",
    "click.*", 
    "yaml.*",
    "requests.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".tox",
    "reports",
    "logs",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "reports", "logs"]
skips = ["B101", "B601"]