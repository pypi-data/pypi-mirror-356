[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "coral-ml"
version = "1.0.0"
description = "Neural network weight storage and deduplication system"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Coral Contributors"},
]
keywords = [
    "machine-learning",
    "neural-networks",
    "weight-management",
    "model-versioning",
    "deduplication",
    "delta-encoding",
    "ml-ops",
    "model-storage",
    "version-control",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.21.0",
    "h5py>=3.0.0",
    "protobuf>=3.19.0",
    "xxhash>=3.0.0",
    "tqdm>=4.60.0",
    "networkx>=3.1",
    "click>=8.1.8",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "ruff>=0.1.0",
    "mypy>=0.950",
]
torch = [
    "torch>=1.10.0",
]
tensorflow = [
    "tensorflow>=2.8.0",
]

[project.scripts]
coral-ml = "coral.cli.main:main"

[project.urls]
"Homepage" = "https://github.com/parkerdgabel/coral"
"Bug Tracker" = "https://github.com/parkerdgabel/coral/issues"
"Source" = "https://github.com/parkerdgabel/coral"
"Documentation" = "https://github.com/parkerdgabel/coral#readme"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
coral = ["py.typed"]

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.uv]
# Publishing configuration
# To publish to PyPI:
# 1. Set UV_PUBLISH_TOKEN environment variable with your PyPI token
# 2. Run: uv build
# 3. Run: uv publish

# Optional: Configure test PyPI for testing
# [[tool.uv.index]]
# name = "testpypi"
# url = "https://test.pypi.org/simple/"
# publish-url = "https://test.pypi.org/legacy/"
# explicit = true
