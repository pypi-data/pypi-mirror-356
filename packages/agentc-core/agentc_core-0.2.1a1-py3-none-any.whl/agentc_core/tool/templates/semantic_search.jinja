record_kind: semantic_search

name: {{ name }}

description: >
    {{ description }}

# The inputs used to build a comparable representation for a semantic search.
# Inputs are described using a JSON object that follows the JSON schema standard.
# This field is mandatory, and will be used to build a Pydantic model.
# See https://json-schema.org/learn/getting-started-step-by-step for more info.
input: >
   <<< Replace me with your input type! >>>

# As a supplement to the tool similarity search, users can optionally specify search annotations.
# The values of these annotations MUST be strings (e.g., not 'true', but '"true"').
# This field is optional, and does not have to be present.
# annotations:
#   gdpr_2016_compliant: "false"
#   ccpa_2019_compliant: "true"

# The "secrets" field defines search keys that will be used to query a "secrets" manager.
# Note that these values are NOT the secrets themselves, rather they are used to lookup secrets.
secrets:

  # All Couchbase tools (e.g., semantic search, SQL++) must specify conn_string, username, and password.
  - couchbase:
      conn_string: CB_CONN_STRING
      username: CB_USERNAME
      password: CB_PASSWORD
      certificate: CB_CERTIFICATE

  # For cloud-hosted embedding models, a Bearer token is required.
  # If your embedding model is hosted on Capella, provide the username and password below.
  - embedding_model:
      # auth: OPENAI_API_KEY
      username: CB_USERNAME
      password: CB_PASSWORD

# Couchbase semantic search tools always involve a vector search.
vector_search:

  # A bucket, scope, and collection must be specified.
  # Semantic search across multiple collections is currently not supported.
  bucket: {{ bucket }}
  scope: {{ scope }}
  collection: {{ collection }}

  # All semantic search operations require that a (FTS) vector index is built.
  # In the future, we will relax this constraint.
  index: {{ index }}

  # The vector_field refers to the field the vector index (above) was built on.
  # In the future, we will relax the constraint that an index exists on this field.
  vector_field: {{ vector_field }}

  # The text_field is the field name used in the tool output (i.e., the results).
  # In the future, we will support multi-field tool outputs for semantic search.
  text_field: {{ text_field }}

  # The embedding model used to generate the vector_field.
  # This embedding model field value is directly passed to sentence transformers.
  # In the future, we will add support for other types of embedding models.
  embedding_model:
    name: {{ embedding_model_name }}
    {% if embedding_model_url is not none %}base_url: {{ embedding_model_url }}{% endif %}

  # The number of candidates (i.e., the K value) to request for when performing a vector top-k search.
  # This field is optional, and defaults to k=3 if not specified.
  num_candidates: 3
