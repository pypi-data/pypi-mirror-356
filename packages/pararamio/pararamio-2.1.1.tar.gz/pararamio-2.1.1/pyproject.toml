[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pararamio"
version = "2.1.1"
description = "Python client library for pararam.io platform with lazy loading"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Pararamio Team"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pylint>=2.15.0",
]

[project.urls]
Homepage = "https://gitlab.com/pararam-public/py-pararamio"
Documentation = "https://gitlab.com/pararam-public/py-pararamio/-/wikis/home"
Repository = "https://gitlab.com/pararam-public/py-pararamio"
Issues = "https://gitlab.com/pararam-public/py-pararamio/-/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["pararamio*"]

[tool.ruff]
line-length = 100
target-version = "py38"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "tests",
    "contrib",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pylint.messages_control]
max-attributes = 15
max-public-methods = 30
protected-access = "pararamio._"

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
follow_imports = "normal"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]
