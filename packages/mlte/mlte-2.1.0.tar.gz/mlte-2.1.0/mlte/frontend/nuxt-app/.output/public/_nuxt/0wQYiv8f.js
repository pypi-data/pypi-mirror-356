import{m}from"./DenydyMN.js";import{u as _,f as p}from"./hPHynIdq.js";import{h,r as v,R as y,j as g}from"./Ch47lW9D.js";import{a as b}from"./Ch7Mx1Yh.js";const R=m();function T(e,s){alert(`${e}, ${s}, has been saved successfully.`)}function M(){alert("One or more invalid fields in submission.")}function $(e){confirm("Are you sure you want to leave this page? All unsaved changes will be lost.")&&(location.href=e)}async function j(e,s,r,o){const{data:a,error:i}=await _(R.public.apiPath+"/model/"+s+"/version/"+r+"/artifact/"+o,{retry:0,method:"GET",headers:{Authorization:"Bearer "+e},onRequestError(){v()},onResponseError({response:t}){h(t.status,t._data.error_description)}},"$j-T-ZJ9XHU");return!i.value&&a.value&&b(a.value)?a.value.body:new y}function E(e,s){const r=[],o=e.results,a=e.test_suite.test_cases;for(const i in o){const t=o[i],c=a.find(n=>n.identifier===t.evidence_metadata.test_case_id);if(c===void 0){console.log("Error: Test case identifier did not match a result test_case_id.");continue}const u=[];c.qas_list.forEach(n=>{const d=s.find(f=>f.identifier===n);u.push({id:n,qa:d.quality})});const l=new g(t.type,t.evidence_metadata.measurement.measurement_class,t.evidence_metadata.test_case_id,t.message,u);r.push(l)}return r}async function D(e,s,r,o,a){const i=await p(e,s,r,o);return i.body.artifact_type==="test_results"?E(i.body,a):[]}export{D as a,$ as c,M as i,j as l,T as s};
