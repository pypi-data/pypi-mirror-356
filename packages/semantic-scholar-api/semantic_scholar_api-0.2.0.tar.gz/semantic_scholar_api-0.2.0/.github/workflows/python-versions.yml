name: Python Version Compatibility

on:
  # Run on PRs
  pull_request:
    branches: [main]
  # Run after CI workflow completes successfully on main
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]
  # Still allow manual triggering
  workflow_dispatch:

jobs:
  # For workflow_run events, check if CI succeeded
  check-ci-success:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    outputs:
      ci-passed: ${{ steps.check.outputs.result }}
    steps:
      - id: check
        run: echo "result=true" >> $GITHUB_OUTPUT

  # For PR events, run a quick CI check first
  ci-check:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run basic checks
      run: |
        uv run ruff check .
        uv run pytest --maxfail=1

  test-versions:
    needs: [check-ci-success, ci-check]
    if: ${{ always() && (needs.check-ci-success.result == 'success' || needs.ci-check.result == 'success') }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run tests
      run: |
        uv run pytest -v

    - name: Test package installation
      run: |
        uv build
        uv pip install dist/*.whl --force-reinstall

    - name: Test import
      run: |
        python -c "import semantic_scholar; print('Import successful')"
