
# Generated by CodiumAI

import pytest

from marc21 import MarcException


class TestMarcException:

    #  Creating an instance of MarcException with a reason string should not raise any exceptions.
    def test_create_instance_with_reason_string_no_exceptions(self):
        # Given
        reason = 'Invalid tag encountered'

        # When
        try:
            exception = MarcException(reason)
    
        # Then
        except Exception as e:
            pytest.fail(f"Unexpected exception raised: {e}")

        assert exception.reason == reason

    #  The reason string passed to MarcException should be accessible via the 'reason' attribute of the exception instance.
    def test_reason_string_accessible_via_attribute(self):
        # Given
        reason = 'Invalid tag encountered'
        exception = MarcException(reason)

        # When
        result = exception.reason

        # Then
        assert result == reason

    #  Raising an instance of MarcException with a reason string should raise the exception with the correct reason string.
    def test_raise_instance_with_reason_string_correct_reason(self):
        # Given
        reason = 'Invalid tag encountered'

        # When, Then
        with pytest.raises(MarcException) as e:
            raise MarcException(reason)

        assert str(e.value) == reason

    def test_raise_instance_without_reason_string(self):
        # Given
        reason = ''

        # When, Then
        with pytest.raises(MarcException) as e:
            raise MarcException(reason)

    def test_representation_of_instance(self):
        # Given
        reason = 'Invalid tag encountered'

        # When
        exception = MarcException(reason)

        # Then
        assert repr(exception) == f"MarcException: {reason}"

